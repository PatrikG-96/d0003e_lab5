
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00002154  000021e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002154  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011c  0080011c  00002204  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002204  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002234  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  00002274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003378  00000000  00000000  000024f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001267  00000000  00000000  0000586c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001848  00000000  00000000  00006ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cc0  00000000  00000000  0000831c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a38  00000000  00000000  00008fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000343f  00000000  00000000  00009a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000348  00000000  00000000  0000ce53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 a8 04 	jmp	0x950	; 0x950 <__vector_1>
       8:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__vector_2>
       c:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__vector_3>
      10:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__vector_4>
      14:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 93 0c 	jmp	0x1926	; 0x1926 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 40 0c 	jmp	0x1880	; 0x1880 <__vector_9>
      28:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__vector_10>
      2c:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__vector_11>
      30:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__vector_12>
      34:	0c 94 08 08 	jmp	0x1010	; 0x1010 <__vector_13>
      38:	0c 94 74 08 	jmp	0x10e8	; 0x10e8 <__vector_14>
      3c:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__vector_15>
      40:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__vector_16>
      44:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__vector_17>
      48:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__vector_18>
      4c:	0c 94 90 0a 	jmp	0x1520	; 0x1520 <__vector_19>
      50:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__vector_20>
      54:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__vector_21>
      58:	0c 94 d4 0b 	jmp	0x17a8	; 0x17a8 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e5       	ldi	r30, 0x54	; 84
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 31       	cpi	r26, 0x1C	; 28
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e1       	ldi	r26, 0x1C	; 28
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	af 36       	cpi	r26, 0x6F	; 111
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 8c 03 	call	0x718	; 0x718 <main>
      92:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <swap_lights>:
		self->traffic_lights[SOUTH] = GREEN;
	}
	manage_lights(self, 0);
}

void swap_lights(Controller *self, int arg0) {
      9a:	fc 01       	movw	r30, r24
	self->traffic_lights[self->current_direction] = false;
      9c:	86 85       	ldd	r24, Z+14	; 0x0e
      9e:	df 01       	movw	r26, r30
      a0:	a8 0f       	add	r26, r24
      a2:	b1 1d       	adc	r27, r1
      a4:	1c 96       	adiw	r26, 0x0c	; 12
      a6:	1c 92       	st	X, r1
	if (self->current_direction == NORTH) {
      a8:	88 23       	and	r24, r24
      aa:	59 f0       	breq	.+22     	; 0xc2 <swap_lights+0x28>
		self->current_direction = SOUTH;
	}
	else {
		self->current_direction = NORTH;
      ac:	16 86       	std	Z+14, r1	; 0x0e
      ae:	a0 e0       	ldi	r26, 0x00	; 0
      b0:	b0 e0       	ldi	r27, 0x00	; 0
	}
	self->traffic_lights[self->current_direction] = TRUE;
      b2:	ae 0f       	add	r26, r30
      b4:	bf 1f       	adc	r27, r31
      b6:	81 e0       	ldi	r24, 0x01	; 1
      b8:	1c 96       	adiw	r26, 0x0c	; 12
      ba:	8c 93       	st	X, r24

	self->cars_allowed = MAX_CARS_ON_LANE;
      bc:	85 e0       	ldi	r24, 0x05	; 5
      be:	87 87       	std	Z+15, r24	; 0x0f
      c0:	08 95       	ret
}

void swap_lights(Controller *self, int arg0) {
	self->traffic_lights[self->current_direction] = false;
	if (self->current_direction == NORTH) {
		self->current_direction = SOUTH;
      c2:	81 e0       	ldi	r24, 0x01	; 1
      c4:	86 87       	std	Z+14, r24	; 0x0e
      c6:	a1 e0       	ldi	r26, 0x01	; 1
      c8:	b0 e0       	ldi	r27, 0x00	; 0
	}
	else {
		self->current_direction = NORTH;
	}
	self->traffic_lights[self->current_direction] = TRUE;
      ca:	ae 0f       	add	r26, r30
      cc:	bf 1f       	adc	r27, r31
      ce:	81 e0       	ldi	r24, 0x01	; 1
      d0:	1c 96       	adiw	r26, 0x0c	; 12
      d2:	8c 93       	st	X, r24

	self->cars_allowed = MAX_CARS_ON_LANE;
      d4:	85 e0       	ldi	r24, 0x05	; 5
      d6:	87 87       	std	Z+15, r24	; 0x0f
      d8:	08 95       	ret

000000da <manage_lights>:

}

void manage_lights(Controller *self, int arg0) {
      da:	cf 92       	push	r12
      dc:	df 92       	push	r13
      de:	ef 92       	push	r14
      e0:	ff 92       	push	r15
      e2:	0f 93       	push	r16
      e4:	1f 93       	push	r17
      e6:	cf 93       	push	r28
      e8:	df 93       	push	r29
      ea:	ec 01       	movw	r28, r24
	
	// If both queues are empty
	if (self->queues[NORTH]==0 && self->queues[SOUTH] == 0) {
      ec:	88 85       	ldd	r24, Y+8	; 0x08
      ee:	99 85       	ldd	r25, Y+9	; 0x09
      f0:	89 2b       	or	r24, r25
      f2:	09 f0       	breq	.+2      	; 0xf6 <manage_lights+0x1c>
      f4:	46 c0       	rjmp	.+140    	; 0x182 <manage_lights+0xa8>
      f6:	8a 85       	ldd	r24, Y+10	; 0x0a
      f8:	9b 85       	ldd	r25, Y+11	; 0x0b
      fa:	89 2b       	or	r24, r25
      fc:	09 f0       	breq	.+2      	; 0x100 <manage_lights+0x26>
      fe:	41 c0       	rjmp	.+130    	; 0x182 <manage_lights+0xa8>
		self->active = false;
     100:	1a 8a       	std	Y+18, r1	; 0x12
		self->traffic_lights[NORTH] = false;
     102:	1c 86       	std	Y+12, r1	; 0x0c
		self->traffic_lights[SOUTH] = false;
     104:	1d 86       	std	Y+13, r1	; 0x0d
	else if (self->queues[self->current_direction] == 0) {
		self->traffic_lights[self->current_direction] = false;
	}
	
	// If we let in the maximum amount of cars allowed from one direction
	if (self->cars_allowed == 0) {
     106:	8f 85       	ldd	r24, Y+15	; 0x0f
     108:	81 11       	cpse	r24, r1
     10a:	62 c0       	rjmp	.+196    	; 0x1d0 <manage_lights+0xf6>
     10c:	2e 85       	ldd	r18, Y+14	; 0x0e
		// If there is a queue in the other direction, turn off the light 
		if (self->queues[!self->current_direction] > 0) {
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	21 11       	cpse	r18, r1
     114:	4f c0       	rjmp	.+158    	; 0x1b4 <manage_lights+0xda>
     116:	fc 01       	movw	r30, r24
     118:	34 96       	adiw	r30, 0x04	; 4
     11a:	ee 0f       	add	r30, r30
     11c:	ff 1f       	adc	r31, r31
     11e:	ec 0f       	add	r30, r28
     120:	fd 1f       	adc	r31, r29
     122:	80 81       	ld	r24, Z
     124:	91 81       	ldd	r25, Z+1	; 0x01
     126:	18 16       	cp	r1, r24
     128:	19 06       	cpc	r1, r25
     12a:	0c f0       	brlt	.+2      	; 0x12e <manage_lights+0x54>
     12c:	4e c0       	rjmp	.+156    	; 0x1ca <manage_lights+0xf0>
			self->traffic_lights[self->current_direction] = false;
     12e:	fe 01       	movw	r30, r28
     130:	e2 0f       	add	r30, r18
     132:	f1 1d       	adc	r31, r1
     134:	14 86       	std	Z+12, r1	; 0x0c
			// When we let in another car, cars_allowed will be 0 again, so if there's a queue in the other direction then, we turn off light
		}
		
	}
	
	if (self->traffic_lights[NORTH]) {
     136:	8c 85       	ldd	r24, Y+12	; 0x0c
     138:	88 23       	and	r24, r24
     13a:	09 f4       	brne	.+2      	; 0x13e <manage_lights+0x64>
     13c:	41 c0       	rjmp	.+130    	; 0x1c0 <manage_lights+0xe6>
		self->output |= (1 << LIGHT_BIT_N_G);
     13e:	8b 89       	ldd	r24, Y+19	; 0x13
     140:	81 60       	ori	r24, 0x01	; 1
     142:	8b 8b       	std	Y+19, r24	; 0x13
     144:	9d 85       	ldd	r25, Y+13	; 0x0d
	}
	else {
		self->output |= (1 << LIGHT_BIT_N_R);
	}
	if (self->traffic_lights[SOUTH]) {
     146:	91 11       	cpse	r25, r1
     148:	38 c0       	rjmp	.+112    	; 0x1ba <manage_lights+0xe0>
		self->output |= (1 << LIGHT_BIT_S_G);
	}
	else {
		self->output |= (1 << LIGHT_BIT_S_R);
     14a:	88 60       	ori	r24, 0x08	; 8
     14c:	8b 8b       	std	Y+19, r24	; 0x13
	}
	
	ASYNC(self->writer, set_output, self->output);
     14e:	c8 2e       	mov	r12, r24
     150:	d1 2c       	mov	r13, r1
     152:	0e 81       	ldd	r16, Y+6	; 0x06
     154:	1f 81       	ldd	r17, Y+7	; 0x07
     156:	8c ec       	ldi	r24, 0xCC	; 204
     158:	e8 2e       	mov	r14, r24
     15a:	83 e0       	ldi	r24, 0x03	; 3
     15c:	f8 2e       	mov	r15, r24
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	a9 01       	movw	r20, r18
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	70 e0       	ldi	r23, 0x00	; 0
     168:	cb 01       	movw	r24, r22
     16a:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	self->output = 0;
     16e:	1b 8a       	std	Y+19, r1	; 0x13
}
     170:	df 91       	pop	r29
     172:	cf 91       	pop	r28
     174:	1f 91       	pop	r17
     176:	0f 91       	pop	r16
     178:	ff 90       	pop	r15
     17a:	ef 90       	pop	r14
     17c:	df 90       	pop	r13
     17e:	cf 90       	pop	r12
     180:	08 95       	ret
		self->traffic_lights[NORTH] = false;
		self->traffic_lights[SOUTH] = false;
	}
	
	// If current queue is empty or we've allowed a specified number of cars in a row 
	else if (self->queues[self->current_direction] == 0) {
     182:	2e 85       	ldd	r18, Y+14	; 0x0e
     184:	82 2f       	mov	r24, r18
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	fc 01       	movw	r30, r24
     18a:	34 96       	adiw	r30, 0x04	; 4
     18c:	ee 0f       	add	r30, r30
     18e:	ff 1f       	adc	r31, r31
     190:	ec 0f       	add	r30, r28
     192:	fd 1f       	adc	r31, r29
     194:	40 81       	ld	r20, Z
     196:	51 81       	ldd	r21, Z+1	; 0x01
     198:	45 2b       	or	r20, r21
     19a:	21 f4       	brne	.+8      	; 0x1a4 <manage_lights+0xca>
		self->traffic_lights[self->current_direction] = false;
     19c:	fe 01       	movw	r30, r28
     19e:	e8 0f       	add	r30, r24
     1a0:	f9 1f       	adc	r31, r25
     1a2:	14 86       	std	Z+12, r1	; 0x0c
	}
	
	// If we let in the maximum amount of cars allowed from one direction
	if (self->cars_allowed == 0) {
     1a4:	8f 85       	ldd	r24, Y+15	; 0x0f
     1a6:	81 11       	cpse	r24, r1
     1a8:	c6 cf       	rjmp	.-116    	; 0x136 <manage_lights+0x5c>
		// If there is a queue in the other direction, turn off the light 
		if (self->queues[!self->current_direction] > 0) {
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	22 23       	and	r18, r18
     1b0:	09 f4       	brne	.+2      	; 0x1b4 <manage_lights+0xda>
     1b2:	b1 cf       	rjmp	.-158    	; 0x116 <manage_lights+0x3c>
     1b4:	80 e0       	ldi	r24, 0x00	; 0
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	ae cf       	rjmp	.-164    	; 0x116 <manage_lights+0x3c>
	}
	else {
		self->output |= (1 << LIGHT_BIT_N_R);
	}
	if (self->traffic_lights[SOUTH]) {
		self->output |= (1 << LIGHT_BIT_S_G);
     1ba:	84 60       	ori	r24, 0x04	; 4
     1bc:	8b 8b       	std	Y+19, r24	; 0x13
     1be:	c7 cf       	rjmp	.-114    	; 0x14e <manage_lights+0x74>
     1c0:	9d 85       	ldd	r25, Y+13	; 0x0d
	
	if (self->traffic_lights[NORTH]) {
		self->output |= (1 << LIGHT_BIT_N_G);
	}
	else {
		self->output |= (1 << LIGHT_BIT_N_R);
     1c2:	8b 89       	ldd	r24, Y+19	; 0x13
     1c4:	82 60       	ori	r24, 0x02	; 2
     1c6:	8b 8b       	std	Y+19, r24	; 0x13
     1c8:	be cf       	rjmp	.-132    	; 0x146 <manage_lights+0x6c>
		if (self->queues[!self->current_direction] > 0) {
			self->traffic_lights[self->current_direction] = false;
		}
		else {
			// If we let in the max amount but there are no cars in the other queue, allow another car
			self->cars_allowed++;
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	8f 87       	std	Y+15, r24	; 0x0f
     1ce:	b3 cf       	rjmp	.-154    	; 0x136 <manage_lights+0x5c>
	else if (self->queues[self->current_direction] == 0) {
		self->traffic_lights[self->current_direction] = false;
	}
	
	// If we let in the maximum amount of cars allowed from one direction
	if (self->cars_allowed == 0) {
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	f7 cf       	rjmp	.-18     	; 0x1c2 <manage_lights+0xe8>

000001d4 <enqueue_north>:
 *  Author: shirt
 */ 

#include "Controller.h"

void enqueue_north(Controller *self, int arg0) {
     1d4:	cf 92       	push	r12
     1d6:	df 92       	push	r13
     1d8:	ef 92       	push	r14
     1da:	ff 92       	push	r15
     1dc:	0f 93       	push	r16
     1de:	1f 93       	push	r17
     1e0:	cf 93       	push	r28
     1e2:	df 93       	push	r29
     1e4:	ec 01       	movw	r28, r24

	self->queues[NORTH]++;
     1e6:	c8 84       	ldd	r12, Y+8	; 0x08
     1e8:	d9 84       	ldd	r13, Y+9	; 0x09
     1ea:	8f ef       	ldi	r24, 0xFF	; 255
     1ec:	c8 1a       	sub	r12, r24
     1ee:	d8 0a       	sbc	r13, r24
     1f0:	d9 86       	std	Y+9, r13	; 0x09
     1f2:	c8 86       	std	Y+8, r12	; 0x08
	ASYNC(self->gui, update_north, self->queues[NORTH]);
     1f4:	0c 81       	ldd	r16, Y+4	; 0x04
     1f6:	1d 81       	ldd	r17, Y+5	; 0x05
     1f8:	84 e1       	ldi	r24, 0x14	; 20
     1fa:	e8 2e       	mov	r14, r24
     1fc:	82 e0       	ldi	r24, 0x02	; 2
     1fe:	f8 2e       	mov	r15, r24
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	a9 01       	movw	r20, r18
     206:	60 e0       	ldi	r22, 0x00	; 0
     208:	70 e0       	ldi	r23, 0x00	; 0
     20a:	cb 01       	movw	r24, r22
     20c:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	if (!self->active) {
     210:	8a 89       	ldd	r24, Y+18	; 0x12
     212:	81 11       	cpse	r24, r1
     214:	03 c0       	rjmp	.+6      	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
		self->active = true;
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	8a 8b       	std	Y+18, r24	; 0x12
		self->traffic_lights[NORTH] = GREEN;
     21a:	8c 87       	std	Y+12, r24	; 0x0c
	}
	manage_lights(self, 0);
     21c:	60 e0       	ldi	r22, 0x00	; 0
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	ce 01       	movw	r24, r28
}
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	ef 90       	pop	r14
     22e:	df 90       	pop	r13
     230:	cf 90       	pop	r12
	ASYNC(self->gui, update_north, self->queues[NORTH]);
	if (!self->active) {
		self->active = true;
		self->traffic_lights[NORTH] = GREEN;
	}
	manage_lights(self, 0);
     232:	0c 94 6d 00 	jmp	0xda	; 0xda <manage_lights>

00000236 <enqueue_south>:
}

void enqueue_south(Controller *self, int arg0) {
     236:	cf 92       	push	r12
     238:	df 92       	push	r13
     23a:	ef 92       	push	r14
     23c:	ff 92       	push	r15
     23e:	0f 93       	push	r16
     240:	1f 93       	push	r17
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	ec 01       	movw	r28, r24

	self->queues[SOUTH]++;
     248:	ca 84       	ldd	r12, Y+10	; 0x0a
     24a:	db 84       	ldd	r13, Y+11	; 0x0b
     24c:	8f ef       	ldi	r24, 0xFF	; 255
     24e:	c8 1a       	sub	r12, r24
     250:	d8 0a       	sbc	r13, r24
     252:	db 86       	std	Y+11, r13	; 0x0b
     254:	ca 86       	std	Y+10, r12	; 0x0a
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
     256:	0c 81       	ldd	r16, Y+4	; 0x04
     258:	1d 81       	ldd	r17, Y+5	; 0x05
     25a:	84 e2       	ldi	r24, 0x24	; 36
     25c:	e8 2e       	mov	r14, r24
     25e:	82 e0       	ldi	r24, 0x02	; 2
     260:	f8 2e       	mov	r15, r24
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	a9 01       	movw	r20, r18
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	cb 01       	movw	r24, r22
     26e:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	if (!self->active) {
     272:	8a 89       	ldd	r24, Y+18	; 0x12
     274:	81 11       	cpse	r24, r1
     276:	03 c0       	rjmp	.+6      	; 0x27e <enqueue_south+0x48>
		self->active = true;
     278:	81 e0       	ldi	r24, 0x01	; 1
     27a:	8a 8b       	std	Y+18, r24	; 0x12
		self->traffic_lights[SOUTH] = GREEN;
     27c:	8d 87       	std	Y+13, r24	; 0x0d
	}
	manage_lights(self, 0);
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	70 e0       	ldi	r23, 0x00	; 0
     282:	ce 01       	movw	r24, r28
}
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	1f 91       	pop	r17
     28a:	0f 91       	pop	r16
     28c:	ff 90       	pop	r15
     28e:	ef 90       	pop	r14
     290:	df 90       	pop	r13
     292:	cf 90       	pop	r12
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	if (!self->active) {
		self->active = true;
		self->traffic_lights[SOUTH] = GREEN;
	}
	manage_lights(self, 0);
     294:	0c 94 6d 00 	jmp	0xda	; 0xda <manage_lights>

00000298 <exit_lane>:
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	AFTER(MSEC(CAR_PASSING_TIME), self, exit_lane, 0);
	manage_lights(self, 0);
}

void exit_lane(Controller *self, int arg0) {
     298:	cf 92       	push	r12
     29a:	df 92       	push	r13
     29c:	ef 92       	push	r14
     29e:	ff 92       	push	r15
     2a0:	0f 93       	push	r16
     2a2:	1f 93       	push	r17
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	ec 01       	movw	r28, r24
	self->current_cars--;
     2aa:	c8 88       	ldd	r12, Y+16	; 0x10
     2ac:	d9 88       	ldd	r13, Y+17	; 0x11
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	c8 1a       	sub	r12, r24
     2b2:	d1 08       	sbc	r13, r1
     2b4:	d9 8a       	std	Y+17, r13	; 0x11
     2b6:	c8 8a       	std	Y+16, r12	; 0x10
	if (self->current_cars == 0) {
     2b8:	c1 14       	cp	r12, r1
     2ba:	d1 04       	cpc	r13, r1
     2bc:	89 f4       	brne	.+34     	; 0x2e0 <exit_lane+0x48>
		ASYNC(self, swap_lights, 0);
     2be:	c1 2c       	mov	r12, r1
     2c0:	d1 2c       	mov	r13, r1
     2c2:	3d e4       	ldi	r19, 0x4D	; 77
     2c4:	e3 2e       	mov	r14, r19
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	f3 2e       	mov	r15, r19
     2ca:	8e 01       	movw	r16, r28
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	a9 01       	movw	r20, r18
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	70 e0       	ldi	r23, 0x00	; 0
     2d6:	cb 01       	movw	r24, r22
     2d8:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
     2dc:	c8 88       	ldd	r12, Y+16	; 0x10
     2de:	d9 88       	ldd	r13, Y+17	; 0x11
	}
	ASYNC(self->gui, update_current, self->current_cars);
     2e0:	0c 81       	ldd	r16, Y+4	; 0x04
     2e2:	1d 81       	ldd	r17, Y+5	; 0x05
     2e4:	8c e1       	ldi	r24, 0x1C	; 28
     2e6:	e8 2e       	mov	r14, r24
     2e8:	82 e0       	ldi	r24, 0x02	; 2
     2ea:	f8 2e       	mov	r15, r24
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	a9 01       	movw	r20, r18
     2f2:	60 e0       	ldi	r22, 0x00	; 0
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	cb 01       	movw	r24, r22
     2f8:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	ASYNC(self->gui, update_north, self->queues[NORTH]);
     2fc:	c8 84       	ldd	r12, Y+8	; 0x08
     2fe:	d9 84       	ldd	r13, Y+9	; 0x09
     300:	0c 81       	ldd	r16, Y+4	; 0x04
     302:	1d 81       	ldd	r17, Y+5	; 0x05
     304:	94 e1       	ldi	r25, 0x14	; 20
     306:	e9 2e       	mov	r14, r25
     308:	92 e0       	ldi	r25, 0x02	; 2
     30a:	f9 2e       	mov	r15, r25
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	a9 01       	movw	r20, r18
     312:	60 e0       	ldi	r22, 0x00	; 0
     314:	70 e0       	ldi	r23, 0x00	; 0
     316:	cb 01       	movw	r24, r22
     318:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
     31c:	ca 84       	ldd	r12, Y+10	; 0x0a
     31e:	db 84       	ldd	r13, Y+11	; 0x0b
     320:	0c 81       	ldd	r16, Y+4	; 0x04
     322:	1d 81       	ldd	r17, Y+5	; 0x05
     324:	24 e2       	ldi	r18, 0x24	; 36
     326:	e2 2e       	mov	r14, r18
     328:	22 e0       	ldi	r18, 0x02	; 2
     32a:	f2 2e       	mov	r15, r18
     32c:	20 e0       	ldi	r18, 0x00	; 0
     32e:	30 e0       	ldi	r19, 0x00	; 0
     330:	a9 01       	movw	r20, r18
     332:	60 e0       	ldi	r22, 0x00	; 0
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	cb 01       	movw	r24, r22
     338:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	manage_lights(self, 0);
     33c:	60 e0       	ldi	r22, 0x00	; 0
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	ce 01       	movw	r24, r28
}
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	1f 91       	pop	r17
     348:	0f 91       	pop	r16
     34a:	ff 90       	pop	r15
     34c:	ef 90       	pop	r14
     34e:	df 90       	pop	r13
     350:	cf 90       	pop	r12
		ASYNC(self, swap_lights, 0);
	}
	ASYNC(self->gui, update_current, self->current_cars);
	ASYNC(self->gui, update_north, self->queues[NORTH]);
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	manage_lights(self, 0);
     352:	0c 94 6d 00 	jmp	0xda	; 0xda <manage_lights>

00000356 <enter_lane>:
	self->output = 0;
}



void enter_lane(Controller *self, int arg0) {
     356:	cf 92       	push	r12
     358:	df 92       	push	r13
     35a:	ef 92       	push	r14
     35c:	ff 92       	push	r15
     35e:	0f 93       	push	r16
     360:	1f 93       	push	r17
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	ec 01       	movw	r28, r24
	self->queues[self->current_direction]--;
     368:	ee 85       	ldd	r30, Y+14	; 0x0e
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	ee 0f       	add	r30, r30
     36e:	ff 1f       	adc	r31, r31
     370:	ec 0f       	add	r30, r28
     372:	fd 1f       	adc	r31, r29
     374:	80 85       	ldd	r24, Z+8	; 0x08
     376:	91 85       	ldd	r25, Z+9	; 0x09
     378:	01 97       	sbiw	r24, 0x01	; 1
     37a:	91 87       	std	Z+9, r25	; 0x09
     37c:	80 87       	std	Z+8, r24	; 0x08
	self->cars_allowed--;
     37e:	8f 85       	ldd	r24, Y+15	; 0x0f
     380:	81 50       	subi	r24, 0x01	; 1
     382:	8f 87       	std	Y+15, r24	; 0x0f
	self->current_cars++;
     384:	c8 88       	ldd	r12, Y+16	; 0x10
     386:	d9 88       	ldd	r13, Y+17	; 0x11
     388:	8f ef       	ldi	r24, 0xFF	; 255
     38a:	c8 1a       	sub	r12, r24
     38c:	d8 0a       	sbc	r13, r24
     38e:	d9 8a       	std	Y+17, r13	; 0x11
     390:	c8 8a       	std	Y+16, r12	; 0x10
	ASYNC(self->gui, update_current, self->current_cars);
     392:	0c 81       	ldd	r16, Y+4	; 0x04
     394:	1d 81       	ldd	r17, Y+5	; 0x05
     396:	9c e1       	ldi	r25, 0x1C	; 28
     398:	e9 2e       	mov	r14, r25
     39a:	92 e0       	ldi	r25, 0x02	; 2
     39c:	f9 2e       	mov	r15, r25
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	a9 01       	movw	r20, r18
     3a4:	60 e0       	ldi	r22, 0x00	; 0
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	cb 01       	movw	r24, r22
     3aa:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	ASYNC(self->gui, update_north, self->queues[NORTH]);
     3ae:	c8 84       	ldd	r12, Y+8	; 0x08
     3b0:	d9 84       	ldd	r13, Y+9	; 0x09
     3b2:	0c 81       	ldd	r16, Y+4	; 0x04
     3b4:	1d 81       	ldd	r17, Y+5	; 0x05
     3b6:	24 e1       	ldi	r18, 0x14	; 20
     3b8:	e2 2e       	mov	r14, r18
     3ba:	22 e0       	ldi	r18, 0x02	; 2
     3bc:	f2 2e       	mov	r15, r18
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	a9 01       	movw	r20, r18
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	cb 01       	movw	r24, r22
     3ca:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
     3ce:	ca 84       	ldd	r12, Y+10	; 0x0a
     3d0:	db 84       	ldd	r13, Y+11	; 0x0b
     3d2:	0c 81       	ldd	r16, Y+4	; 0x04
     3d4:	1d 81       	ldd	r17, Y+5	; 0x05
     3d6:	34 e2       	ldi	r19, 0x24	; 36
     3d8:	e3 2e       	mov	r14, r19
     3da:	32 e0       	ldi	r19, 0x02	; 2
     3dc:	f3 2e       	mov	r15, r19
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	a9 01       	movw	r20, r18
     3e4:	60 e0       	ldi	r22, 0x00	; 0
     3e6:	70 e0       	ldi	r23, 0x00	; 0
     3e8:	cb 01       	movw	r24, r22
     3ea:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	AFTER(MSEC(CAR_PASSING_TIME), self, exit_lane, 0);
     3ee:	c1 2c       	mov	r12, r1
     3f0:	d1 2c       	mov	r13, r1
     3f2:	4c e4       	ldi	r20, 0x4C	; 76
     3f4:	e4 2e       	mov	r14, r20
     3f6:	41 e0       	ldi	r20, 0x01	; 1
     3f8:	f4 2e       	mov	r15, r20
     3fa:	8e 01       	movw	r16, r28
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	a9 01       	movw	r20, r18
     402:	6a e5       	ldi	r22, 0x5A	; 90
     404:	72 e6       	ldi	r23, 0x62	; 98
     406:	82 e0       	ldi	r24, 0x02	; 2
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	manage_lights(self, 0);
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	ce 01       	movw	r24, r28
}
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	1f 91       	pop	r17
     41a:	0f 91       	pop	r16
     41c:	ff 90       	pop	r15
     41e:	ef 90       	pop	r14
     420:	df 90       	pop	r13
     422:	cf 90       	pop	r12
	self->current_cars++;
	ASYNC(self->gui, update_current, self->current_cars);
	ASYNC(self->gui, update_north, self->queues[NORTH]);
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	AFTER(MSEC(CAR_PASSING_TIME), self, exit_lane, 0);
	manage_lights(self, 0);
     424:	0c 94 6d 00 	jmp	0xda	; 0xda <manage_lights>

00000428 <update_north>:
 */ 
#include "GUI.h"

void update_north(GUI *self, int arg0) {

	printAt(arg0, 0);
     428:	07 2e       	mov	r0, r23
     42a:	00 0c       	add	r0, r0
     42c:	88 0b       	sbc	r24, r24
     42e:	99 0b       	sbc	r25, r25
     430:	40 e0       	ldi	r20, 0x00	; 0
     432:	50 e0       	ldi	r21, 0x00	; 0
     434:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <printAt>

00000438 <update_current>:

void update_current(GUI *self, int arg0) {
	

	
	printAt(arg0, 2);
     438:	07 2e       	mov	r0, r23
     43a:	00 0c       	add	r0, r0
     43c:	88 0b       	sbc	r24, r24
     43e:	99 0b       	sbc	r25, r25
     440:	42 e0       	ldi	r20, 0x02	; 2
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <printAt>

00000448 <update_south>:

void update_south(GUI *self, int arg0) {
	

	
	printAt(arg0, 4);
     448:	07 2e       	mov	r0, r23
     44a:	00 0c       	add	r0, r0
     44c:	88 0b       	sbc	r24, r24
     44e:	99 0b       	sbc	r25, r25
     450:	44 e0       	ldi	r20, 0x04	; 4
     452:	50 e0       	ldi	r21, 0x00	; 0
     454:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <printAt>

00000458 <start_gui>:
	
}

void start_gui(GUI *self, int arg0) {
	if (!self->initialized) {
     458:	fc 01       	movw	r30, r24
     45a:	84 81       	ldd	r24, Z+4	; 0x04
     45c:	81 11       	cpse	r24, r1
     45e:	02 c0       	rjmp	.+4      	; 0x464 <start_gui+0xc>
		initLCD();
     460:	0e 94 3f 03 	call	0x67e	; 0x67e <initLCD>
	}
	printAt(0, 0);
     464:	40 e0       	ldi	r20, 0x00	; 0
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	cb 01       	movw	r24, r22
     46e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <printAt>
	printAt(0, 2);
     472:	42 e0       	ldi	r20, 0x02	; 2
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	60 e0       	ldi	r22, 0x00	; 0
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	cb 01       	movw	r24, r22
     47c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <printAt>
	printAt(0, 4);
     480:	44 e0       	ldi	r20, 0x04	; 4
     482:	50 e0       	ldi	r21, 0x00	; 0
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	70 e0       	ldi	r23, 0x00	; 0
     488:	cb 01       	movw	r24, r22
     48a:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <printAt>

0000048e <parse_interrupt>:
 *  Author: shirt
 */ 

#include "InterruptHandler.h"

void parse_interrupt(InterruptHandler *self, int arg0) {
     48e:	af 92       	push	r10
     490:	bf 92       	push	r11
     492:	cf 92       	push	r12
     494:	df 92       	push	r13
     496:	ef 92       	push	r14
     498:	ff 92       	push	r15
     49a:	0f 93       	push	r16
     49c:	1f 93       	push	r17
     49e:	cf 93       	push	r28
     4a0:	5c 01       	movw	r10, r24
	
	uint8_t data = UDR0;
     4a2:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	
	if ((data >> NORTH_ARRIVAL_BIT ) & 1) {
     4a6:	c0 fd       	sbrc	r28, 0
     4a8:	45 c0       	rjmp	.+138    	; 0x534 <__stack+0x35>
		ASYNC(self->controller, enqueue_north, 0);
	}
	if ((data >> NORTH_ENTRY_BIT ) & 1) {
     4aa:	c1 fd       	sbrc	r28, 1
     4ac:	31 c0       	rjmp	.+98     	; 0x510 <__stack+0x11>
		ASYNC(self->controller, enter_lane, 0);
	}
	if ((data >> SOUTH_ARRIVAL_BIT ) & 1) {
     4ae:	c2 fd       	sbrc	r28, 2
     4b0:	1d c0       	rjmp	.+58     	; 0x4ec <parse_interrupt+0x5e>
		ASYNC(self->controller, enqueue_south, 0);
	}
	if ((data >> SOUTH_ENTRY_BIT) & 1) {
     4b2:	c3 ff       	sbrs	r28, 3
     4b4:	11 c0       	rjmp	.+34     	; 0x4d8 <parse_interrupt+0x4a>
		ASYNC(self->controller, enter_lane, 0);
     4b6:	f5 01       	movw	r30, r10
     4b8:	04 81       	ldd	r16, Z+4	; 0x04
     4ba:	15 81       	ldd	r17, Z+5	; 0x05
     4bc:	c1 2c       	mov	r12, r1
     4be:	d1 2c       	mov	r13, r1
     4c0:	8b ea       	ldi	r24, 0xAB	; 171
     4c2:	e8 2e       	mov	r14, r24
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	f8 2e       	mov	r15, r24
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	a9 01       	movw	r20, r18
     4ce:	60 e0       	ldi	r22, 0x00	; 0
     4d0:	70 e0       	ldi	r23, 0x00	; 0
     4d2:	cb 01       	movw	r24, r22
     4d4:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	}

	
}
     4d8:	cf 91       	pop	r28
     4da:	1f 91       	pop	r17
     4dc:	0f 91       	pop	r16
     4de:	ff 90       	pop	r15
     4e0:	ef 90       	pop	r14
     4e2:	df 90       	pop	r13
     4e4:	cf 90       	pop	r12
     4e6:	bf 90       	pop	r11
     4e8:	af 90       	pop	r10
     4ea:	08 95       	ret
	}
	if ((data >> NORTH_ENTRY_BIT ) & 1) {
		ASYNC(self->controller, enter_lane, 0);
	}
	if ((data >> SOUTH_ARRIVAL_BIT ) & 1) {
		ASYNC(self->controller, enqueue_south, 0);
     4ec:	f5 01       	movw	r30, r10
     4ee:	04 81       	ldd	r16, Z+4	; 0x04
     4f0:	15 81       	ldd	r17, Z+5	; 0x05
     4f2:	c1 2c       	mov	r12, r1
     4f4:	d1 2c       	mov	r13, r1
     4f6:	9b e1       	ldi	r25, 0x1B	; 27
     4f8:	e9 2e       	mov	r14, r25
     4fa:	91 e0       	ldi	r25, 0x01	; 1
     4fc:	f9 2e       	mov	r15, r25
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	a9 01       	movw	r20, r18
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	cb 01       	movw	r24, r22
     50a:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
     50e:	d1 cf       	rjmp	.-94     	; 0x4b2 <parse_interrupt+0x24>
	
	if ((data >> NORTH_ARRIVAL_BIT ) & 1) {
		ASYNC(self->controller, enqueue_north, 0);
	}
	if ((data >> NORTH_ENTRY_BIT ) & 1) {
		ASYNC(self->controller, enter_lane, 0);
     510:	f5 01       	movw	r30, r10
     512:	04 81       	ldd	r16, Z+4	; 0x04
     514:	15 81       	ldd	r17, Z+5	; 0x05
     516:	c1 2c       	mov	r12, r1
     518:	d1 2c       	mov	r13, r1
     51a:	2b ea       	ldi	r18, 0xAB	; 171
     51c:	e2 2e       	mov	r14, r18
     51e:	21 e0       	ldi	r18, 0x01	; 1
     520:	f2 2e       	mov	r15, r18
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	a9 01       	movw	r20, r18
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	cb 01       	movw	r24, r22
     52e:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
     532:	bd cf       	rjmp	.-134    	; 0x4ae <parse_interrupt+0x20>
void parse_interrupt(InterruptHandler *self, int arg0) {
	
	uint8_t data = UDR0;
	
	if ((data >> NORTH_ARRIVAL_BIT ) & 1) {
		ASYNC(self->controller, enqueue_north, 0);
     534:	fc 01       	movw	r30, r24
     536:	04 81       	ldd	r16, Z+4	; 0x04
     538:	15 81       	ldd	r17, Z+5	; 0x05
     53a:	c1 2c       	mov	r12, r1
     53c:	d1 2c       	mov	r13, r1
     53e:	3a ee       	ldi	r19, 0xEA	; 234
     540:	e3 2e       	mov	r14, r19
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	f3 2e       	mov	r15, r19
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	a9 01       	movw	r20, r18
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	cb 01       	movw	r24, r22
     552:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
     556:	a9 cf       	rjmp	.-174    	; 0x4aa <parse_interrupt+0x1c>

00000558 <init>:
	}

	
}

void init(InterruptHandler *self, int arg0) {
     558:	cf 92       	push	r12
     55a:	df 92       	push	r13
     55c:	ef 92       	push	r14
     55e:	ff 92       	push	r15
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
	// Enable reciever and transmitter
	//UCSR0B = (1<<RXEN0) | (1<<TXEN0);
	
	// Set frame format: 8 data, 1 stop bit
	//UCSR0C = ~(1<<USBS0) | (3 << UCSZ00);
	UBRR0H = ubrr>>8;
     564:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = ubrr;
     568:	23 e3       	ldi	r18, 0x33	; 51
     56a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	UCSR0B = (1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
     56e:	28 e9       	ldi	r18, 0x98	; 152
     570:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
	UCSR0C = (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
     574:	2e e0       	ldi	r18, 0x0E	; 14
     576:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
	
	ASYNC(self->controller->gui, start_gui, 0);
     57a:	dc 01       	movw	r26, r24
     57c:	14 96       	adiw	r26, 0x04	; 4
     57e:	ed 91       	ld	r30, X+
     580:	fc 91       	ld	r31, X
     582:	15 97       	sbiw	r26, 0x05	; 5
     584:	04 81       	ldd	r16, Z+4	; 0x04
     586:	15 81       	ldd	r17, Z+5	; 0x05
     588:	c1 2c       	mov	r12, r1
     58a:	d1 2c       	mov	r13, r1
     58c:	8c e2       	ldi	r24, 0x2C	; 44
     58e:	e8 2e       	mov	r14, r24
     590:	82 e0       	ldi	r24, 0x02	; 2
     592:	f8 2e       	mov	r15, r24
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	a9 01       	movw	r20, r18
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	cb 01       	movw	r24, r22
     5a0:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
	//UDR0 = 5;
     5a4:	1f 91       	pop	r17
     5a6:	0f 91       	pop	r16
     5a8:	ff 90       	pop	r15
     5aa:	ef 90       	pop	r14
     5ac:	df 90       	pop	r13
     5ae:	cf 90       	pop	r12
     5b0:	08 95       	ret

000005b2 <writeChar.part.0>:
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	ab 01       	movw	r20, r22
     5b8:	41 70       	andi	r20, 0x01	; 1
     5ba:	50 78       	andi	r21, 0x80	; 128
     5bc:	57 fd       	sbrc	r21, 7
     5be:	54 c0       	rjmp	.+168    	; 0x668 <writeChar.part.0+0xb6>
     5c0:	77 fd       	sbrc	r23, 7
     5c2:	5a c0       	rjmp	.+180    	; 0x678 <writeChar.part.0+0xc6>
     5c4:	75 95       	asr	r23
     5c6:	67 95       	ror	r22
     5c8:	fb 01       	movw	r30, r22
     5ca:	e4 51       	subi	r30, 0x14	; 20
     5cc:	ff 4f       	sbci	r31, 0xFF	; 255
     5ce:	28 2f       	mov	r18, r24
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	20 53       	subi	r18, 0x30	; 48
     5d4:	31 09       	sbc	r19, r1
     5d6:	2a 30       	cpi	r18, 0x0A	; 10
     5d8:	31 05       	cpc	r19, r1
     5da:	08 f0       	brcs	.+2      	; 0x5de <writeChar.part.0+0x2c>
     5dc:	42 c0       	rjmp	.+132    	; 0x662 <writeChar.part.0+0xb0>
     5de:	80 53       	subi	r24, 0x30	; 48
     5e0:	a8 2f       	mov	r26, r24
     5e2:	b0 e0       	ldi	r27, 0x00	; 0
     5e4:	aa 0f       	add	r26, r26
     5e6:	bb 1f       	adc	r27, r27
     5e8:	a8 5f       	subi	r26, 0xF8	; 248
     5ea:	be 4f       	sbci	r27, 0xFE	; 254
     5ec:	0d 90       	ld	r0, X+
     5ee:	bc 91       	ld	r27, X
     5f0:	a0 2d       	mov	r26, r0
     5f2:	44 0f       	add	r20, r20
     5f4:	55 1f       	adc	r21, r21
     5f6:	44 0f       	add	r20, r20
     5f8:	55 1f       	adc	r21, r21
     5fa:	8f e0       	ldi	r24, 0x0F	; 15
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	04 2e       	mov	r0, r20
     600:	01 c0       	rjmp	.+2      	; 0x604 <writeChar.part.0+0x52>
     602:	88 0f       	add	r24, r24
     604:	0a 94       	dec	r0
     606:	ea f7       	brpl	.-6      	; 0x602 <writeChar.part.0+0x50>
     608:	d8 2f       	mov	r29, r24
     60a:	c8 2f       	mov	r28, r24
     60c:	c0 95       	com	r28
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	70 e0       	ldi	r23, 0x00	; 0
     612:	86 e0       	ldi	r24, 0x06	; 6
     614:	9a 2f       	mov	r25, r26
     616:	9f 70       	andi	r25, 0x0F	; 15
     618:	30 81       	ld	r19, Z
     61a:	23 2f       	mov	r18, r19
     61c:	04 2e       	mov	r0, r20
     61e:	01 c0       	rjmp	.+2      	; 0x622 <writeChar.part.0+0x70>
     620:	22 0f       	add	r18, r18
     622:	0a 94       	dec	r0
     624:	ea f7       	brpl	.-6      	; 0x620 <writeChar.part.0+0x6e>
     626:	82 23       	and	r24, r18
     628:	89 2b       	or	r24, r25
     62a:	04 2e       	mov	r0, r20
     62c:	01 c0       	rjmp	.+2      	; 0x630 <writeChar.part.0+0x7e>
     62e:	88 0f       	add	r24, r24
     630:	0a 94       	dec	r0
     632:	ea f7       	brpl	.-6      	; 0x62e <writeChar.part.0+0x7c>
     634:	8d 23       	and	r24, r29
     636:	90 81       	ld	r25, Z
     638:	9c 23       	and	r25, r28
     63a:	90 83       	st	Z, r25
     63c:	90 81       	ld	r25, Z
     63e:	89 2b       	or	r24, r25
     640:	80 83       	st	Z, r24
     642:	b2 95       	swap	r27
     644:	a2 95       	swap	r26
     646:	af 70       	andi	r26, 0x0F	; 15
     648:	ab 27       	eor	r26, r27
     64a:	bf 70       	andi	r27, 0x0F	; 15
     64c:	ab 27       	eor	r26, r27
     64e:	35 96       	adiw	r30, 0x05	; 5
     650:	6f 5f       	subi	r22, 0xFF	; 255
     652:	7f 4f       	sbci	r23, 0xFF	; 255
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	64 30       	cpi	r22, 0x04	; 4
     658:	71 05       	cpc	r23, r1
     65a:	e1 f6       	brne	.-72     	; 0x614 <writeChar.part.0+0x62>
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	08 95       	ret
     662:	a0 e0       	ldi	r26, 0x00	; 0
     664:	b0 e0       	ldi	r27, 0x00	; 0
     666:	c5 cf       	rjmp	.-118    	; 0x5f2 <writeChar.part.0+0x40>
     668:	41 50       	subi	r20, 0x01	; 1
     66a:	51 09       	sbc	r21, r1
     66c:	4e 6f       	ori	r20, 0xFE	; 254
     66e:	5f 6f       	ori	r21, 0xFF	; 255
     670:	4f 5f       	subi	r20, 0xFF	; 255
     672:	5f 4f       	sbci	r21, 0xFF	; 255
     674:	77 ff       	sbrs	r23, 7
     676:	a6 cf       	rjmp	.-180    	; 0x5c4 <writeChar.part.0+0x12>
     678:	6f 5f       	subi	r22, 0xFF	; 255
     67a:	7f 4f       	sbci	r23, 0xFF	; 255
     67c:	a3 cf       	rjmp	.-186    	; 0x5c4 <writeChar.part.0+0x12>

0000067e <initLCD>:
     67e:	e1 e6       	ldi	r30, 0x61	; 97
     680:	f0 e0       	ldi	r31, 0x00	; 0
     682:	80 e8       	ldi	r24, 0x80	; 128
     684:	80 83       	st	Z, r24
     686:	10 82       	st	Z, r1
     688:	87 eb       	ldi	r24, 0xB7	; 183
     68a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     68e:	87 e0       	ldi	r24, 0x07	; 7
     690:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     694:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     698:	80 ec       	ldi	r24, 0xC0	; 192
     69a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     69e:	08 95       	ret

000006a0 <printAt>:
     6a0:	cf 92       	push	r12
     6a2:	df 92       	push	r13
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	6b 01       	movw	r12, r22
     6ae:	7c 01       	movw	r14, r24
     6b0:	ea 01       	movw	r28, r20
     6b2:	46 30       	cpi	r20, 0x06	; 6
     6b4:	51 05       	cpc	r21, r1
     6b6:	f4 f0       	brlt	.+60     	; 0x6f4 <printAt+0x54>
     6b8:	21 96       	adiw	r28, 0x01	; 1
     6ba:	c6 30       	cpi	r28, 0x06	; 6
     6bc:	d1 05       	cpc	r29, r1
     6be:	3c f0       	brlt	.+14     	; 0x6ce <printAt+0x2e>
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	ff 90       	pop	r15
     6c6:	ef 90       	pop	r14
     6c8:	df 90       	pop	r13
     6ca:	cf 90       	pop	r12
     6cc:	08 95       	ret
     6ce:	c7 01       	movw	r24, r14
     6d0:	b6 01       	movw	r22, r12
     6d2:	2a e0       	ldi	r18, 0x0A	; 10
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	40 e0       	ldi	r20, 0x00	; 0
     6d8:	50 e0       	ldi	r21, 0x00	; 0
     6da:	0e 94 26 10 	call	0x204c	; 0x204c <__divmodsi4>
     6de:	86 2f       	mov	r24, r22
     6e0:	be 01       	movw	r22, r28
     6e2:	80 5d       	subi	r24, 0xD0	; 208
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	ff 90       	pop	r15
     6ea:	ef 90       	pop	r14
     6ec:	df 90       	pop	r13
     6ee:	cf 90       	pop	r12
     6f0:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <writeChar.part.0>
     6f4:	24 e6       	ldi	r18, 0x64	; 100
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	0e 94 26 10 	call	0x204c	; 0x204c <__divmodsi4>
     700:	2a e0       	ldi	r18, 0x0A	; 10
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	40 e0       	ldi	r20, 0x00	; 0
     706:	50 e0       	ldi	r21, 0x00	; 0
     708:	0e 94 26 10 	call	0x204c	; 0x204c <__divmodsi4>
     70c:	be 01       	movw	r22, r28
     70e:	80 e3       	ldi	r24, 0x30	; 48
     710:	82 0f       	add	r24, r18
     712:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <writeChar.part.0>
     716:	d0 cf       	rjmp	.-96     	; 0x6b8 <printAt+0x18>

00000718 <main>:
#include "InterruptHandler.h"
#include "GUI.h"
#include "SerialWriter.h"

int main(void)
{
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	cd b7       	in	r28, 0x3d	; 61
     71e:	de b7       	in	r29, 0x3e	; 62
     720:	a5 97       	sbiw	r28, 0x25	; 37
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	f8 94       	cli
     726:	de bf       	out	0x3e, r29	; 62
     728:	0f be       	out	0x3f, r0	; 63
     72a:	cd bf       	out	0x3d, r28	; 61
	//return 0;
	SerialWriter wr = initSerialWriter();
     72c:	1c 8e       	std	Y+28, r1	; 0x1c
     72e:	1b 8e       	std	Y+27, r1	; 0x1b
     730:	1e 8e       	std	Y+30, r1	; 0x1e
     732:	1d 8e       	std	Y+29, r1	; 0x1d
     734:	18 a2       	std	Y+32, r1	; 0x20
     736:	1f 8e       	std	Y+31, r1	; 0x1f
	GUI gui = initGUI();
     738:	1a a2       	std	Y+34, r1	; 0x22
     73a:	19 a2       	std	Y+33, r1	; 0x21
     73c:	1c a2       	std	Y+36, r1	; 0x24
     73e:	1b a2       	std	Y+35, r1	; 0x23
     740:	1d a2       	std	Y+37, r1	; 0x25
	Controller c = initController(&gui, &wr);
     742:	fe 01       	movw	r30, r28
     744:	31 96       	adiw	r30, 0x01	; 1
     746:	84 e1       	ldi	r24, 0x14	; 20
     748:	df 01       	movw	r26, r30
     74a:	1d 92       	st	X+, r1
     74c:	8a 95       	dec	r24
     74e:	e9 f7       	brne	.-6      	; 0x74a <main+0x32>
     750:	ce 01       	movw	r24, r28
     752:	81 96       	adiw	r24, 0x21	; 33
     754:	9e 83       	std	Y+6, r25	; 0x06
     756:	8d 83       	std	Y+5, r24	; 0x05
     758:	06 97       	sbiw	r24, 0x06	; 6
     75a:	98 87       	std	Y+8, r25	; 0x08
     75c:	8f 83       	std	Y+7, r24	; 0x07
    InterruptHandler i = initInterruptHandler(&c);
     75e:	1e 8a       	std	Y+22, r1	; 0x16
     760:	1d 8a       	std	Y+21, r1	; 0x15
     762:	18 8e       	std	Y+24, r1	; 0x18
     764:	1f 8a       	std	Y+23, r1	; 0x17
     766:	fa 8f       	std	Y+26, r31	; 0x1a
     768:	e9 8f       	std	Y+25, r30	; 0x19
    INSTALL(&i, parse_interrupt, IRQ_USART0_RX);
     76a:	48 e0       	ldi	r20, 0x08	; 8
     76c:	67 e4       	ldi	r22, 0x47	; 71
     76e:	72 e0       	ldi	r23, 0x02	; 2
     770:	06 97       	sbiw	r24, 0x06	; 6
     772:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <install>
    //INSTALL(&i, parse_interrupt, IRQ_PCINT1);
    return TINYTIMBER(&i, init, 0);
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	6c ea       	ldi	r22, 0xAC	; 172
     77c:	72 e0       	ldi	r23, 0x02	; 2
     77e:	ce 01       	movw	r24, r28
     780:	45 96       	adiw	r24, 0x15	; 21
     782:	0e 94 0a 10 	call	0x2014	; 0x2014 <tinytimber>
}
     786:	a5 96       	adiw	r28, 0x25	; 37
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	08 95       	ret

00000798 <set_output>:
 */ 

#include "SerialWriter.h"

void set_output(SerialWriter *self, int arg0) {
	self->output = arg0;
     798:	fc 01       	movw	r30, r24
     79a:	64 83       	std	Z+4, r22	; 0x04
     79c:	75 83       	std	Z+5, r23	; 0x05
	UDR0 = self->output;
     79e:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     7a2:	08 95       	ret

000007a4 <initialize>:
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
     7a8:	00 d0       	rcall	.+0      	; 0x7aa <initialize+0x6>
     7aa:	00 d0       	rcall	.+0      	; 0x7ac <initialize+0x8>
     7ac:	cd b7       	in	r28, 0x3d	; 61
     7ae:	de b7       	in	r29, 0x3e	; 62
     7b0:	8f e0       	ldi	r24, 0x0F	; 15
     7b2:	92 e0       	ldi	r25, 0x02	; 2
     7b4:	2f ee       	ldi	r18, 0xEF	; 239
     7b6:	32 e0       	ldi	r19, 0x02	; 2
     7b8:	fc 01       	movw	r30, r24
     7ba:	70 97       	sbiw	r30, 0x10	; 16
     7bc:	91 83       	std	Z+1, r25	; 0x01
     7be:	80 83       	st	Z, r24
     7c0:	40 96       	adiw	r24, 0x10	; 16
     7c2:	82 17       	cp	r24, r18
     7c4:	93 07       	cpc	r25, r19
     7c6:	c1 f7       	brne	.-16     	; 0x7b8 <initialize+0x14>
     7c8:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <messages+0xe1>
     7cc:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <messages+0xe0>
     7d0:	ea e4       	ldi	r30, 0x4A	; 74
     7d2:	f1 e0       	ldi	r31, 0x01	; 1
     7d4:	87 e6       	ldi	r24, 0x67	; 103
     7d6:	91 e0       	ldi	r25, 0x01	; 1
     7d8:	91 83       	std	Z+1, r25	; 0x01
     7da:	80 83       	st	Z, r24
     7dc:	84 e8       	ldi	r24, 0x84	; 132
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	96 8f       	std	Z+30, r25	; 0x1e
     7e2:	85 8f       	std	Z+29, r24	; 0x1d
     7e4:	a1 ea       	ldi	r26, 0xA1	; 161
     7e6:	b1 e0       	ldi	r27, 0x01	; 1
     7e8:	b3 af       	std	Z+59, r27	; 0x3b
     7ea:	a2 af       	std	Z+58, r26	; 0x3a
     7ec:	1d 92       	st	X+, r1
     7ee:	1c 92       	st	X, r1
     7f0:	fa 83       	std	Y+2, r31	; 0x02
     7f2:	e9 83       	std	Y+1, r30	; 0x01
     7f4:	eb e4       	ldi	r30, 0x4B	; 75
     7f6:	f3 e0       	ldi	r31, 0x03	; 3
     7f8:	fc 83       	std	Y+4, r31	; 0x04
     7fa:	eb 83       	std	Y+3, r30	; 0x03
     7fc:	89 81       	ldd	r24, Y+1	; 0x01
     7fe:	9a 81       	ldd	r25, Y+2	; 0x02
     800:	06 96       	adiw	r24, 0x06	; 6
     802:	0e 94 67 10 	call	0x20ce	; 0x20ce <setjmp>
     806:	8b 81       	ldd	r24, Y+3	; 0x03
     808:	9c 81       	ldd	r25, Y+4	; 0x04
     80a:	e9 81       	ldd	r30, Y+1	; 0x01
     80c:	fa 81       	ldd	r31, Y+2	; 0x02
     80e:	97 8b       	std	Z+23, r25	; 0x17
     810:	86 8b       	std	Z+22, r24	; 0x16
     812:	91 8f       	std	Z+25, r25	; 0x19
     814:	80 8f       	std	Z+24, r24	; 0x18
     816:	85 e7       	ldi	r24, 0x75	; 117
     818:	9f e0       	ldi	r25, 0x0F	; 15
     81a:	94 8f       	std	Z+28, r25	; 0x1c
     81c:	83 8f       	std	Z+27, r24	; 0x1b
     81e:	15 82       	std	Z+5, r1	; 0x05
     820:	14 82       	std	Z+4, r1	; 0x04
     822:	7d 96       	adiw	r30, 0x1d	; 29
     824:	fa 83       	std	Y+2, r31	; 0x02
     826:	e9 83       	std	Y+1, r30	; 0x01
     828:	eb 81       	ldd	r30, Y+3	; 0x03
     82a:	fc 81       	ldd	r31, Y+4	; 0x04
     82c:	e0 5a       	subi	r30, 0xA0	; 160
     82e:	ff 4f       	sbci	r31, 0xFF	; 255
     830:	fc 83       	std	Y+4, r31	; 0x04
     832:	eb 83       	std	Y+3, r30	; 0x03
     834:	89 81       	ldd	r24, Y+1	; 0x01
     836:	9a 81       	ldd	r25, Y+2	; 0x02
     838:	8e 5b       	subi	r24, 0xBE	; 190
     83a:	91 40       	sbci	r25, 0x01	; 1
     83c:	f9 f6       	brne	.-66     	; 0x7fc <initialize+0x58>
     83e:	e2 ee       	ldi	r30, 0xE2	; 226
     840:	f1 e0       	ldi	r31, 0x01	; 1
     842:	11 82       	std	Z+1, r1	; 0x01
     844:	10 82       	st	Z, r1
     846:	15 82       	std	Z+5, r1	; 0x05
     848:	14 82       	std	Z+4, r1	; 0x04
     84a:	13 82       	std	Z+3, r1	; 0x03
     84c:	12 82       	std	Z+2, r1	; 0x02
     84e:	e1 e6       	ldi	r30, 0x61	; 97
     850:	f0 e0       	ldi	r31, 0x00	; 0
     852:	80 e8       	ldi	r24, 0x80	; 128
     854:	80 83       	st	Z, r24
     856:	10 82       	st	Z, r1
     858:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     85c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	0f 90       	pop	r0
     872:	0f 90       	pop	r0
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	08 95       	ret

0000087a <dispatch>:
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	00 d0       	rcall	.+0      	; 0x880 <dispatch+0x6>
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	9a 83       	std	Y+2, r25	; 0x02
     886:	89 83       	std	Y+1, r24	; 0x01
     888:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     88c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     890:	06 96       	adiw	r24, 0x06	; 6
     892:	0e 94 67 10 	call	0x20ce	; 0x20ce <setjmp>
     896:	89 2b       	or	r24, r25
     898:	29 f0       	breq	.+10     	; 0x8a4 <dispatch+0x2a>
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	08 95       	ret
     8a4:	89 81       	ldd	r24, Y+1	; 0x01
     8a6:	9a 81       	ldd	r25, Y+2	; 0x02
     8a8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     8ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     8b0:	61 e0       	ldi	r22, 0x01	; 1
     8b2:	70 e0       	ldi	r23, 0x00	; 0
     8b4:	06 96       	adiw	r24, 0x06	; 6
     8b6:	0e 94 87 10 	call	0x210e	; 0x210e <longjmp>

000008ba <schedule>:
     8ba:	0f 93       	push	r16
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
     8c6:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
     8ca:	30 97       	sbiw	r30, 0x00	; 0
     8cc:	f1 f0       	breq	.+60     	; 0x90a <schedule+0x50>
     8ce:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     8d2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     8d6:	00 97       	sbiw	r24, 0x00	; 0
     8d8:	c1 f0       	breq	.+48     	; 0x90a <schedule+0x50>
     8da:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     8de:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     8e2:	aa 81       	ldd	r26, Y+2	; 0x02
     8e4:	bb 81       	ldd	r27, Y+3	; 0x03
     8e6:	10 97       	sbiw	r26, 0x00	; 0
     8e8:	a9 f0       	breq	.+42     	; 0x914 <schedule+0x5a>
     8ea:	46 81       	ldd	r20, Z+6	; 0x06
     8ec:	57 81       	ldd	r21, Z+7	; 0x07
     8ee:	60 85       	ldd	r22, Z+8	; 0x08
     8f0:	71 85       	ldd	r23, Z+9	; 0x09
     8f2:	16 96       	adiw	r26, 0x06	; 6
     8f4:	0d 91       	ld	r16, X+
     8f6:	1d 91       	ld	r17, X+
     8f8:	2d 91       	ld	r18, X+
     8fa:	3c 91       	ld	r19, X
     8fc:	19 97       	sbiw	r26, 0x09	; 9
     8fe:	40 1b       	sub	r20, r16
     900:	51 0b       	sbc	r21, r17
     902:	62 0b       	sbc	r22, r18
     904:	73 0b       	sbc	r23, r19
     906:	77 fd       	sbrc	r23, 7
     908:	05 c0       	rjmp	.+10     	; 0x914 <schedule+0x5a>
     90a:	df 91       	pop	r29
     90c:	cf 91       	pop	r28
     90e:	1f 91       	pop	r17
     910:	0f 91       	pop	r16
     912:	08 95       	ret
     914:	fc 01       	movw	r30, r24
     916:	20 81       	ld	r18, Z
     918:	31 81       	ldd	r19, Z+1	; 0x01
     91a:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     91e:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     922:	d1 83       	std	Z+1, r29	; 0x01
     924:	c0 83       	st	Z, r28
     926:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     92a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	0c 94 3d 04 	jmp	0x87a	; 0x87a <dispatch>

0000093a <dequeue.part.0>:
     93a:	8f ef       	ldi	r24, 0xFF	; 255
     93c:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     940:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     944:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     948:	81 e0       	ldi	r24, 0x01	; 1
     94a:	83 bf       	out	0x33, r24	; 51
     94c:	88 95       	sleep
     94e:	fd cf       	rjmp	.-6      	; 0x94a <dequeue.part.0+0x10>

00000950 <__vector_1>:
     950:	1f 92       	push	r1
     952:	0f 92       	push	r0
     954:	0f b6       	in	r0, 0x3f	; 63
     956:	0f 92       	push	r0
     958:	11 24       	eor	r1, r1
     95a:	2f 93       	push	r18
     95c:	3f 93       	push	r19
     95e:	4f 93       	push	r20
     960:	5f 93       	push	r21
     962:	6f 93       	push	r22
     964:	7f 93       	push	r23
     966:	8f 93       	push	r24
     968:	9f 93       	push	r25
     96a:	af 93       	push	r26
     96c:	bf 93       	push	r27
     96e:	ef 93       	push	r30
     970:	ff 93       	push	r31
     972:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     976:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     97a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     97e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     982:	c9 01       	movw	r24, r18
     984:	03 2e       	mov	r0, r19
     986:	00 0c       	add	r0, r0
     988:	aa 0b       	sbc	r26, r26
     98a:	bb 0b       	sbc	r27, r27
     98c:	dc 01       	movw	r26, r24
     98e:	99 27       	eor	r25, r25
     990:	88 27       	eor	r24, r24
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	84 2b       	or	r24, r20
     998:	95 2b       	or	r25, r21
     99a:	a6 2b       	or	r26, r22
     99c:	b7 2b       	or	r27, r23
     99e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     9a2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     9a6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     9aa:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     9ae:	b0 9b       	sbis	0x16, 0	; 22
     9b0:	1b c0       	rjmp	.+54     	; 0x9e8 <__vector_1+0x98>
     9b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9ba:	c9 01       	movw	r24, r18
     9bc:	01 96       	adiw	r24, 0x01	; 1
     9be:	09 2e       	mov	r0, r25
     9c0:	00 0c       	add	r0, r0
     9c2:	aa 0b       	sbc	r26, r26
     9c4:	bb 0b       	sbc	r27, r27
     9c6:	dc 01       	movw	r26, r24
     9c8:	99 27       	eor	r25, r25
     9ca:	88 27       	eor	r24, r24
     9cc:	60 e0       	ldi	r22, 0x00	; 0
     9ce:	70 e0       	ldi	r23, 0x00	; 0
     9d0:	84 2b       	or	r24, r20
     9d2:	95 2b       	or	r25, r21
     9d4:	a6 2b       	or	r26, r22
     9d6:	b7 2b       	or	r27, r23
     9d8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     9dc:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     9e0:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     9e4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     9e8:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable>
     9ec:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x1>
     9f0:	30 97       	sbiw	r30, 0x00	; 0
     9f2:	39 f0       	breq	.+14     	; 0xa02 <__vector_1+0xb2>
     9f4:	60 e0       	ldi	r22, 0x00	; 0
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable>
     9fc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x1>
     a00:	09 95       	icall
     a02:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     a06:	ff 91       	pop	r31
     a08:	ef 91       	pop	r30
     a0a:	bf 91       	pop	r27
     a0c:	af 91       	pop	r26
     a0e:	9f 91       	pop	r25
     a10:	8f 91       	pop	r24
     a12:	7f 91       	pop	r23
     a14:	6f 91       	pop	r22
     a16:	5f 91       	pop	r21
     a18:	4f 91       	pop	r20
     a1a:	3f 91       	pop	r19
     a1c:	2f 91       	pop	r18
     a1e:	0f 90       	pop	r0
     a20:	0f be       	out	0x3f, r0	; 63
     a22:	0f 90       	pop	r0
     a24:	1f 90       	pop	r1
     a26:	18 95       	reti

00000a28 <__vector_2>:
     a28:	1f 92       	push	r1
     a2a:	0f 92       	push	r0
     a2c:	0f b6       	in	r0, 0x3f	; 63
     a2e:	0f 92       	push	r0
     a30:	11 24       	eor	r1, r1
     a32:	2f 93       	push	r18
     a34:	3f 93       	push	r19
     a36:	4f 93       	push	r20
     a38:	5f 93       	push	r21
     a3a:	6f 93       	push	r22
     a3c:	7f 93       	push	r23
     a3e:	8f 93       	push	r24
     a40:	9f 93       	push	r25
     a42:	af 93       	push	r26
     a44:	bf 93       	push	r27
     a46:	ef 93       	push	r30
     a48:	ff 93       	push	r31
     a4a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     a4e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     a52:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a56:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a5a:	c9 01       	movw	r24, r18
     a5c:	03 2e       	mov	r0, r19
     a5e:	00 0c       	add	r0, r0
     a60:	aa 0b       	sbc	r26, r26
     a62:	bb 0b       	sbc	r27, r27
     a64:	dc 01       	movw	r26, r24
     a66:	99 27       	eor	r25, r25
     a68:	88 27       	eor	r24, r24
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	84 2b       	or	r24, r20
     a70:	95 2b       	or	r25, r21
     a72:	a6 2b       	or	r26, r22
     a74:	b7 2b       	or	r27, r23
     a76:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     a7a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     a7e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     a82:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     a86:	b0 9b       	sbis	0x16, 0	; 22
     a88:	1b c0       	rjmp	.+54     	; 0xac0 <__vector_2+0x98>
     a8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a92:	c9 01       	movw	r24, r18
     a94:	01 96       	adiw	r24, 0x01	; 1
     a96:	09 2e       	mov	r0, r25
     a98:	00 0c       	add	r0, r0
     a9a:	aa 0b       	sbc	r26, r26
     a9c:	bb 0b       	sbc	r27, r27
     a9e:	dc 01       	movw	r26, r24
     aa0:	99 27       	eor	r25, r25
     aa2:	88 27       	eor	r24, r24
     aa4:	60 e0       	ldi	r22, 0x00	; 0
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	84 2b       	or	r24, r20
     aaa:	95 2b       	or	r25, r21
     aac:	a6 2b       	or	r26, r22
     aae:	b7 2b       	or	r27, r23
     ab0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     ab4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     ab8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     abc:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ac0:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x2>
     ac4:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x3>
     ac8:	30 97       	sbiw	r30, 0x00	; 0
     aca:	39 f0       	breq	.+14     	; 0xada <__vector_2+0xb2>
     acc:	61 e0       	ldi	r22, 0x01	; 1
     ace:	70 e0       	ldi	r23, 0x00	; 0
     ad0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x2>
     ad4:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x3>
     ad8:	09 95       	icall
     ada:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     ade:	ff 91       	pop	r31
     ae0:	ef 91       	pop	r30
     ae2:	bf 91       	pop	r27
     ae4:	af 91       	pop	r26
     ae6:	9f 91       	pop	r25
     ae8:	8f 91       	pop	r24
     aea:	7f 91       	pop	r23
     aec:	6f 91       	pop	r22
     aee:	5f 91       	pop	r21
     af0:	4f 91       	pop	r20
     af2:	3f 91       	pop	r19
     af4:	2f 91       	pop	r18
     af6:	0f 90       	pop	r0
     af8:	0f be       	out	0x3f, r0	; 63
     afa:	0f 90       	pop	r0
     afc:	1f 90       	pop	r1
     afe:	18 95       	reti

00000b00 <__vector_3>:
     b00:	1f 92       	push	r1
     b02:	0f 92       	push	r0
     b04:	0f b6       	in	r0, 0x3f	; 63
     b06:	0f 92       	push	r0
     b08:	11 24       	eor	r1, r1
     b0a:	2f 93       	push	r18
     b0c:	3f 93       	push	r19
     b0e:	4f 93       	push	r20
     b10:	5f 93       	push	r21
     b12:	6f 93       	push	r22
     b14:	7f 93       	push	r23
     b16:	8f 93       	push	r24
     b18:	9f 93       	push	r25
     b1a:	af 93       	push	r26
     b1c:	bf 93       	push	r27
     b1e:	ef 93       	push	r30
     b20:	ff 93       	push	r31
     b22:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     b26:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     b2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b32:	c9 01       	movw	r24, r18
     b34:	03 2e       	mov	r0, r19
     b36:	00 0c       	add	r0, r0
     b38:	aa 0b       	sbc	r26, r26
     b3a:	bb 0b       	sbc	r27, r27
     b3c:	dc 01       	movw	r26, r24
     b3e:	99 27       	eor	r25, r25
     b40:	88 27       	eor	r24, r24
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	84 2b       	or	r24, r20
     b48:	95 2b       	or	r25, r21
     b4a:	a6 2b       	or	r26, r22
     b4c:	b7 2b       	or	r27, r23
     b4e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b52:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b56:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b5a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b5e:	b0 9b       	sbis	0x16, 0	; 22
     b60:	1b c0       	rjmp	.+54     	; 0xb98 <__vector_3+0x98>
     b62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b6a:	c9 01       	movw	r24, r18
     b6c:	01 96       	adiw	r24, 0x01	; 1
     b6e:	09 2e       	mov	r0, r25
     b70:	00 0c       	add	r0, r0
     b72:	aa 0b       	sbc	r26, r26
     b74:	bb 0b       	sbc	r27, r27
     b76:	dc 01       	movw	r26, r24
     b78:	99 27       	eor	r25, r25
     b7a:	88 27       	eor	r24, r24
     b7c:	60 e0       	ldi	r22, 0x00	; 0
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	84 2b       	or	r24, r20
     b82:	95 2b       	or	r25, r21
     b84:	a6 2b       	or	r26, r22
     b86:	b7 2b       	or	r27, r23
     b88:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b8c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b90:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b94:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b98:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x4>
     b9c:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x5>
     ba0:	30 97       	sbiw	r30, 0x00	; 0
     ba2:	39 f0       	breq	.+14     	; 0xbb2 <__vector_3+0xb2>
     ba4:	62 e0       	ldi	r22, 0x02	; 2
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x4>
     bac:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x5>
     bb0:	09 95       	icall
     bb2:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     bb6:	ff 91       	pop	r31
     bb8:	ef 91       	pop	r30
     bba:	bf 91       	pop	r27
     bbc:	af 91       	pop	r26
     bbe:	9f 91       	pop	r25
     bc0:	8f 91       	pop	r24
     bc2:	7f 91       	pop	r23
     bc4:	6f 91       	pop	r22
     bc6:	5f 91       	pop	r21
     bc8:	4f 91       	pop	r20
     bca:	3f 91       	pop	r19
     bcc:	2f 91       	pop	r18
     bce:	0f 90       	pop	r0
     bd0:	0f be       	out	0x3f, r0	; 63
     bd2:	0f 90       	pop	r0
     bd4:	1f 90       	pop	r1
     bd6:	18 95       	reti

00000bd8 <__vector_4>:
     bd8:	1f 92       	push	r1
     bda:	0f 92       	push	r0
     bdc:	0f b6       	in	r0, 0x3f	; 63
     bde:	0f 92       	push	r0
     be0:	11 24       	eor	r1, r1
     be2:	2f 93       	push	r18
     be4:	3f 93       	push	r19
     be6:	4f 93       	push	r20
     be8:	5f 93       	push	r21
     bea:	6f 93       	push	r22
     bec:	7f 93       	push	r23
     bee:	8f 93       	push	r24
     bf0:	9f 93       	push	r25
     bf2:	af 93       	push	r26
     bf4:	bf 93       	push	r27
     bf6:	ef 93       	push	r30
     bf8:	ff 93       	push	r31
     bfa:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     bfe:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     c02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c0a:	c9 01       	movw	r24, r18
     c0c:	03 2e       	mov	r0, r19
     c0e:	00 0c       	add	r0, r0
     c10:	aa 0b       	sbc	r26, r26
     c12:	bb 0b       	sbc	r27, r27
     c14:	dc 01       	movw	r26, r24
     c16:	99 27       	eor	r25, r25
     c18:	88 27       	eor	r24, r24
     c1a:	60 e0       	ldi	r22, 0x00	; 0
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	84 2b       	or	r24, r20
     c20:	95 2b       	or	r25, r21
     c22:	a6 2b       	or	r26, r22
     c24:	b7 2b       	or	r27, r23
     c26:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c2a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c2e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c32:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c36:	b0 9b       	sbis	0x16, 0	; 22
     c38:	1b c0       	rjmp	.+54     	; 0xc70 <__vector_4+0x98>
     c3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c42:	c9 01       	movw	r24, r18
     c44:	01 96       	adiw	r24, 0x01	; 1
     c46:	09 2e       	mov	r0, r25
     c48:	00 0c       	add	r0, r0
     c4a:	aa 0b       	sbc	r26, r26
     c4c:	bb 0b       	sbc	r27, r27
     c4e:	dc 01       	movw	r26, r24
     c50:	99 27       	eor	r25, r25
     c52:	88 27       	eor	r24, r24
     c54:	60 e0       	ldi	r22, 0x00	; 0
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	84 2b       	or	r24, r20
     c5a:	95 2b       	or	r25, r21
     c5c:	a6 2b       	or	r26, r22
     c5e:	b7 2b       	or	r27, r23
     c60:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c64:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c68:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c6c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c70:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x6>
     c74:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x7>
     c78:	30 97       	sbiw	r30, 0x00	; 0
     c7a:	39 f0       	breq	.+14     	; 0xc8a <__vector_4+0xb2>
     c7c:	63 e0       	ldi	r22, 0x03	; 3
     c7e:	70 e0       	ldi	r23, 0x00	; 0
     c80:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x6>
     c84:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x7>
     c88:	09 95       	icall
     c8a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     c8e:	ff 91       	pop	r31
     c90:	ef 91       	pop	r30
     c92:	bf 91       	pop	r27
     c94:	af 91       	pop	r26
     c96:	9f 91       	pop	r25
     c98:	8f 91       	pop	r24
     c9a:	7f 91       	pop	r23
     c9c:	6f 91       	pop	r22
     c9e:	5f 91       	pop	r21
     ca0:	4f 91       	pop	r20
     ca2:	3f 91       	pop	r19
     ca4:	2f 91       	pop	r18
     ca6:	0f 90       	pop	r0
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	0f 90       	pop	r0
     cac:	1f 90       	pop	r1
     cae:	18 95       	reti

00000cb0 <__vector_5>:
     cb0:	1f 92       	push	r1
     cb2:	0f 92       	push	r0
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	0f 92       	push	r0
     cb8:	11 24       	eor	r1, r1
     cba:	2f 93       	push	r18
     cbc:	3f 93       	push	r19
     cbe:	4f 93       	push	r20
     cc0:	5f 93       	push	r21
     cc2:	6f 93       	push	r22
     cc4:	7f 93       	push	r23
     cc6:	8f 93       	push	r24
     cc8:	9f 93       	push	r25
     cca:	af 93       	push	r26
     ccc:	bf 93       	push	r27
     cce:	ef 93       	push	r30
     cd0:	ff 93       	push	r31
     cd2:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     cd6:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     cda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ce2:	c9 01       	movw	r24, r18
     ce4:	03 2e       	mov	r0, r19
     ce6:	00 0c       	add	r0, r0
     ce8:	aa 0b       	sbc	r26, r26
     cea:	bb 0b       	sbc	r27, r27
     cec:	dc 01       	movw	r26, r24
     cee:	99 27       	eor	r25, r25
     cf0:	88 27       	eor	r24, r24
     cf2:	60 e0       	ldi	r22, 0x00	; 0
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	84 2b       	or	r24, r20
     cf8:	95 2b       	or	r25, r21
     cfa:	a6 2b       	or	r26, r22
     cfc:	b7 2b       	or	r27, r23
     cfe:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     d02:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     d06:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     d0a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     d0e:	b0 9b       	sbis	0x16, 0	; 22
     d10:	1b c0       	rjmp	.+54     	; 0xd48 <__vector_5+0x98>
     d12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d1a:	c9 01       	movw	r24, r18
     d1c:	01 96       	adiw	r24, 0x01	; 1
     d1e:	09 2e       	mov	r0, r25
     d20:	00 0c       	add	r0, r0
     d22:	aa 0b       	sbc	r26, r26
     d24:	bb 0b       	sbc	r27, r27
     d26:	dc 01       	movw	r26, r24
     d28:	99 27       	eor	r25, r25
     d2a:	88 27       	eor	r24, r24
     d2c:	60 e0       	ldi	r22, 0x00	; 0
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	84 2b       	or	r24, r20
     d32:	95 2b       	or	r25, r21
     d34:	a6 2b       	or	r26, r22
     d36:	b7 2b       	or	r27, r23
     d38:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     d3c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     d40:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     d44:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     d48:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x8>
     d4c:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x9>
     d50:	30 97       	sbiw	r30, 0x00	; 0
     d52:	39 f0       	breq	.+14     	; 0xd62 <__vector_5+0xb2>
     d54:	64 e0       	ldi	r22, 0x04	; 4
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x8>
     d5c:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x9>
     d60:	09 95       	icall
     d62:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     d66:	ff 91       	pop	r31
     d68:	ef 91       	pop	r30
     d6a:	bf 91       	pop	r27
     d6c:	af 91       	pop	r26
     d6e:	9f 91       	pop	r25
     d70:	8f 91       	pop	r24
     d72:	7f 91       	pop	r23
     d74:	6f 91       	pop	r22
     d76:	5f 91       	pop	r21
     d78:	4f 91       	pop	r20
     d7a:	3f 91       	pop	r19
     d7c:	2f 91       	pop	r18
     d7e:	0f 90       	pop	r0
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	0f 90       	pop	r0
     d84:	1f 90       	pop	r1
     d86:	18 95       	reti

00000d88 <__vector_10>:
     d88:	1f 92       	push	r1
     d8a:	0f 92       	push	r0
     d8c:	0f b6       	in	r0, 0x3f	; 63
     d8e:	0f 92       	push	r0
     d90:	11 24       	eor	r1, r1
     d92:	2f 93       	push	r18
     d94:	3f 93       	push	r19
     d96:	4f 93       	push	r20
     d98:	5f 93       	push	r21
     d9a:	6f 93       	push	r22
     d9c:	7f 93       	push	r23
     d9e:	8f 93       	push	r24
     da0:	9f 93       	push	r25
     da2:	af 93       	push	r26
     da4:	bf 93       	push	r27
     da6:	ef 93       	push	r30
     da8:	ff 93       	push	r31
     daa:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     dae:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     db2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     db6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dba:	c9 01       	movw	r24, r18
     dbc:	03 2e       	mov	r0, r19
     dbe:	00 0c       	add	r0, r0
     dc0:	aa 0b       	sbc	r26, r26
     dc2:	bb 0b       	sbc	r27, r27
     dc4:	dc 01       	movw	r26, r24
     dc6:	99 27       	eor	r25, r25
     dc8:	88 27       	eor	r24, r24
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	84 2b       	or	r24, r20
     dd0:	95 2b       	or	r25, r21
     dd2:	a6 2b       	or	r26, r22
     dd4:	b7 2b       	or	r27, r23
     dd6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     dda:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     dde:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     de2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     de6:	b0 9b       	sbis	0x16, 0	; 22
     de8:	1b c0       	rjmp	.+54     	; 0xe20 <__vector_10+0x98>
     dea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     df2:	c9 01       	movw	r24, r18
     df4:	01 96       	adiw	r24, 0x01	; 1
     df6:	09 2e       	mov	r0, r25
     df8:	00 0c       	add	r0, r0
     dfa:	aa 0b       	sbc	r26, r26
     dfc:	bb 0b       	sbc	r27, r27
     dfe:	dc 01       	movw	r26, r24
     e00:	99 27       	eor	r25, r25
     e02:	88 27       	eor	r24, r24
     e04:	60 e0       	ldi	r22, 0x00	; 0
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	84 2b       	or	r24, r20
     e0a:	95 2b       	or	r25, r21
     e0c:	a6 2b       	or	r26, r22
     e0e:	b7 2b       	or	r27, r23
     e10:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     e14:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     e18:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     e1c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     e20:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xa>
     e24:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xb>
     e28:	30 97       	sbiw	r30, 0x00	; 0
     e2a:	39 f0       	breq	.+14     	; 0xe3a <__vector_10+0xb2>
     e2c:	65 e0       	ldi	r22, 0x05	; 5
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xa>
     e34:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xb>
     e38:	09 95       	icall
     e3a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     e3e:	ff 91       	pop	r31
     e40:	ef 91       	pop	r30
     e42:	bf 91       	pop	r27
     e44:	af 91       	pop	r26
     e46:	9f 91       	pop	r25
     e48:	8f 91       	pop	r24
     e4a:	7f 91       	pop	r23
     e4c:	6f 91       	pop	r22
     e4e:	5f 91       	pop	r21
     e50:	4f 91       	pop	r20
     e52:	3f 91       	pop	r19
     e54:	2f 91       	pop	r18
     e56:	0f 90       	pop	r0
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	0f 90       	pop	r0
     e5c:	1f 90       	pop	r1
     e5e:	18 95       	reti

00000e60 <__vector_11>:
     e60:	1f 92       	push	r1
     e62:	0f 92       	push	r0
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	0f 92       	push	r0
     e68:	11 24       	eor	r1, r1
     e6a:	2f 93       	push	r18
     e6c:	3f 93       	push	r19
     e6e:	4f 93       	push	r20
     e70:	5f 93       	push	r21
     e72:	6f 93       	push	r22
     e74:	7f 93       	push	r23
     e76:	8f 93       	push	r24
     e78:	9f 93       	push	r25
     e7a:	af 93       	push	r26
     e7c:	bf 93       	push	r27
     e7e:	ef 93       	push	r30
     e80:	ff 93       	push	r31
     e82:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     e86:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     e8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e92:	c9 01       	movw	r24, r18
     e94:	03 2e       	mov	r0, r19
     e96:	00 0c       	add	r0, r0
     e98:	aa 0b       	sbc	r26, r26
     e9a:	bb 0b       	sbc	r27, r27
     e9c:	dc 01       	movw	r26, r24
     e9e:	99 27       	eor	r25, r25
     ea0:	88 27       	eor	r24, r24
     ea2:	60 e0       	ldi	r22, 0x00	; 0
     ea4:	70 e0       	ldi	r23, 0x00	; 0
     ea6:	84 2b       	or	r24, r20
     ea8:	95 2b       	or	r25, r21
     eaa:	a6 2b       	or	r26, r22
     eac:	b7 2b       	or	r27, r23
     eae:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     eb2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     eb6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     eba:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ebe:	b0 9b       	sbis	0x16, 0	; 22
     ec0:	1b c0       	rjmp	.+54     	; 0xef8 <__vector_11+0x98>
     ec2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ec6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eca:	c9 01       	movw	r24, r18
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	09 2e       	mov	r0, r25
     ed0:	00 0c       	add	r0, r0
     ed2:	aa 0b       	sbc	r26, r26
     ed4:	bb 0b       	sbc	r27, r27
     ed6:	dc 01       	movw	r26, r24
     ed8:	99 27       	eor	r25, r25
     eda:	88 27       	eor	r24, r24
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	84 2b       	or	r24, r20
     ee2:	95 2b       	or	r25, r21
     ee4:	a6 2b       	or	r26, r22
     ee6:	b7 2b       	or	r27, r23
     ee8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     eec:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     ef0:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     ef4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ef8:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xc>
     efc:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xd>
     f00:	30 97       	sbiw	r30, 0x00	; 0
     f02:	39 f0       	breq	.+14     	; 0xf12 <__vector_11+0xb2>
     f04:	66 e0       	ldi	r22, 0x06	; 6
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xc>
     f0c:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xd>
     f10:	09 95       	icall
     f12:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     f16:	ff 91       	pop	r31
     f18:	ef 91       	pop	r30
     f1a:	bf 91       	pop	r27
     f1c:	af 91       	pop	r26
     f1e:	9f 91       	pop	r25
     f20:	8f 91       	pop	r24
     f22:	7f 91       	pop	r23
     f24:	6f 91       	pop	r22
     f26:	5f 91       	pop	r21
     f28:	4f 91       	pop	r20
     f2a:	3f 91       	pop	r19
     f2c:	2f 91       	pop	r18
     f2e:	0f 90       	pop	r0
     f30:	0f be       	out	0x3f, r0	; 63
     f32:	0f 90       	pop	r0
     f34:	1f 90       	pop	r1
     f36:	18 95       	reti

00000f38 <__vector_12>:
     f38:	1f 92       	push	r1
     f3a:	0f 92       	push	r0
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	0f 92       	push	r0
     f40:	11 24       	eor	r1, r1
     f42:	2f 93       	push	r18
     f44:	3f 93       	push	r19
     f46:	4f 93       	push	r20
     f48:	5f 93       	push	r21
     f4a:	6f 93       	push	r22
     f4c:	7f 93       	push	r23
     f4e:	8f 93       	push	r24
     f50:	9f 93       	push	r25
     f52:	af 93       	push	r26
     f54:	bf 93       	push	r27
     f56:	ef 93       	push	r30
     f58:	ff 93       	push	r31
     f5a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     f5e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     f62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f6a:	c9 01       	movw	r24, r18
     f6c:	03 2e       	mov	r0, r19
     f6e:	00 0c       	add	r0, r0
     f70:	aa 0b       	sbc	r26, r26
     f72:	bb 0b       	sbc	r27, r27
     f74:	dc 01       	movw	r26, r24
     f76:	99 27       	eor	r25, r25
     f78:	88 27       	eor	r24, r24
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	84 2b       	or	r24, r20
     f80:	95 2b       	or	r25, r21
     f82:	a6 2b       	or	r26, r22
     f84:	b7 2b       	or	r27, r23
     f86:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     f8a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     f8e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     f92:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     f96:	b0 9b       	sbis	0x16, 0	; 22
     f98:	1b c0       	rjmp	.+54     	; 0xfd0 <__vector_12+0x98>
     f9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fa2:	c9 01       	movw	r24, r18
     fa4:	01 96       	adiw	r24, 0x01	; 1
     fa6:	09 2e       	mov	r0, r25
     fa8:	00 0c       	add	r0, r0
     faa:	aa 0b       	sbc	r26, r26
     fac:	bb 0b       	sbc	r27, r27
     fae:	dc 01       	movw	r26, r24
     fb0:	99 27       	eor	r25, r25
     fb2:	88 27       	eor	r24, r24
     fb4:	60 e0       	ldi	r22, 0x00	; 0
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	84 2b       	or	r24, r20
     fba:	95 2b       	or	r25, r21
     fbc:	a6 2b       	or	r26, r22
     fbe:	b7 2b       	or	r27, r23
     fc0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     fc4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     fc8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     fcc:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     fd0:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xe>
     fd4:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xf>
     fd8:	30 97       	sbiw	r30, 0x00	; 0
     fda:	39 f0       	breq	.+14     	; 0xfea <__vector_12+0xb2>
     fdc:	67 e0       	ldi	r22, 0x07	; 7
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xe>
     fe4:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xf>
     fe8:	09 95       	icall
     fea:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     fee:	ff 91       	pop	r31
     ff0:	ef 91       	pop	r30
     ff2:	bf 91       	pop	r27
     ff4:	af 91       	pop	r26
     ff6:	9f 91       	pop	r25
     ff8:	8f 91       	pop	r24
     ffa:	7f 91       	pop	r23
     ffc:	6f 91       	pop	r22
     ffe:	5f 91       	pop	r21
    1000:	4f 91       	pop	r20
    1002:	3f 91       	pop	r19
    1004:	2f 91       	pop	r18
    1006:	0f 90       	pop	r0
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	0f 90       	pop	r0
    100c:	1f 90       	pop	r1
    100e:	18 95       	reti

00001010 <__vector_13>:
    1010:	1f 92       	push	r1
    1012:	0f 92       	push	r0
    1014:	0f b6       	in	r0, 0x3f	; 63
    1016:	0f 92       	push	r0
    1018:	11 24       	eor	r1, r1
    101a:	2f 93       	push	r18
    101c:	3f 93       	push	r19
    101e:	4f 93       	push	r20
    1020:	5f 93       	push	r21
    1022:	6f 93       	push	r22
    1024:	7f 93       	push	r23
    1026:	8f 93       	push	r24
    1028:	9f 93       	push	r25
    102a:	af 93       	push	r26
    102c:	bf 93       	push	r27
    102e:	ef 93       	push	r30
    1030:	ff 93       	push	r31
    1032:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1036:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    103a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    103e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1042:	c9 01       	movw	r24, r18
    1044:	03 2e       	mov	r0, r19
    1046:	00 0c       	add	r0, r0
    1048:	aa 0b       	sbc	r26, r26
    104a:	bb 0b       	sbc	r27, r27
    104c:	dc 01       	movw	r26, r24
    104e:	99 27       	eor	r25, r25
    1050:	88 27       	eor	r24, r24
    1052:	60 e0       	ldi	r22, 0x00	; 0
    1054:	70 e0       	ldi	r23, 0x00	; 0
    1056:	84 2b       	or	r24, r20
    1058:	95 2b       	or	r25, r21
    105a:	a6 2b       	or	r26, r22
    105c:	b7 2b       	or	r27, r23
    105e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1062:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1066:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    106a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    106e:	b0 9b       	sbis	0x16, 0	; 22
    1070:	1b c0       	rjmp	.+54     	; 0x10a8 <__vector_13+0x98>
    1072:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1076:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    107a:	c9 01       	movw	r24, r18
    107c:	01 96       	adiw	r24, 0x01	; 1
    107e:	09 2e       	mov	r0, r25
    1080:	00 0c       	add	r0, r0
    1082:	aa 0b       	sbc	r26, r26
    1084:	bb 0b       	sbc	r27, r27
    1086:	dc 01       	movw	r26, r24
    1088:	99 27       	eor	r25, r25
    108a:	88 27       	eor	r24, r24
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	84 2b       	or	r24, r20
    1092:	95 2b       	or	r25, r21
    1094:	a6 2b       	or	r26, r22
    1096:	b7 2b       	or	r27, r23
    1098:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    109c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    10a0:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    10a4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    10a8:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x10>
    10ac:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x11>
    10b0:	30 97       	sbiw	r30, 0x00	; 0
    10b2:	39 f0       	breq	.+14     	; 0x10c2 <__vector_13+0xb2>
    10b4:	68 e0       	ldi	r22, 0x08	; 8
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x10>
    10bc:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x11>
    10c0:	09 95       	icall
    10c2:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    10c6:	ff 91       	pop	r31
    10c8:	ef 91       	pop	r30
    10ca:	bf 91       	pop	r27
    10cc:	af 91       	pop	r26
    10ce:	9f 91       	pop	r25
    10d0:	8f 91       	pop	r24
    10d2:	7f 91       	pop	r23
    10d4:	6f 91       	pop	r22
    10d6:	5f 91       	pop	r21
    10d8:	4f 91       	pop	r20
    10da:	3f 91       	pop	r19
    10dc:	2f 91       	pop	r18
    10de:	0f 90       	pop	r0
    10e0:	0f be       	out	0x3f, r0	; 63
    10e2:	0f 90       	pop	r0
    10e4:	1f 90       	pop	r1
    10e6:	18 95       	reti

000010e8 <__vector_14>:
    10e8:	1f 92       	push	r1
    10ea:	0f 92       	push	r0
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	0f 92       	push	r0
    10f0:	11 24       	eor	r1, r1
    10f2:	2f 93       	push	r18
    10f4:	3f 93       	push	r19
    10f6:	4f 93       	push	r20
    10f8:	5f 93       	push	r21
    10fa:	6f 93       	push	r22
    10fc:	7f 93       	push	r23
    10fe:	8f 93       	push	r24
    1100:	9f 93       	push	r25
    1102:	af 93       	push	r26
    1104:	bf 93       	push	r27
    1106:	ef 93       	push	r30
    1108:	ff 93       	push	r31
    110a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    110e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1112:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1116:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    111a:	c9 01       	movw	r24, r18
    111c:	03 2e       	mov	r0, r19
    111e:	00 0c       	add	r0, r0
    1120:	aa 0b       	sbc	r26, r26
    1122:	bb 0b       	sbc	r27, r27
    1124:	dc 01       	movw	r26, r24
    1126:	99 27       	eor	r25, r25
    1128:	88 27       	eor	r24, r24
    112a:	60 e0       	ldi	r22, 0x00	; 0
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	84 2b       	or	r24, r20
    1130:	95 2b       	or	r25, r21
    1132:	a6 2b       	or	r26, r22
    1134:	b7 2b       	or	r27, r23
    1136:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    113a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    113e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1142:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1146:	b0 9b       	sbis	0x16, 0	; 22
    1148:	1b c0       	rjmp	.+54     	; 0x1180 <__vector_14+0x98>
    114a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    114e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1152:	c9 01       	movw	r24, r18
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	09 2e       	mov	r0, r25
    1158:	00 0c       	add	r0, r0
    115a:	aa 0b       	sbc	r26, r26
    115c:	bb 0b       	sbc	r27, r27
    115e:	dc 01       	movw	r26, r24
    1160:	99 27       	eor	r25, r25
    1162:	88 27       	eor	r24, r24
    1164:	60 e0       	ldi	r22, 0x00	; 0
    1166:	70 e0       	ldi	r23, 0x00	; 0
    1168:	84 2b       	or	r24, r20
    116a:	95 2b       	or	r25, r21
    116c:	a6 2b       	or	r26, r22
    116e:	b7 2b       	or	r27, r23
    1170:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1174:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1178:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    117c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1180:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x12>
    1184:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x13>
    1188:	30 97       	sbiw	r30, 0x00	; 0
    118a:	39 f0       	breq	.+14     	; 0x119a <__vector_14+0xb2>
    118c:	69 e0       	ldi	r22, 0x09	; 9
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x12>
    1194:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x13>
    1198:	09 95       	icall
    119a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    119e:	ff 91       	pop	r31
    11a0:	ef 91       	pop	r30
    11a2:	bf 91       	pop	r27
    11a4:	af 91       	pop	r26
    11a6:	9f 91       	pop	r25
    11a8:	8f 91       	pop	r24
    11aa:	7f 91       	pop	r23
    11ac:	6f 91       	pop	r22
    11ae:	5f 91       	pop	r21
    11b0:	4f 91       	pop	r20
    11b2:	3f 91       	pop	r19
    11b4:	2f 91       	pop	r18
    11b6:	0f 90       	pop	r0
    11b8:	0f be       	out	0x3f, r0	; 63
    11ba:	0f 90       	pop	r0
    11bc:	1f 90       	pop	r1
    11be:	18 95       	reti

000011c0 <__vector_15>:
    11c0:	1f 92       	push	r1
    11c2:	0f 92       	push	r0
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	0f 92       	push	r0
    11c8:	11 24       	eor	r1, r1
    11ca:	2f 93       	push	r18
    11cc:	3f 93       	push	r19
    11ce:	4f 93       	push	r20
    11d0:	5f 93       	push	r21
    11d2:	6f 93       	push	r22
    11d4:	7f 93       	push	r23
    11d6:	8f 93       	push	r24
    11d8:	9f 93       	push	r25
    11da:	af 93       	push	r26
    11dc:	bf 93       	push	r27
    11de:	ef 93       	push	r30
    11e0:	ff 93       	push	r31
    11e2:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    11e6:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    11ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11f2:	c9 01       	movw	r24, r18
    11f4:	03 2e       	mov	r0, r19
    11f6:	00 0c       	add	r0, r0
    11f8:	aa 0b       	sbc	r26, r26
    11fa:	bb 0b       	sbc	r27, r27
    11fc:	dc 01       	movw	r26, r24
    11fe:	99 27       	eor	r25, r25
    1200:	88 27       	eor	r24, r24
    1202:	60 e0       	ldi	r22, 0x00	; 0
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	84 2b       	or	r24, r20
    1208:	95 2b       	or	r25, r21
    120a:	a6 2b       	or	r26, r22
    120c:	b7 2b       	or	r27, r23
    120e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1212:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1216:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    121a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    121e:	b0 9b       	sbis	0x16, 0	; 22
    1220:	1b c0       	rjmp	.+54     	; 0x1258 <__vector_15+0x98>
    1222:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1226:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    122a:	c9 01       	movw	r24, r18
    122c:	01 96       	adiw	r24, 0x01	; 1
    122e:	09 2e       	mov	r0, r25
    1230:	00 0c       	add	r0, r0
    1232:	aa 0b       	sbc	r26, r26
    1234:	bb 0b       	sbc	r27, r27
    1236:	dc 01       	movw	r26, r24
    1238:	99 27       	eor	r25, r25
    123a:	88 27       	eor	r24, r24
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	70 e0       	ldi	r23, 0x00	; 0
    1240:	84 2b       	or	r24, r20
    1242:	95 2b       	or	r25, r21
    1244:	a6 2b       	or	r26, r22
    1246:	b7 2b       	or	r27, r23
    1248:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    124c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1250:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1254:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1258:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x14>
    125c:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x15>
    1260:	30 97       	sbiw	r30, 0x00	; 0
    1262:	39 f0       	breq	.+14     	; 0x1272 <__vector_15+0xb2>
    1264:	6a e0       	ldi	r22, 0x0A	; 10
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x14>
    126c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x15>
    1270:	09 95       	icall
    1272:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1276:	ff 91       	pop	r31
    1278:	ef 91       	pop	r30
    127a:	bf 91       	pop	r27
    127c:	af 91       	pop	r26
    127e:	9f 91       	pop	r25
    1280:	8f 91       	pop	r24
    1282:	7f 91       	pop	r23
    1284:	6f 91       	pop	r22
    1286:	5f 91       	pop	r21
    1288:	4f 91       	pop	r20
    128a:	3f 91       	pop	r19
    128c:	2f 91       	pop	r18
    128e:	0f 90       	pop	r0
    1290:	0f be       	out	0x3f, r0	; 63
    1292:	0f 90       	pop	r0
    1294:	1f 90       	pop	r1
    1296:	18 95       	reti

00001298 <__vector_16>:
    1298:	1f 92       	push	r1
    129a:	0f 92       	push	r0
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	0f 92       	push	r0
    12a0:	11 24       	eor	r1, r1
    12a2:	2f 93       	push	r18
    12a4:	3f 93       	push	r19
    12a6:	4f 93       	push	r20
    12a8:	5f 93       	push	r21
    12aa:	6f 93       	push	r22
    12ac:	7f 93       	push	r23
    12ae:	8f 93       	push	r24
    12b0:	9f 93       	push	r25
    12b2:	af 93       	push	r26
    12b4:	bf 93       	push	r27
    12b6:	ef 93       	push	r30
    12b8:	ff 93       	push	r31
    12ba:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    12be:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    12c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ca:	c9 01       	movw	r24, r18
    12cc:	03 2e       	mov	r0, r19
    12ce:	00 0c       	add	r0, r0
    12d0:	aa 0b       	sbc	r26, r26
    12d2:	bb 0b       	sbc	r27, r27
    12d4:	dc 01       	movw	r26, r24
    12d6:	99 27       	eor	r25, r25
    12d8:	88 27       	eor	r24, r24
    12da:	60 e0       	ldi	r22, 0x00	; 0
    12dc:	70 e0       	ldi	r23, 0x00	; 0
    12de:	84 2b       	or	r24, r20
    12e0:	95 2b       	or	r25, r21
    12e2:	a6 2b       	or	r26, r22
    12e4:	b7 2b       	or	r27, r23
    12e6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    12ea:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    12ee:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    12f2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    12f6:	b0 9b       	sbis	0x16, 0	; 22
    12f8:	1b c0       	rjmp	.+54     	; 0x1330 <__vector_16+0x98>
    12fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1302:	c9 01       	movw	r24, r18
    1304:	01 96       	adiw	r24, 0x01	; 1
    1306:	09 2e       	mov	r0, r25
    1308:	00 0c       	add	r0, r0
    130a:	aa 0b       	sbc	r26, r26
    130c:	bb 0b       	sbc	r27, r27
    130e:	dc 01       	movw	r26, r24
    1310:	99 27       	eor	r25, r25
    1312:	88 27       	eor	r24, r24
    1314:	60 e0       	ldi	r22, 0x00	; 0
    1316:	70 e0       	ldi	r23, 0x00	; 0
    1318:	84 2b       	or	r24, r20
    131a:	95 2b       	or	r25, r21
    131c:	a6 2b       	or	r26, r22
    131e:	b7 2b       	or	r27, r23
    1320:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1324:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1328:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    132c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1330:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x16>
    1334:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x17>
    1338:	30 97       	sbiw	r30, 0x00	; 0
    133a:	39 f0       	breq	.+14     	; 0x134a <__vector_16+0xb2>
    133c:	6b e0       	ldi	r22, 0x0B	; 11
    133e:	70 e0       	ldi	r23, 0x00	; 0
    1340:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x16>
    1344:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x17>
    1348:	09 95       	icall
    134a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    134e:	ff 91       	pop	r31
    1350:	ef 91       	pop	r30
    1352:	bf 91       	pop	r27
    1354:	af 91       	pop	r26
    1356:	9f 91       	pop	r25
    1358:	8f 91       	pop	r24
    135a:	7f 91       	pop	r23
    135c:	6f 91       	pop	r22
    135e:	5f 91       	pop	r21
    1360:	4f 91       	pop	r20
    1362:	3f 91       	pop	r19
    1364:	2f 91       	pop	r18
    1366:	0f 90       	pop	r0
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	0f 90       	pop	r0
    136c:	1f 90       	pop	r1
    136e:	18 95       	reti

00001370 <__vector_17>:
    1370:	1f 92       	push	r1
    1372:	0f 92       	push	r0
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	0f 92       	push	r0
    1378:	11 24       	eor	r1, r1
    137a:	2f 93       	push	r18
    137c:	3f 93       	push	r19
    137e:	4f 93       	push	r20
    1380:	5f 93       	push	r21
    1382:	6f 93       	push	r22
    1384:	7f 93       	push	r23
    1386:	8f 93       	push	r24
    1388:	9f 93       	push	r25
    138a:	af 93       	push	r26
    138c:	bf 93       	push	r27
    138e:	ef 93       	push	r30
    1390:	ff 93       	push	r31
    1392:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1396:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    139a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    139e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13a2:	c9 01       	movw	r24, r18
    13a4:	03 2e       	mov	r0, r19
    13a6:	00 0c       	add	r0, r0
    13a8:	aa 0b       	sbc	r26, r26
    13aa:	bb 0b       	sbc	r27, r27
    13ac:	dc 01       	movw	r26, r24
    13ae:	99 27       	eor	r25, r25
    13b0:	88 27       	eor	r24, r24
    13b2:	60 e0       	ldi	r22, 0x00	; 0
    13b4:	70 e0       	ldi	r23, 0x00	; 0
    13b6:	84 2b       	or	r24, r20
    13b8:	95 2b       	or	r25, r21
    13ba:	a6 2b       	or	r26, r22
    13bc:	b7 2b       	or	r27, r23
    13be:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    13c2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    13c6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    13ca:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    13ce:	b0 9b       	sbis	0x16, 0	; 22
    13d0:	1b c0       	rjmp	.+54     	; 0x1408 <__vector_17+0x98>
    13d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13da:	c9 01       	movw	r24, r18
    13dc:	01 96       	adiw	r24, 0x01	; 1
    13de:	09 2e       	mov	r0, r25
    13e0:	00 0c       	add	r0, r0
    13e2:	aa 0b       	sbc	r26, r26
    13e4:	bb 0b       	sbc	r27, r27
    13e6:	dc 01       	movw	r26, r24
    13e8:	99 27       	eor	r25, r25
    13ea:	88 27       	eor	r24, r24
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	84 2b       	or	r24, r20
    13f2:	95 2b       	or	r25, r21
    13f4:	a6 2b       	or	r26, r22
    13f6:	b7 2b       	or	r27, r23
    13f8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    13fc:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1400:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1404:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1408:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x18>
    140c:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x19>
    1410:	30 97       	sbiw	r30, 0x00	; 0
    1412:	39 f0       	breq	.+14     	; 0x1422 <__vector_17+0xb2>
    1414:	6c e0       	ldi	r22, 0x0C	; 12
    1416:	70 e0       	ldi	r23, 0x00	; 0
    1418:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x18>
    141c:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x19>
    1420:	09 95       	icall
    1422:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1426:	ff 91       	pop	r31
    1428:	ef 91       	pop	r30
    142a:	bf 91       	pop	r27
    142c:	af 91       	pop	r26
    142e:	9f 91       	pop	r25
    1430:	8f 91       	pop	r24
    1432:	7f 91       	pop	r23
    1434:	6f 91       	pop	r22
    1436:	5f 91       	pop	r21
    1438:	4f 91       	pop	r20
    143a:	3f 91       	pop	r19
    143c:	2f 91       	pop	r18
    143e:	0f 90       	pop	r0
    1440:	0f be       	out	0x3f, r0	; 63
    1442:	0f 90       	pop	r0
    1444:	1f 90       	pop	r1
    1446:	18 95       	reti

00001448 <__vector_18>:
    1448:	1f 92       	push	r1
    144a:	0f 92       	push	r0
    144c:	0f b6       	in	r0, 0x3f	; 63
    144e:	0f 92       	push	r0
    1450:	11 24       	eor	r1, r1
    1452:	2f 93       	push	r18
    1454:	3f 93       	push	r19
    1456:	4f 93       	push	r20
    1458:	5f 93       	push	r21
    145a:	6f 93       	push	r22
    145c:	7f 93       	push	r23
    145e:	8f 93       	push	r24
    1460:	9f 93       	push	r25
    1462:	af 93       	push	r26
    1464:	bf 93       	push	r27
    1466:	ef 93       	push	r30
    1468:	ff 93       	push	r31
    146a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    146e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1472:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1476:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    147a:	c9 01       	movw	r24, r18
    147c:	03 2e       	mov	r0, r19
    147e:	00 0c       	add	r0, r0
    1480:	aa 0b       	sbc	r26, r26
    1482:	bb 0b       	sbc	r27, r27
    1484:	dc 01       	movw	r26, r24
    1486:	99 27       	eor	r25, r25
    1488:	88 27       	eor	r24, r24
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	84 2b       	or	r24, r20
    1490:	95 2b       	or	r25, r21
    1492:	a6 2b       	or	r26, r22
    1494:	b7 2b       	or	r27, r23
    1496:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    149a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    149e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    14a2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    14a6:	b0 9b       	sbis	0x16, 0	; 22
    14a8:	1b c0       	rjmp	.+54     	; 0x14e0 <__vector_18+0x98>
    14aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14b2:	c9 01       	movw	r24, r18
    14b4:	01 96       	adiw	r24, 0x01	; 1
    14b6:	09 2e       	mov	r0, r25
    14b8:	00 0c       	add	r0, r0
    14ba:	aa 0b       	sbc	r26, r26
    14bc:	bb 0b       	sbc	r27, r27
    14be:	dc 01       	movw	r26, r24
    14c0:	99 27       	eor	r25, r25
    14c2:	88 27       	eor	r24, r24
    14c4:	60 e0       	ldi	r22, 0x00	; 0
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	84 2b       	or	r24, r20
    14ca:	95 2b       	or	r25, r21
    14cc:	a6 2b       	or	r26, r22
    14ce:	b7 2b       	or	r27, r23
    14d0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    14d4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    14d8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    14dc:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    14e0:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1a>
    14e4:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1b>
    14e8:	30 97       	sbiw	r30, 0x00	; 0
    14ea:	39 f0       	breq	.+14     	; 0x14fa <__vector_18+0xb2>
    14ec:	6d e0       	ldi	r22, 0x0D	; 13
    14ee:	70 e0       	ldi	r23, 0x00	; 0
    14f0:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1a>
    14f4:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1b>
    14f8:	09 95       	icall
    14fa:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    14fe:	ff 91       	pop	r31
    1500:	ef 91       	pop	r30
    1502:	bf 91       	pop	r27
    1504:	af 91       	pop	r26
    1506:	9f 91       	pop	r25
    1508:	8f 91       	pop	r24
    150a:	7f 91       	pop	r23
    150c:	6f 91       	pop	r22
    150e:	5f 91       	pop	r21
    1510:	4f 91       	pop	r20
    1512:	3f 91       	pop	r19
    1514:	2f 91       	pop	r18
    1516:	0f 90       	pop	r0
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	0f 90       	pop	r0
    151c:	1f 90       	pop	r1
    151e:	18 95       	reti

00001520 <__vector_19>:
    1520:	1f 92       	push	r1
    1522:	0f 92       	push	r0
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	0f 92       	push	r0
    1528:	11 24       	eor	r1, r1
    152a:	2f 93       	push	r18
    152c:	3f 93       	push	r19
    152e:	4f 93       	push	r20
    1530:	5f 93       	push	r21
    1532:	6f 93       	push	r22
    1534:	7f 93       	push	r23
    1536:	8f 93       	push	r24
    1538:	9f 93       	push	r25
    153a:	af 93       	push	r26
    153c:	bf 93       	push	r27
    153e:	ef 93       	push	r30
    1540:	ff 93       	push	r31
    1542:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1546:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    154a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    154e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1552:	c9 01       	movw	r24, r18
    1554:	03 2e       	mov	r0, r19
    1556:	00 0c       	add	r0, r0
    1558:	aa 0b       	sbc	r26, r26
    155a:	bb 0b       	sbc	r27, r27
    155c:	dc 01       	movw	r26, r24
    155e:	99 27       	eor	r25, r25
    1560:	88 27       	eor	r24, r24
    1562:	60 e0       	ldi	r22, 0x00	; 0
    1564:	70 e0       	ldi	r23, 0x00	; 0
    1566:	84 2b       	or	r24, r20
    1568:	95 2b       	or	r25, r21
    156a:	a6 2b       	or	r26, r22
    156c:	b7 2b       	or	r27, r23
    156e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1572:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1576:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    157a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    157e:	b0 9b       	sbis	0x16, 0	; 22
    1580:	1b c0       	rjmp	.+54     	; 0x15b8 <__vector_19+0x98>
    1582:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1586:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    158a:	c9 01       	movw	r24, r18
    158c:	01 96       	adiw	r24, 0x01	; 1
    158e:	09 2e       	mov	r0, r25
    1590:	00 0c       	add	r0, r0
    1592:	aa 0b       	sbc	r26, r26
    1594:	bb 0b       	sbc	r27, r27
    1596:	dc 01       	movw	r26, r24
    1598:	99 27       	eor	r25, r25
    159a:	88 27       	eor	r24, r24
    159c:	60 e0       	ldi	r22, 0x00	; 0
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	84 2b       	or	r24, r20
    15a2:	95 2b       	or	r25, r21
    15a4:	a6 2b       	or	r26, r22
    15a6:	b7 2b       	or	r27, r23
    15a8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    15ac:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    15b0:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    15b4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    15b8:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1c>
    15bc:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1d>
    15c0:	30 97       	sbiw	r30, 0x00	; 0
    15c2:	39 f0       	breq	.+14     	; 0x15d2 <__vector_19+0xb2>
    15c4:	6e e0       	ldi	r22, 0x0E	; 14
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1c>
    15cc:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1d>
    15d0:	09 95       	icall
    15d2:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    15d6:	ff 91       	pop	r31
    15d8:	ef 91       	pop	r30
    15da:	bf 91       	pop	r27
    15dc:	af 91       	pop	r26
    15de:	9f 91       	pop	r25
    15e0:	8f 91       	pop	r24
    15e2:	7f 91       	pop	r23
    15e4:	6f 91       	pop	r22
    15e6:	5f 91       	pop	r21
    15e8:	4f 91       	pop	r20
    15ea:	3f 91       	pop	r19
    15ec:	2f 91       	pop	r18
    15ee:	0f 90       	pop	r0
    15f0:	0f be       	out	0x3f, r0	; 63
    15f2:	0f 90       	pop	r0
    15f4:	1f 90       	pop	r1
    15f6:	18 95       	reti

000015f8 <__vector_20>:
    15f8:	1f 92       	push	r1
    15fa:	0f 92       	push	r0
    15fc:	0f b6       	in	r0, 0x3f	; 63
    15fe:	0f 92       	push	r0
    1600:	11 24       	eor	r1, r1
    1602:	2f 93       	push	r18
    1604:	3f 93       	push	r19
    1606:	4f 93       	push	r20
    1608:	5f 93       	push	r21
    160a:	6f 93       	push	r22
    160c:	7f 93       	push	r23
    160e:	8f 93       	push	r24
    1610:	9f 93       	push	r25
    1612:	af 93       	push	r26
    1614:	bf 93       	push	r27
    1616:	ef 93       	push	r30
    1618:	ff 93       	push	r31
    161a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    161e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1622:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1626:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    162a:	c9 01       	movw	r24, r18
    162c:	03 2e       	mov	r0, r19
    162e:	00 0c       	add	r0, r0
    1630:	aa 0b       	sbc	r26, r26
    1632:	bb 0b       	sbc	r27, r27
    1634:	dc 01       	movw	r26, r24
    1636:	99 27       	eor	r25, r25
    1638:	88 27       	eor	r24, r24
    163a:	60 e0       	ldi	r22, 0x00	; 0
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	84 2b       	or	r24, r20
    1640:	95 2b       	or	r25, r21
    1642:	a6 2b       	or	r26, r22
    1644:	b7 2b       	or	r27, r23
    1646:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    164a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    164e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1652:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1656:	b0 9b       	sbis	0x16, 0	; 22
    1658:	1b c0       	rjmp	.+54     	; 0x1690 <__vector_20+0x98>
    165a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    165e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1662:	c9 01       	movw	r24, r18
    1664:	01 96       	adiw	r24, 0x01	; 1
    1666:	09 2e       	mov	r0, r25
    1668:	00 0c       	add	r0, r0
    166a:	aa 0b       	sbc	r26, r26
    166c:	bb 0b       	sbc	r27, r27
    166e:	dc 01       	movw	r26, r24
    1670:	99 27       	eor	r25, r25
    1672:	88 27       	eor	r24, r24
    1674:	60 e0       	ldi	r22, 0x00	; 0
    1676:	70 e0       	ldi	r23, 0x00	; 0
    1678:	84 2b       	or	r24, r20
    167a:	95 2b       	or	r25, r21
    167c:	a6 2b       	or	r26, r22
    167e:	b7 2b       	or	r27, r23
    1680:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1684:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1688:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    168c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1690:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1e>
    1694:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1f>
    1698:	30 97       	sbiw	r30, 0x00	; 0
    169a:	39 f0       	breq	.+14     	; 0x16aa <__vector_20+0xb2>
    169c:	6f e0       	ldi	r22, 0x0F	; 15
    169e:	70 e0       	ldi	r23, 0x00	; 0
    16a0:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1e>
    16a4:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1f>
    16a8:	09 95       	icall
    16aa:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    16ae:	ff 91       	pop	r31
    16b0:	ef 91       	pop	r30
    16b2:	bf 91       	pop	r27
    16b4:	af 91       	pop	r26
    16b6:	9f 91       	pop	r25
    16b8:	8f 91       	pop	r24
    16ba:	7f 91       	pop	r23
    16bc:	6f 91       	pop	r22
    16be:	5f 91       	pop	r21
    16c0:	4f 91       	pop	r20
    16c2:	3f 91       	pop	r19
    16c4:	2f 91       	pop	r18
    16c6:	0f 90       	pop	r0
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	0f 90       	pop	r0
    16cc:	1f 90       	pop	r1
    16ce:	18 95       	reti

000016d0 <__vector_21>:
    16d0:	1f 92       	push	r1
    16d2:	0f 92       	push	r0
    16d4:	0f b6       	in	r0, 0x3f	; 63
    16d6:	0f 92       	push	r0
    16d8:	11 24       	eor	r1, r1
    16da:	2f 93       	push	r18
    16dc:	3f 93       	push	r19
    16de:	4f 93       	push	r20
    16e0:	5f 93       	push	r21
    16e2:	6f 93       	push	r22
    16e4:	7f 93       	push	r23
    16e6:	8f 93       	push	r24
    16e8:	9f 93       	push	r25
    16ea:	af 93       	push	r26
    16ec:	bf 93       	push	r27
    16ee:	ef 93       	push	r30
    16f0:	ff 93       	push	r31
    16f2:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    16f6:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    16fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1702:	c9 01       	movw	r24, r18
    1704:	03 2e       	mov	r0, r19
    1706:	00 0c       	add	r0, r0
    1708:	aa 0b       	sbc	r26, r26
    170a:	bb 0b       	sbc	r27, r27
    170c:	dc 01       	movw	r26, r24
    170e:	99 27       	eor	r25, r25
    1710:	88 27       	eor	r24, r24
    1712:	60 e0       	ldi	r22, 0x00	; 0
    1714:	70 e0       	ldi	r23, 0x00	; 0
    1716:	84 2b       	or	r24, r20
    1718:	95 2b       	or	r25, r21
    171a:	a6 2b       	or	r26, r22
    171c:	b7 2b       	or	r27, r23
    171e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1722:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1726:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    172a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    172e:	b0 9b       	sbis	0x16, 0	; 22
    1730:	1b c0       	rjmp	.+54     	; 0x1768 <__vector_21+0x98>
    1732:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1736:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    173a:	c9 01       	movw	r24, r18
    173c:	01 96       	adiw	r24, 0x01	; 1
    173e:	09 2e       	mov	r0, r25
    1740:	00 0c       	add	r0, r0
    1742:	aa 0b       	sbc	r26, r26
    1744:	bb 0b       	sbc	r27, r27
    1746:	dc 01       	movw	r26, r24
    1748:	99 27       	eor	r25, r25
    174a:	88 27       	eor	r24, r24
    174c:	60 e0       	ldi	r22, 0x00	; 0
    174e:	70 e0       	ldi	r23, 0x00	; 0
    1750:	84 2b       	or	r24, r20
    1752:	95 2b       	or	r25, r21
    1754:	a6 2b       	or	r26, r22
    1756:	b7 2b       	or	r27, r23
    1758:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    175c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1760:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1764:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1768:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x20>
    176c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x21>
    1770:	30 97       	sbiw	r30, 0x00	; 0
    1772:	39 f0       	breq	.+14     	; 0x1782 <__vector_21+0xb2>
    1774:	60 e1       	ldi	r22, 0x10	; 16
    1776:	70 e0       	ldi	r23, 0x00	; 0
    1778:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x20>
    177c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x21>
    1780:	09 95       	icall
    1782:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1786:	ff 91       	pop	r31
    1788:	ef 91       	pop	r30
    178a:	bf 91       	pop	r27
    178c:	af 91       	pop	r26
    178e:	9f 91       	pop	r25
    1790:	8f 91       	pop	r24
    1792:	7f 91       	pop	r23
    1794:	6f 91       	pop	r22
    1796:	5f 91       	pop	r21
    1798:	4f 91       	pop	r20
    179a:	3f 91       	pop	r19
    179c:	2f 91       	pop	r18
    179e:	0f 90       	pop	r0
    17a0:	0f be       	out	0x3f, r0	; 63
    17a2:	0f 90       	pop	r0
    17a4:	1f 90       	pop	r1
    17a6:	18 95       	reti

000017a8 <__vector_22>:
    17a8:	1f 92       	push	r1
    17aa:	0f 92       	push	r0
    17ac:	0f b6       	in	r0, 0x3f	; 63
    17ae:	0f 92       	push	r0
    17b0:	11 24       	eor	r1, r1
    17b2:	2f 93       	push	r18
    17b4:	3f 93       	push	r19
    17b6:	4f 93       	push	r20
    17b8:	5f 93       	push	r21
    17ba:	6f 93       	push	r22
    17bc:	7f 93       	push	r23
    17be:	8f 93       	push	r24
    17c0:	9f 93       	push	r25
    17c2:	af 93       	push	r26
    17c4:	bf 93       	push	r27
    17c6:	ef 93       	push	r30
    17c8:	ff 93       	push	r31
    17ca:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    17ce:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    17d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17da:	c9 01       	movw	r24, r18
    17dc:	03 2e       	mov	r0, r19
    17de:	00 0c       	add	r0, r0
    17e0:	aa 0b       	sbc	r26, r26
    17e2:	bb 0b       	sbc	r27, r27
    17e4:	dc 01       	movw	r26, r24
    17e6:	99 27       	eor	r25, r25
    17e8:	88 27       	eor	r24, r24
    17ea:	60 e0       	ldi	r22, 0x00	; 0
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	84 2b       	or	r24, r20
    17f0:	95 2b       	or	r25, r21
    17f2:	a6 2b       	or	r26, r22
    17f4:	b7 2b       	or	r27, r23
    17f6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    17fa:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    17fe:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1802:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1806:	b0 9b       	sbis	0x16, 0	; 22
    1808:	1b c0       	rjmp	.+54     	; 0x1840 <__vector_22+0x98>
    180a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    180e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1812:	c9 01       	movw	r24, r18
    1814:	01 96       	adiw	r24, 0x01	; 1
    1816:	09 2e       	mov	r0, r25
    1818:	00 0c       	add	r0, r0
    181a:	aa 0b       	sbc	r26, r26
    181c:	bb 0b       	sbc	r27, r27
    181e:	dc 01       	movw	r26, r24
    1820:	99 27       	eor	r25, r25
    1822:	88 27       	eor	r24, r24
    1824:	60 e0       	ldi	r22, 0x00	; 0
    1826:	70 e0       	ldi	r23, 0x00	; 0
    1828:	84 2b       	or	r24, r20
    182a:	95 2b       	or	r25, r21
    182c:	a6 2b       	or	r26, r22
    182e:	b7 2b       	or	r27, r23
    1830:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1834:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1838:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    183c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1840:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x22>
    1844:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x23>
    1848:	30 97       	sbiw	r30, 0x00	; 0
    184a:	39 f0       	breq	.+14     	; 0x185a <__vector_22+0xb2>
    184c:	61 e1       	ldi	r22, 0x11	; 17
    184e:	70 e0       	ldi	r23, 0x00	; 0
    1850:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x22>
    1854:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x23>
    1858:	09 95       	icall
    185a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    185e:	ff 91       	pop	r31
    1860:	ef 91       	pop	r30
    1862:	bf 91       	pop	r27
    1864:	af 91       	pop	r26
    1866:	9f 91       	pop	r25
    1868:	8f 91       	pop	r24
    186a:	7f 91       	pop	r23
    186c:	6f 91       	pop	r22
    186e:	5f 91       	pop	r21
    1870:	4f 91       	pop	r20
    1872:	3f 91       	pop	r19
    1874:	2f 91       	pop	r18
    1876:	0f 90       	pop	r0
    1878:	0f be       	out	0x3f, r0	; 63
    187a:	0f 90       	pop	r0
    187c:	1f 90       	pop	r1
    187e:	18 95       	reti

00001880 <__vector_9>:
    1880:	1f 92       	push	r1
    1882:	0f 92       	push	r0
    1884:	0f b6       	in	r0, 0x3f	; 63
    1886:	0f 92       	push	r0
    1888:	11 24       	eor	r1, r1
    188a:	2f 93       	push	r18
    188c:	3f 93       	push	r19
    188e:	4f 93       	push	r20
    1890:	5f 93       	push	r21
    1892:	6f 93       	push	r22
    1894:	7f 93       	push	r23
    1896:	8f 93       	push	r24
    1898:	9f 93       	push	r25
    189a:	ef 93       	push	r30
    189c:	ff 93       	push	r31
    189e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    18a2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    18a6:	01 96       	adiw	r24, 0x01	; 1
    18a8:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
    18ac:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
    18b0:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    18b4:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    18b8:	30 97       	sbiw	r30, 0x00	; 0
    18ba:	39 f0       	breq	.+14     	; 0x18ca <__vector_9+0x4a>
    18bc:	42 81       	ldd	r20, Z+2	; 0x02
    18be:	53 81       	ldd	r21, Z+3	; 0x03
    18c0:	64 81       	ldd	r22, Z+4	; 0x04
    18c2:	75 81       	ldd	r23, Z+5	; 0x05
    18c4:	86 17       	cp	r24, r22
    18c6:	97 07       	cpc	r25, r23
    18c8:	a1 f0       	breq	.+40     	; 0x18f2 <__vector_9+0x72>
    18ca:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18ce:	8d 7f       	andi	r24, 0xFD	; 253
    18d0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18d4:	ff 91       	pop	r31
    18d6:	ef 91       	pop	r30
    18d8:	9f 91       	pop	r25
    18da:	8f 91       	pop	r24
    18dc:	7f 91       	pop	r23
    18de:	6f 91       	pop	r22
    18e0:	5f 91       	pop	r21
    18e2:	4f 91       	pop	r20
    18e4:	3f 91       	pop	r19
    18e6:	2f 91       	pop	r18
    18e8:	0f 90       	pop	r0
    18ea:	0f be       	out	0x3f, r0	; 63
    18ec:	0f 90       	pop	r0
    18ee:	1f 90       	pop	r1
    18f0:	18 95       	reti
    18f2:	ca 01       	movw	r24, r20
    18f4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18fc:	42 1b       	sub	r20, r18
    18fe:	53 0b       	sbc	r21, r19
    1900:	41 30       	cpi	r20, 0x01	; 1
    1902:	51 05       	cpc	r21, r1
    1904:	51 f0       	breq	.+20     	; 0x191a <__vector_9+0x9a>
    1906:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    190a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    190e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1912:	82 60       	ori	r24, 0x02	; 2
    1914:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1918:	dd cf       	rjmp	.-70     	; 0x18d4 <__vector_9+0x54>
    191a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1922:	01 96       	adiw	r24, 0x01	; 1
    1924:	f0 cf       	rjmp	.-32     	; 0x1906 <__vector_9+0x86>

00001926 <__vector_7>:
    1926:	1f 92       	push	r1
    1928:	0f 92       	push	r0
    192a:	0f b6       	in	r0, 0x3f	; 63
    192c:	0f 92       	push	r0
    192e:	11 24       	eor	r1, r1
    1930:	8f 92       	push	r8
    1932:	9f 92       	push	r9
    1934:	af 92       	push	r10
    1936:	bf 92       	push	r11
    1938:	cf 92       	push	r12
    193a:	df 92       	push	r13
    193c:	ef 92       	push	r14
    193e:	ff 92       	push	r15
    1940:	0f 93       	push	r16
    1942:	1f 93       	push	r17
    1944:	2f 93       	push	r18
    1946:	3f 93       	push	r19
    1948:	4f 93       	push	r20
    194a:	5f 93       	push	r21
    194c:	6f 93       	push	r22
    194e:	7f 93       	push	r23
    1950:	8f 93       	push	r24
    1952:	9f 93       	push	r25
    1954:	af 93       	push	r26
    1956:	bf 93       	push	r27
    1958:	cf 93       	push	r28
    195a:	df 93       	push	r29
    195c:	ef 93       	push	r30
    195e:	ff 93       	push	r31
    1960:	e0 90 1c 01 	lds	r14, 0x011C	; 0x80011c <__data_end>
    1964:	f0 90 1d 01 	lds	r15, 0x011D	; 0x80011d <__data_end+0x1>
    1968:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    196c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1970:	b0 99       	sbic	0x16, 0	; 22
    1972:	98 c0       	rjmp	.+304    	; 0x1aa4 <__vector_7+0x17e>
    1974:	47 01       	movw	r8, r14
    1976:	0f 2c       	mov	r0, r15
    1978:	00 0c       	add	r0, r0
    197a:	aa 08       	sbc	r10, r10
    197c:	bb 08       	sbc	r11, r11
    197e:	54 01       	movw	r10, r8
    1980:	99 24       	eor	r9, r9
    1982:	88 24       	eor	r8, r8
    1984:	a0 e0       	ldi	r26, 0x00	; 0
    1986:	b0 e0       	ldi	r27, 0x00	; 0
    1988:	88 2a       	or	r8, r24
    198a:	99 2a       	or	r9, r25
    198c:	aa 2a       	or	r10, r26
    198e:	bb 2a       	or	r11, r27
    1990:	c0 91 22 01 	lds	r28, 0x0122	; 0x800122 <timerQ>
    1994:	d0 91 23 01 	lds	r29, 0x0123	; 0x800123 <timerQ+0x1>
    1998:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <msgQ>
    199c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <msgQ+0x1>
    19a0:	20 97       	sbiw	r28, 0x00	; 0
    19a2:	09 f4       	brne	.+2      	; 0x19a6 <__vector_7+0x80>
    19a4:	3f c0       	rjmp	.+126    	; 0x1a24 <__vector_7+0xfe>
    19a6:	4a 81       	ldd	r20, Y+2	; 0x02
    19a8:	5b 81       	ldd	r21, Y+3	; 0x03
    19aa:	6c 81       	ldd	r22, Y+4	; 0x04
    19ac:	7d 81       	ldd	r23, Y+5	; 0x05
    19ae:	8a 01       	movw	r16, r20
    19b0:	9b 01       	movw	r18, r22
    19b2:	08 19       	sub	r16, r8
    19b4:	19 09       	sbc	r17, r9
    19b6:	2a 09       	sbc	r18, r10
    19b8:	3b 09       	sbc	r19, r11
    19ba:	10 16       	cp	r1, r16
    19bc:	11 06       	cpc	r1, r17
    19be:	12 06       	cpc	r1, r18
    19c0:	13 06       	cpc	r1, r19
    19c2:	0c f4       	brge	.+2      	; 0x19c6 <__vector_7+0xa0>
    19c4:	40 c0       	rjmp	.+128    	; 0x1a46 <__vector_7+0x120>
    19c6:	d8 80       	ld	r13, Y
    19c8:	c9 80       	ldd	r12, Y+1	; 0x01
    19ca:	00 97       	sbiw	r24, 0x00	; 0
    19cc:	b9 f1       	breq	.+110    	; 0x1a3c <__vector_7+0x116>
    19ce:	0e 81       	ldd	r16, Y+6	; 0x06
    19d0:	1f 81       	ldd	r17, Y+7	; 0x07
    19d2:	28 85       	ldd	r18, Y+8	; 0x08
    19d4:	39 85       	ldd	r19, Y+9	; 0x09
    19d6:	fc 01       	movw	r30, r24
    19d8:	46 81       	ldd	r20, Z+6	; 0x06
    19da:	57 81       	ldd	r21, Z+7	; 0x07
    19dc:	60 85       	ldd	r22, Z+8	; 0x08
    19de:	71 85       	ldd	r23, Z+9	; 0x09
    19e0:	04 17       	cp	r16, r20
    19e2:	15 07       	cpc	r17, r21
    19e4:	26 07       	cpc	r18, r22
    19e6:	37 07       	cpc	r19, r23
    19e8:	4c f1       	brlt	.+82     	; 0x1a3c <__vector_7+0x116>
    19ea:	dc 01       	movw	r26, r24
    19ec:	0a c0       	rjmp	.+20     	; 0x1a02 <__vector_7+0xdc>
    19ee:	46 81       	ldd	r20, Z+6	; 0x06
    19f0:	57 81       	ldd	r21, Z+7	; 0x07
    19f2:	60 85       	ldd	r22, Z+8	; 0x08
    19f4:	71 85       	ldd	r23, Z+9	; 0x09
    19f6:	04 17       	cp	r16, r20
    19f8:	15 07       	cpc	r17, r21
    19fa:	26 07       	cpc	r18, r22
    19fc:	37 07       	cpc	r19, r23
    19fe:	dc f0       	brlt	.+54     	; 0x1a36 <__vector_7+0x110>
    1a00:	df 01       	movw	r26, r30
    1a02:	ed 91       	ld	r30, X+
    1a04:	fc 91       	ld	r31, X
    1a06:	11 97       	sbiw	r26, 0x01	; 1
    1a08:	30 97       	sbiw	r30, 0x00	; 0
    1a0a:	89 f7       	brne	.-30     	; 0x19ee <__vector_7+0xc8>
    1a0c:	19 82       	std	Y+1, r1	; 0x01
    1a0e:	18 82       	st	Y, r1
    1a10:	cd 93       	st	X+, r28
    1a12:	dc 93       	st	X, r29
    1a14:	38 2f       	mov	r19, r24
    1a16:	29 2f       	mov	r18, r25
    1a18:	cd 2d       	mov	r28, r13
    1a1a:	dc 2d       	mov	r29, r12
    1a1c:	83 2f       	mov	r24, r19
    1a1e:	92 2f       	mov	r25, r18
    1a20:	20 97       	sbiw	r28, 0x00	; 0
    1a22:	09 f6       	brne	.-126    	; 0x19a6 <__vector_7+0x80>
    1a24:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <timerQ+0x1>
    1a28:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <timerQ>
    1a2c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    1a30:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1a34:	13 c0       	rjmp	.+38     	; 0x1a5c <__vector_7+0x136>
    1a36:	f9 83       	std	Y+1, r31	; 0x01
    1a38:	e8 83       	st	Y, r30
    1a3a:	ea cf       	rjmp	.-44     	; 0x1a10 <__vector_7+0xea>
    1a3c:	99 83       	std	Y+1, r25	; 0x01
    1a3e:	88 83       	st	Y, r24
    1a40:	3c 2f       	mov	r19, r28
    1a42:	2d 2f       	mov	r18, r29
    1a44:	e9 cf       	rjmp	.-46     	; 0x1a18 <__vector_7+0xf2>
    1a46:	d0 93 23 01 	sts	0x0123, r29	; 0x800123 <timerQ+0x1>
    1a4a:	c0 93 22 01 	sts	0x0122, r28	; 0x800122 <timerQ>
    1a4e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    1a52:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1a56:	e6 16       	cp	r14, r22
    1a58:	f7 06       	cpc	r15, r23
    1a5a:	d9 f1       	breq	.+118    	; 0x1ad2 <__vector_7+0x1ac>
    1a5c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a60:	8d 7f       	andi	r24, 0xFD	; 253
    1a62:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a66:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1a6a:	ff 91       	pop	r31
    1a6c:	ef 91       	pop	r30
    1a6e:	df 91       	pop	r29
    1a70:	cf 91       	pop	r28
    1a72:	bf 91       	pop	r27
    1a74:	af 91       	pop	r26
    1a76:	9f 91       	pop	r25
    1a78:	8f 91       	pop	r24
    1a7a:	7f 91       	pop	r23
    1a7c:	6f 91       	pop	r22
    1a7e:	5f 91       	pop	r21
    1a80:	4f 91       	pop	r20
    1a82:	3f 91       	pop	r19
    1a84:	2f 91       	pop	r18
    1a86:	1f 91       	pop	r17
    1a88:	0f 91       	pop	r16
    1a8a:	ff 90       	pop	r15
    1a8c:	ef 90       	pop	r14
    1a8e:	df 90       	pop	r13
    1a90:	cf 90       	pop	r12
    1a92:	bf 90       	pop	r11
    1a94:	af 90       	pop	r10
    1a96:	9f 90       	pop	r9
    1a98:	8f 90       	pop	r8
    1a9a:	0f 90       	pop	r0
    1a9c:	0f be       	out	0x3f, r0	; 63
    1a9e:	0f 90       	pop	r0
    1aa0:	1f 90       	pop	r1
    1aa2:	18 95       	reti
    1aa4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aa8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aac:	47 01       	movw	r8, r14
    1aae:	8f ef       	ldi	r24, 0xFF	; 255
    1ab0:	88 1a       	sub	r8, r24
    1ab2:	98 0a       	sbc	r9, r24
    1ab4:	09 2c       	mov	r0, r9
    1ab6:	00 0c       	add	r0, r0
    1ab8:	aa 08       	sbc	r10, r10
    1aba:	bb 08       	sbc	r11, r11
    1abc:	d4 01       	movw	r26, r8
    1abe:	99 27       	eor	r25, r25
    1ac0:	88 27       	eor	r24, r24
    1ac2:	49 01       	movw	r8, r18
    1ac4:	a1 2c       	mov	r10, r1
    1ac6:	b1 2c       	mov	r11, r1
    1ac8:	88 2a       	or	r8, r24
    1aca:	99 2a       	or	r9, r25
    1acc:	aa 2a       	or	r10, r26
    1ace:	bb 2a       	or	r11, r27
    1ad0:	5f cf       	rjmp	.-322    	; 0x1990 <__vector_7+0x6a>
    1ad2:	ca 01       	movw	r24, r20
    1ad4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ad8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1adc:	42 1b       	sub	r20, r18
    1ade:	53 0b       	sbc	r21, r19
    1ae0:	41 30       	cpi	r20, 0x01	; 1
    1ae2:	51 05       	cpc	r21, r1
    1ae4:	51 f0       	breq	.+20     	; 0x1afa <__vector_7+0x1d4>
    1ae6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1aea:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1aee:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1af2:	82 60       	ori	r24, 0x02	; 2
    1af4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1af8:	b6 cf       	rjmp	.-148    	; 0x1a66 <__vector_7+0x140>
    1afa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1afe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b02:	01 96       	adiw	r24, 0x01	; 1
    1b04:	f0 cf       	rjmp	.-32     	; 0x1ae6 <__vector_7+0x1c0>

00001b06 <async>:
    1b06:	3f 92       	push	r3
    1b08:	4f 92       	push	r4
    1b0a:	5f 92       	push	r5
    1b0c:	6f 92       	push	r6
    1b0e:	7f 92       	push	r7
    1b10:	8f 92       	push	r8
    1b12:	9f 92       	push	r9
    1b14:	af 92       	push	r10
    1b16:	bf 92       	push	r11
    1b18:	cf 92       	push	r12
    1b1a:	df 92       	push	r13
    1b1c:	ef 92       	push	r14
    1b1e:	ff 92       	push	r15
    1b20:	0f 93       	push	r16
    1b22:	1f 93       	push	r17
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	ef b7       	in	r30, 0x3f	; 63
    1b2a:	e0 78       	andi	r30, 0x80	; 128
    1b2c:	3e 2e       	mov	r3, r30
    1b2e:	f8 94       	cli
    1b30:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1b34:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1b38:	20 97       	sbiw	r28, 0x00	; 0
    1b3a:	09 f4       	brne	.+2      	; 0x1b3e <async+0x38>
    1b3c:	52 c1       	rjmp	.+676    	; 0x1de2 <async+0x2dc>
    1b3e:	e8 81       	ld	r30, Y
    1b40:	f9 81       	ldd	r31, Y+1	; 0x01
    1b42:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1b46:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1b4a:	1b 87       	std	Y+11, r17	; 0x0b
    1b4c:	0a 87       	std	Y+10, r16	; 0x0a
    1b4e:	fd 86       	std	Y+13, r15	; 0x0d
    1b50:	ec 86       	std	Y+12, r14	; 0x0c
    1b52:	df 86       	std	Y+15, r13	; 0x0f
    1b54:	ce 86       	std	Y+14, r12	; 0x0e
    1b56:	33 20       	and	r3, r3
    1b58:	09 f4       	brne	.+2      	; 0x1b5c <async+0x56>
    1b5a:	6f c0       	rjmp	.+222    	; 0x1c3a <async+0x134>
    1b5c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1b60:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1b64:	02 80       	ldd	r0, Z+2	; 0x02
    1b66:	f3 81       	ldd	r31, Z+3	; 0x03
    1b68:	e0 2d       	mov	r30, r0
    1b6a:	c2 80       	ldd	r12, Z+2	; 0x02
    1b6c:	d3 80       	ldd	r13, Z+3	; 0x03
    1b6e:	e4 80       	ldd	r14, Z+4	; 0x04
    1b70:	f5 80       	ldd	r15, Z+5	; 0x05
    1b72:	c6 0e       	add	r12, r22
    1b74:	d7 1e       	adc	r13, r23
    1b76:	e8 1e       	adc	r14, r24
    1b78:	f9 1e       	adc	r15, r25
    1b7a:	ca 82       	std	Y+2, r12	; 0x02
    1b7c:	db 82       	std	Y+3, r13	; 0x03
    1b7e:	ec 82       	std	Y+4, r14	; 0x04
    1b80:	fd 82       	std	Y+5, r15	; 0x05
    1b82:	12 16       	cp	r1, r18
    1b84:	13 06       	cpc	r1, r19
    1b86:	14 06       	cpc	r1, r20
    1b88:	15 06       	cpc	r1, r21
    1b8a:	0c f0       	brlt	.+2      	; 0x1b8e <async+0x88>
    1b8c:	f8 c0       	rjmp	.+496    	; 0x1d7e <async+0x278>
    1b8e:	da 01       	movw	r26, r20
    1b90:	c9 01       	movw	r24, r18
    1b92:	8c 01       	movw	r16, r24
    1b94:	9d 01       	movw	r18, r26
    1b96:	0c 0d       	add	r16, r12
    1b98:	1d 1d       	adc	r17, r13
    1b9a:	2e 1d       	adc	r18, r14
    1b9c:	3f 1d       	adc	r19, r15
    1b9e:	0e 83       	std	Y+6, r16	; 0x06
    1ba0:	1f 83       	std	Y+7, r17	; 0x07
    1ba2:	28 87       	std	Y+8, r18	; 0x08
    1ba4:	39 87       	std	Y+9, r19	; 0x09
    1ba6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1baa:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1bae:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bb2:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bb6:	b0 99       	sbic	0x16, 0	; 22
    1bb8:	49 c0       	rjmp	.+146    	; 0x1c4c <async+0x146>
    1bba:	2c 01       	movw	r4, r24
    1bbc:	09 2e       	mov	r0, r25
    1bbe:	00 0c       	add	r0, r0
    1bc0:	66 08       	sbc	r6, r6
    1bc2:	77 08       	sbc	r7, r7
    1bc4:	52 01       	movw	r10, r4
    1bc6:	99 24       	eor	r9, r9
    1bc8:	88 24       	eor	r8, r8
    1bca:	2b 01       	movw	r4, r22
    1bcc:	61 2c       	mov	r6, r1
    1bce:	71 2c       	mov	r7, r1
    1bd0:	48 28       	or	r4, r8
    1bd2:	59 28       	or	r5, r9
    1bd4:	6a 28       	or	r6, r10
    1bd6:	7b 28       	or	r7, r11
    1bd8:	b7 01       	movw	r22, r14
    1bda:	a6 01       	movw	r20, r12
    1bdc:	44 19       	sub	r20, r4
    1bde:	55 09       	sbc	r21, r5
    1be0:	66 09       	sbc	r22, r6
    1be2:	77 09       	sbc	r23, r7
    1be4:	14 16       	cp	r1, r20
    1be6:	15 06       	cpc	r1, r21
    1be8:	16 06       	cpc	r1, r22
    1bea:	17 06       	cpc	r1, r23
    1bec:	0c f0       	brlt	.+2      	; 0x1bf0 <async+0xea>
    1bee:	68 c0       	rjmp	.+208    	; 0x1cc0 <async+0x1ba>
    1bf0:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timerQ>
    1bf4:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timerQ+0x1>
    1bf8:	10 97       	sbiw	r26, 0x00	; 0
    1bfa:	09 f4       	brne	.+2      	; 0x1bfe <async+0xf8>
    1bfc:	dc c0       	rjmp	.+440    	; 0x1db6 <async+0x2b0>
    1bfe:	12 96       	adiw	r26, 0x02	; 2
    1c00:	0d 91       	ld	r16, X+
    1c02:	1d 91       	ld	r17, X+
    1c04:	2d 91       	ld	r18, X+
    1c06:	3c 91       	ld	r19, X
    1c08:	15 97       	sbiw	r26, 0x05	; 5
    1c0a:	c0 16       	cp	r12, r16
    1c0c:	d1 06       	cpc	r13, r17
    1c0e:	e2 06       	cpc	r14, r18
    1c10:	f3 06       	cpc	r15, r19
    1c12:	5c f4       	brge	.+22     	; 0x1c2a <async+0x124>
    1c14:	d0 c0       	rjmp	.+416    	; 0x1db6 <async+0x2b0>
    1c16:	42 81       	ldd	r20, Z+2	; 0x02
    1c18:	53 81       	ldd	r21, Z+3	; 0x03
    1c1a:	64 81       	ldd	r22, Z+4	; 0x04
    1c1c:	75 81       	ldd	r23, Z+5	; 0x05
    1c1e:	c4 16       	cp	r12, r20
    1c20:	d5 06       	cpc	r13, r21
    1c22:	e6 06       	cpc	r14, r22
    1c24:	f7 06       	cpc	r15, r23
    1c26:	4c f1       	brlt	.+82     	; 0x1c7a <async+0x174>
    1c28:	df 01       	movw	r26, r30
    1c2a:	ed 91       	ld	r30, X+
    1c2c:	fc 91       	ld	r31, X
    1c2e:	11 97       	sbiw	r26, 0x01	; 1
    1c30:	30 97       	sbiw	r30, 0x00	; 0
    1c32:	89 f7       	brne	.-30     	; 0x1c16 <async+0x110>
    1c34:	19 82       	std	Y+1, r1	; 0x01
    1c36:	18 82       	st	Y, r1
    1c38:	22 c0       	rjmp	.+68     	; 0x1c7e <async+0x178>
    1c3a:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <timestamp>
    1c3e:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <timestamp+0x1>
    1c42:	e0 90 20 01 	lds	r14, 0x0120	; 0x800120 <timestamp+0x2>
    1c46:	f0 90 21 01 	lds	r15, 0x0121	; 0x800121 <timestamp+0x3>
    1c4a:	93 cf       	rjmp	.-218    	; 0x1b72 <async+0x6c>
    1c4c:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c50:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c54:	2c 01       	movw	r4, r24
    1c56:	4f ef       	ldi	r20, 0xFF	; 255
    1c58:	44 1a       	sub	r4, r20
    1c5a:	54 0a       	sbc	r5, r20
    1c5c:	05 2c       	mov	r0, r5
    1c5e:	00 0c       	add	r0, r0
    1c60:	66 08       	sbc	r6, r6
    1c62:	77 08       	sbc	r7, r7
    1c64:	b2 01       	movw	r22, r4
    1c66:	55 27       	eor	r21, r21
    1c68:	44 27       	eor	r20, r20
    1c6a:	2f 01       	movw	r4, r30
    1c6c:	61 2c       	mov	r6, r1
    1c6e:	71 2c       	mov	r7, r1
    1c70:	44 2a       	or	r4, r20
    1c72:	55 2a       	or	r5, r21
    1c74:	66 2a       	or	r6, r22
    1c76:	77 2a       	or	r7, r23
    1c78:	af cf       	rjmp	.-162    	; 0x1bd8 <async+0xd2>
    1c7a:	f9 83       	std	Y+1, r31	; 0x01
    1c7c:	e8 83       	st	Y, r30
    1c7e:	cd 93       	st	X+, r28
    1c80:	dc 93       	st	X, r29
    1c82:	82 17       	cp	r24, r18
    1c84:	93 07       	cpc	r25, r19
    1c86:	09 f4       	brne	.+2      	; 0x1c8a <async+0x184>
    1c88:	7f c0       	rjmp	.+254    	; 0x1d88 <async+0x282>
    1c8a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c8e:	8d 7f       	andi	r24, 0xFD	; 253
    1c90:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c94:	33 20       	and	r3, r3
    1c96:	09 f0       	breq	.+2      	; 0x1c9a <async+0x194>
    1c98:	78 94       	sei
    1c9a:	ce 01       	movw	r24, r28
    1c9c:	df 91       	pop	r29
    1c9e:	cf 91       	pop	r28
    1ca0:	1f 91       	pop	r17
    1ca2:	0f 91       	pop	r16
    1ca4:	ff 90       	pop	r15
    1ca6:	ef 90       	pop	r14
    1ca8:	df 90       	pop	r13
    1caa:	cf 90       	pop	r12
    1cac:	bf 90       	pop	r11
    1cae:	af 90       	pop	r10
    1cb0:	9f 90       	pop	r9
    1cb2:	8f 90       	pop	r8
    1cb4:	7f 90       	pop	r7
    1cb6:	6f 90       	pop	r6
    1cb8:	5f 90       	pop	r5
    1cba:	4f 90       	pop	r4
    1cbc:	3f 90       	pop	r3
    1cbe:	08 95       	ret
    1cc0:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <msgQ>
    1cc4:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <msgQ+0x1>
    1cc8:	10 97       	sbiw	r26, 0x00	; 0
    1cca:	09 f4       	brne	.+2      	; 0x1cce <async+0x1c8>
    1ccc:	83 c0       	rjmp	.+262    	; 0x1dd4 <async+0x2ce>
    1cce:	16 96       	adiw	r26, 0x06	; 6
    1cd0:	cd 90       	ld	r12, X+
    1cd2:	dd 90       	ld	r13, X+
    1cd4:	ed 90       	ld	r14, X+
    1cd6:	fc 90       	ld	r15, X
    1cd8:	19 97       	sbiw	r26, 0x09	; 9
    1cda:	0c 15       	cp	r16, r12
    1cdc:	1d 05       	cpc	r17, r13
    1cde:	2e 05       	cpc	r18, r14
    1ce0:	3f 05       	cpc	r19, r15
    1ce2:	64 f4       	brge	.+24     	; 0x1cfc <async+0x1f6>
    1ce4:	77 c0       	rjmp	.+238    	; 0x1dd4 <async+0x2ce>
    1ce6:	c6 80       	ldd	r12, Z+6	; 0x06
    1ce8:	d7 80       	ldd	r13, Z+7	; 0x07
    1cea:	e0 84       	ldd	r14, Z+8	; 0x08
    1cec:	f1 84       	ldd	r15, Z+9	; 0x09
    1cee:	0c 15       	cp	r16, r12
    1cf0:	1d 05       	cpc	r17, r13
    1cf2:	2e 05       	cpc	r18, r14
    1cf4:	3f 05       	cpc	r19, r15
    1cf6:	0c f4       	brge	.+2      	; 0x1cfa <async+0x1f4>
    1cf8:	5b c0       	rjmp	.+182    	; 0x1db0 <async+0x2aa>
    1cfa:	df 01       	movw	r26, r30
    1cfc:	ed 91       	ld	r30, X+
    1cfe:	fc 91       	ld	r31, X
    1d00:	11 97       	sbiw	r26, 0x01	; 1
    1d02:	30 97       	sbiw	r30, 0x00	; 0
    1d04:	81 f7       	brne	.-32     	; 0x1ce6 <async+0x1e0>
    1d06:	19 82       	std	Y+1, r1	; 0x01
    1d08:	18 82       	st	Y, r1
    1d0a:	cd 93       	st	X+, r28
    1d0c:	dc 93       	st	X, r29
    1d0e:	33 20       	and	r3, r3
    1d10:	21 f2       	breq	.-120    	; 0x1c9a <async+0x194>
    1d12:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1d16:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1d1a:	00 97       	sbiw	r24, 0x00	; 0
    1d1c:	09 f4       	brne	.+2      	; 0x1d20 <async+0x21a>
    1d1e:	bc cf       	rjmp	.-136    	; 0x1c98 <async+0x192>
    1d20:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1d24:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1d28:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <msgQ>
    1d2c:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <msgQ+0x1>
    1d30:	02 81       	ldd	r16, Z+2	; 0x02
    1d32:	13 81       	ldd	r17, Z+3	; 0x03
    1d34:	d9 01       	movw	r26, r18
    1d36:	16 96       	adiw	r26, 0x06	; 6
    1d38:	4d 91       	ld	r20, X+
    1d3a:	5d 91       	ld	r21, X+
    1d3c:	6d 91       	ld	r22, X+
    1d3e:	7c 91       	ld	r23, X
    1d40:	19 97       	sbiw	r26, 0x09	; 9
    1d42:	d8 01       	movw	r26, r16
    1d44:	16 96       	adiw	r26, 0x06	; 6
    1d46:	0d 91       	ld	r16, X+
    1d48:	1d 91       	ld	r17, X+
    1d4a:	2d 91       	ld	r18, X+
    1d4c:	3c 91       	ld	r19, X
    1d4e:	19 97       	sbiw	r26, 0x09	; 9
    1d50:	40 1b       	sub	r20, r16
    1d52:	51 0b       	sbc	r21, r17
    1d54:	62 0b       	sbc	r22, r18
    1d56:	73 0b       	sbc	r23, r19
    1d58:	77 ff       	sbrs	r23, 7
    1d5a:	9e cf       	rjmp	.-196    	; 0x1c98 <async+0x192>
    1d5c:	dc 01       	movw	r26, r24
    1d5e:	2d 91       	ld	r18, X+
    1d60:	3c 91       	ld	r19, X
    1d62:	11 97       	sbiw	r26, 0x01	; 1
    1d64:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1d68:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1d6c:	ed 93       	st	X+, r30
    1d6e:	fc 93       	st	X, r31
    1d70:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1d74:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1d78:	0e 94 3d 04 	call	0x87a	; 0x87a <dispatch>
    1d7c:	8d cf       	rjmp	.-230    	; 0x1c98 <async+0x192>
    1d7e:	8f ef       	ldi	r24, 0xFF	; 255
    1d80:	9f ef       	ldi	r25, 0xFF	; 255
    1d82:	af ef       	ldi	r26, 0xFF	; 255
    1d84:	bf e7       	ldi	r27, 0x7F	; 127
    1d86:	05 cf       	rjmp	.-502    	; 0x1b92 <async+0x8c>
    1d88:	c8 01       	movw	r24, r16
    1d8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d92:	04 1b       	sub	r16, r20
    1d94:	15 0b       	sbc	r17, r21
    1d96:	01 30       	cpi	r16, 0x01	; 1
    1d98:	11 05       	cpc	r17, r1
    1d9a:	b1 f0       	breq	.+44     	; 0x1dc8 <async+0x2c2>
    1d9c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1da0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1da4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1da8:	82 60       	ori	r24, 0x02	; 2
    1daa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1dae:	72 cf       	rjmp	.-284    	; 0x1c94 <async+0x18e>
    1db0:	f9 83       	std	Y+1, r31	; 0x01
    1db2:	e8 83       	st	Y, r30
    1db4:	aa cf       	rjmp	.-172    	; 0x1d0a <async+0x204>
    1db6:	b9 83       	std	Y+1, r27	; 0x01
    1db8:	a8 83       	st	Y, r26
    1dba:	d0 93 23 01 	sts	0x0123, r29	; 0x800123 <timerQ+0x1>
    1dbe:	c0 93 22 01 	sts	0x0122, r28	; 0x800122 <timerQ>
    1dc2:	97 01       	movw	r18, r14
    1dc4:	86 01       	movw	r16, r12
    1dc6:	5d cf       	rjmp	.-326    	; 0x1c82 <async+0x17c>
    1dc8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dcc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dd0:	01 96       	adiw	r24, 0x01	; 1
    1dd2:	e4 cf       	rjmp	.-56     	; 0x1d9c <async+0x296>
    1dd4:	b9 83       	std	Y+1, r27	; 0x01
    1dd6:	a8 83       	st	Y, r26
    1dd8:	d0 93 25 01 	sts	0x0125, r29	; 0x800125 <msgQ+0x1>
    1ddc:	c0 93 24 01 	sts	0x0124, r28	; 0x800124 <msgQ>
    1de0:	96 cf       	rjmp	.-212    	; 0x1d0e <async+0x208>
    1de2:	0e 94 9d 04 	call	0x93a	; 0x93a <dequeue.part.0>

00001de6 <sync>:
    1de6:	cf 92       	push	r12
    1de8:	df 92       	push	r13
    1dea:	ef 92       	push	r14
    1dec:	ff 92       	push	r15
    1dee:	0f 93       	push	r16
    1df0:	1f 93       	push	r17
    1df2:	cf 93       	push	r28
    1df4:	df 93       	push	r29
    1df6:	ec 01       	movw	r28, r24
    1df8:	7b 01       	movw	r14, r22
    1dfa:	6a 01       	movw	r12, r20
    1dfc:	1f b7       	in	r17, 0x3f	; 63
    1dfe:	10 78       	andi	r17, 0x80	; 128
    1e00:	f8 94       	cli
    1e02:	a8 81       	ld	r26, Y
    1e04:	b9 81       	ldd	r27, Y+1	; 0x01
    1e06:	10 97       	sbiw	r26, 0x00	; 0
    1e08:	19 f4       	brne	.+6      	; 0x1e10 <sync+0x2a>
    1e0a:	62 c0       	rjmp	.+196    	; 0x1ed0 <sync+0xea>
    1e0c:	a0 81       	ld	r26, Z
    1e0e:	b1 81       	ldd	r27, Z+1	; 0x01
    1e10:	14 96       	adiw	r26, 0x04	; 4
    1e12:	ed 91       	ld	r30, X+
    1e14:	fc 91       	ld	r31, X
    1e16:	15 97       	sbiw	r26, 0x05	; 5
    1e18:	30 97       	sbiw	r30, 0x00	; 0
    1e1a:	c1 f7       	brne	.-16     	; 0x1e0c <sync+0x26>
    1e1c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1e20:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1e24:	2a 17       	cp	r18, r26
    1e26:	3b 07       	cpc	r19, r27
    1e28:	09 f4       	brne	.+2      	; 0x1e2c <sync+0x46>
    1e2a:	4c c0       	rjmp	.+152    	; 0x1ec4 <sync+0xde>
    1e2c:	11 23       	and	r17, r17
    1e2e:	a1 f1       	breq	.+104    	; 0x1e98 <sync+0xb2>
    1e30:	8a 81       	ldd	r24, Y+2	; 0x02
    1e32:	9b 81       	ldd	r25, Y+3	; 0x03
    1e34:	00 97       	sbiw	r24, 0x00	; 0
    1e36:	19 f0       	breq	.+6      	; 0x1e3e <sync+0x58>
    1e38:	fc 01       	movw	r30, r24
    1e3a:	15 82       	std	Z+5, r1	; 0x05
    1e3c:	14 82       	std	Z+4, r1	; 0x04
    1e3e:	3b 83       	std	Y+3, r19	; 0x03
    1e40:	2a 83       	std	Y+2, r18	; 0x02
    1e42:	f9 01       	movw	r30, r18
    1e44:	d5 83       	std	Z+5, r29	; 0x05
    1e46:	c4 83       	std	Z+4, r28	; 0x04
    1e48:	cd 01       	movw	r24, r26
    1e4a:	0e 94 3d 04 	call	0x87a	; 0x87a <dispatch>
    1e4e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1e52:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1e56:	82 81       	ldd	r24, Z+2	; 0x02
    1e58:	93 81       	ldd	r25, Z+3	; 0x03
    1e5a:	89 2b       	or	r24, r25
    1e5c:	09 f4       	brne	.+2      	; 0x1e60 <sync+0x7a>
    1e5e:	41 c0       	rjmp	.+130    	; 0x1ee2 <sync+0xfc>
    1e60:	f9 83       	std	Y+1, r31	; 0x01
    1e62:	e8 83       	st	Y, r30
    1e64:	8a 81       	ldd	r24, Y+2	; 0x02
    1e66:	9b 81       	ldd	r25, Y+3	; 0x03
    1e68:	01 97       	sbiw	r24, 0x01	; 1
    1e6a:	09 f0       	breq	.+2      	; 0x1e6e <sync+0x88>
    1e6c:	78 94       	sei
    1e6e:	b6 01       	movw	r22, r12
    1e70:	ce 01       	movw	r24, r28
    1e72:	f7 01       	movw	r30, r14
    1e74:	09 95       	icall
    1e76:	f8 2e       	mov	r15, r24
    1e78:	09 2f       	mov	r16, r25
    1e7a:	8f b7       	in	r24, 0x3f	; 63
    1e7c:	f8 94       	cli
    1e7e:	19 82       	std	Y+1, r1	; 0x01
    1e80:	18 82       	st	Y, r1
    1e82:	8a 81       	ldd	r24, Y+2	; 0x02
    1e84:	9b 81       	ldd	r25, Y+3	; 0x03
    1e86:	82 30       	cpi	r24, 0x02	; 2
    1e88:	91 05       	cpc	r25, r1
    1e8a:	a0 f4       	brcc	.+40     	; 0x1eb4 <sync+0xce>
    1e8c:	11 23       	and	r17, r17
    1e8e:	79 f0       	breq	.+30     	; 0x1eae <sync+0xc8>
    1e90:	78 94       	sei
    1e92:	8f 2d       	mov	r24, r15
    1e94:	90 2f       	mov	r25, r16
    1e96:	02 c0       	rjmp	.+4      	; 0x1e9c <sync+0xb6>
    1e98:	8f ef       	ldi	r24, 0xFF	; 255
    1e9a:	9f ef       	ldi	r25, 0xFF	; 255
    1e9c:	df 91       	pop	r29
    1e9e:	cf 91       	pop	r28
    1ea0:	1f 91       	pop	r17
    1ea2:	0f 91       	pop	r16
    1ea4:	ff 90       	pop	r15
    1ea6:	ef 90       	pop	r14
    1ea8:	df 90       	pop	r13
    1eaa:	cf 90       	pop	r12
    1eac:	08 95       	ret
    1eae:	8f 2d       	mov	r24, r15
    1eb0:	90 2f       	mov	r25, r16
    1eb2:	f4 cf       	rjmp	.-24     	; 0x1e9c <sync+0xb6>
    1eb4:	1b 82       	std	Y+3, r1	; 0x03
    1eb6:	1a 82       	std	Y+2, r1	; 0x02
    1eb8:	fc 01       	movw	r30, r24
    1eba:	15 82       	std	Z+5, r1	; 0x05
    1ebc:	14 82       	std	Z+4, r1	; 0x04
    1ebe:	0e 94 3d 04 	call	0x87a	; 0x87a <dispatch>
    1ec2:	e4 cf       	rjmp	.-56     	; 0x1e8c <sync+0xa6>
    1ec4:	11 23       	and	r17, r17
    1ec6:	41 f3       	breq	.-48     	; 0x1e98 <sync+0xb2>
    1ec8:	78 94       	sei
    1eca:	8f ef       	ldi	r24, 0xFF	; 255
    1ecc:	9f ef       	ldi	r25, 0xFF	; 255
    1ece:	e6 cf       	rjmp	.-52     	; 0x1e9c <sync+0xb6>
    1ed0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1ed4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    1ed8:	99 83       	std	Y+1, r25	; 0x01
    1eda:	88 83       	st	Y, r24
    1edc:	11 23       	and	r17, r17
    1ede:	39 f2       	breq	.-114    	; 0x1e6e <sync+0x88>
    1ee0:	c1 cf       	rjmp	.-126    	; 0x1e64 <sync+0x7e>
    1ee2:	78 94       	sei
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	d9 cf       	rjmp	.-78     	; 0x1e9c <sync+0xb6>

00001eea <run>:
    1eea:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1eee:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1ef2:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1ef6:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1efa:	20 97       	sbiw	r28, 0x00	; 0
    1efc:	09 f4       	brne	.+2      	; 0x1f00 <run+0x16>
    1efe:	6e c0       	rjmp	.+220    	; 0x1fdc <run+0xf2>
    1f00:	88 81       	ld	r24, Y
    1f02:	99 81       	ldd	r25, Y+1	; 0x01
    1f04:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    1f08:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1f0c:	d3 83       	std	Z+3, r29	; 0x03
    1f0e:	c2 83       	std	Z+2, r28	; 0x02
    1f10:	78 94       	sei
    1f12:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f14:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f16:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f18:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f1c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f1e:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <sync>
    1f22:	8f b7       	in	r24, 0x3f	; 63
    1f24:	f8 94       	cli
    1f26:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1f2a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1f2e:	99 83       	std	Y+1, r25	; 0x01
    1f30:	88 83       	st	Y, r24
    1f32:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1f36:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1f3a:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1f3e:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1f42:	f7 01       	movw	r30, r14
    1f44:	a0 81       	ld	r26, Z
    1f46:	b1 81       	ldd	r27, Z+1	; 0x01
    1f48:	12 96       	adiw	r26, 0x02	; 2
    1f4a:	8d 91       	ld	r24, X+
    1f4c:	9c 91       	ld	r25, X
    1f4e:	13 97       	sbiw	r26, 0x03	; 3
    1f50:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1f54:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1f58:	20 97       	sbiw	r28, 0x00	; 0
    1f5a:	a9 f0       	breq	.+42     	; 0x1f86 <run+0x9c>
    1f5c:	00 97       	sbiw	r24, 0x00	; 0
    1f5e:	49 f2       	breq	.-110    	; 0x1ef2 <run+0x8>
    1f60:	4e 81       	ldd	r20, Y+6	; 0x06
    1f62:	5f 81       	ldd	r21, Y+7	; 0x07
    1f64:	68 85       	ldd	r22, Y+8	; 0x08
    1f66:	79 85       	ldd	r23, Y+9	; 0x09
    1f68:	fc 01       	movw	r30, r24
    1f6a:	06 81       	ldd	r16, Z+6	; 0x06
    1f6c:	17 81       	ldd	r17, Z+7	; 0x07
    1f6e:	20 85       	ldd	r18, Z+8	; 0x08
    1f70:	31 85       	ldd	r19, Z+9	; 0x09
    1f72:	40 1b       	sub	r20, r16
    1f74:	51 0b       	sbc	r21, r17
    1f76:	62 0b       	sbc	r22, r18
    1f78:	73 0b       	sbc	r23, r19
    1f7a:	14 16       	cp	r1, r20
    1f7c:	15 06       	cpc	r1, r21
    1f7e:	16 06       	cpc	r1, r22
    1f80:	17 06       	cpc	r1, r23
    1f82:	0c f0       	brlt	.+2      	; 0x1f86 <run+0x9c>
    1f84:	b6 cf       	rjmp	.-148    	; 0x1ef2 <run+0x8>
    1f86:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1f8a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1f8e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f92:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f96:	f7 01       	movw	r30, r14
    1f98:	91 83       	std	Z+1, r25	; 0x01
    1f9a:	80 83       	st	Z, r24
    1f9c:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1fa0:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1fa4:	14 96       	adiw	r26, 0x04	; 4
    1fa6:	ed 91       	ld	r30, X+
    1fa8:	fc 91       	ld	r31, X
    1faa:	15 97       	sbiw	r26, 0x05	; 5
    1fac:	30 97       	sbiw	r30, 0x00	; 0
    1fae:	41 f0       	breq	.+16     	; 0x1fc0 <run+0xd6>
    1fb0:	a0 81       	ld	r26, Z
    1fb2:	b1 81       	ldd	r27, Z+1	; 0x01
    1fb4:	14 96       	adiw	r26, 0x04	; 4
    1fb6:	ed 91       	ld	r30, X+
    1fb8:	fc 91       	ld	r31, X
    1fba:	15 97       	sbiw	r26, 0x05	; 5
    1fbc:	30 97       	sbiw	r30, 0x00	; 0
    1fbe:	c1 f7       	brne	.-16     	; 0x1fb0 <run+0xc6>
    1fc0:	cd 01       	movw	r24, r26
    1fc2:	0e 94 3d 04 	call	0x87a	; 0x87a <dispatch>
    1fc6:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1fca:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1fce:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1fd2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1fd6:	20 97       	sbiw	r28, 0x00	; 0
    1fd8:	09 f0       	breq	.+2      	; 0x1fdc <run+0xf2>
    1fda:	92 cf       	rjmp	.-220    	; 0x1f00 <run+0x16>
    1fdc:	0e 94 9d 04 	call	0x93a	; 0x93a <dequeue.part.0>

00001fe0 <install>:
    1fe0:	42 31       	cpi	r20, 0x12	; 18
    1fe2:	b8 f4       	brcc	.+46     	; 0x2012 <install+0x32>
    1fe4:	2f b7       	in	r18, 0x3f	; 63
    1fe6:	f8 94       	cli
    1fe8:	50 e0       	ldi	r21, 0x00	; 0
    1fea:	44 0f       	add	r20, r20
    1fec:	55 1f       	adc	r21, r21
    1fee:	fa 01       	movw	r30, r20
    1ff0:	ea 5d       	subi	r30, 0xDA	; 218
    1ff2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ff4:	91 83       	std	Z+1, r25	; 0x01
    1ff6:	80 83       	st	Z, r24
    1ff8:	fa 01       	movw	r30, r20
    1ffa:	e2 54       	subi	r30, 0x42	; 66
    1ffc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ffe:	71 83       	std	Z+1, r23	; 0x01
    2000:	60 83       	st	Z, r22
    2002:	41 e0       	ldi	r20, 0x01	; 1
    2004:	50 e0       	ldi	r21, 0x00	; 0
    2006:	fc 01       	movw	r30, r24
    2008:	53 83       	std	Z+3, r21	; 0x03
    200a:	42 83       	std	Z+2, r20	; 0x02
    200c:	27 ff       	sbrs	r18, 7
    200e:	01 c0       	rjmp	.+2      	; 0x2012 <install+0x32>
    2010:	78 94       	sei
    2012:	08 95       	ret

00002014 <tinytimber>:
    2014:	8c 01       	movw	r16, r24
    2016:	7b 01       	movw	r14, r22
    2018:	6a 01       	movw	r12, r20
    201a:	8f b7       	in	r24, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <initialize>
    2022:	78 94       	sei
    2024:	e1 14       	cp	r14, r1
    2026:	f1 04       	cpc	r15, r1
    2028:	41 f0       	breq	.+16     	; 0x203a <tinytimber+0x26>
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	a9 01       	movw	r20, r18
    2030:	60 e0       	ldi	r22, 0x00	; 0
    2032:	70 e0       	ldi	r23, 0x00	; 0
    2034:	cb 01       	movw	r24, r22
    2036:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <async>
    203a:	8f b7       	in	r24, 0x3f	; 63
    203c:	f8 94       	cli
    203e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    2042:	78 94       	sei
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	83 bf       	out	0x33, r24	; 51
    2048:	88 95       	sleep
    204a:	fd cf       	rjmp	.-6      	; 0x2046 <tinytimber+0x32>

0000204c <__divmodsi4>:
    204c:	05 2e       	mov	r0, r21
    204e:	97 fb       	bst	r25, 7
    2050:	1e f4       	brtc	.+6      	; 0x2058 <__divmodsi4+0xc>
    2052:	00 94       	com	r0
    2054:	0e 94 3d 10 	call	0x207a	; 0x207a <__negsi2>
    2058:	57 fd       	sbrc	r21, 7
    205a:	07 d0       	rcall	.+14     	; 0x206a <__divmodsi4_neg2>
    205c:	0e 94 45 10 	call	0x208a	; 0x208a <__udivmodsi4>
    2060:	07 fc       	sbrc	r0, 7
    2062:	03 d0       	rcall	.+6      	; 0x206a <__divmodsi4_neg2>
    2064:	4e f4       	brtc	.+18     	; 0x2078 <__divmodsi4_exit>
    2066:	0c 94 3d 10 	jmp	0x207a	; 0x207a <__negsi2>

0000206a <__divmodsi4_neg2>:
    206a:	50 95       	com	r21
    206c:	40 95       	com	r20
    206e:	30 95       	com	r19
    2070:	21 95       	neg	r18
    2072:	3f 4f       	sbci	r19, 0xFF	; 255
    2074:	4f 4f       	sbci	r20, 0xFF	; 255
    2076:	5f 4f       	sbci	r21, 0xFF	; 255

00002078 <__divmodsi4_exit>:
    2078:	08 95       	ret

0000207a <__negsi2>:
    207a:	90 95       	com	r25
    207c:	80 95       	com	r24
    207e:	70 95       	com	r23
    2080:	61 95       	neg	r22
    2082:	7f 4f       	sbci	r23, 0xFF	; 255
    2084:	8f 4f       	sbci	r24, 0xFF	; 255
    2086:	9f 4f       	sbci	r25, 0xFF	; 255
    2088:	08 95       	ret

0000208a <__udivmodsi4>:
    208a:	a1 e2       	ldi	r26, 0x21	; 33
    208c:	1a 2e       	mov	r1, r26
    208e:	aa 1b       	sub	r26, r26
    2090:	bb 1b       	sub	r27, r27
    2092:	fd 01       	movw	r30, r26
    2094:	0d c0       	rjmp	.+26     	; 0x20b0 <__udivmodsi4_ep>

00002096 <__udivmodsi4_loop>:
    2096:	aa 1f       	adc	r26, r26
    2098:	bb 1f       	adc	r27, r27
    209a:	ee 1f       	adc	r30, r30
    209c:	ff 1f       	adc	r31, r31
    209e:	a2 17       	cp	r26, r18
    20a0:	b3 07       	cpc	r27, r19
    20a2:	e4 07       	cpc	r30, r20
    20a4:	f5 07       	cpc	r31, r21
    20a6:	20 f0       	brcs	.+8      	; 0x20b0 <__udivmodsi4_ep>
    20a8:	a2 1b       	sub	r26, r18
    20aa:	b3 0b       	sbc	r27, r19
    20ac:	e4 0b       	sbc	r30, r20
    20ae:	f5 0b       	sbc	r31, r21

000020b0 <__udivmodsi4_ep>:
    20b0:	66 1f       	adc	r22, r22
    20b2:	77 1f       	adc	r23, r23
    20b4:	88 1f       	adc	r24, r24
    20b6:	99 1f       	adc	r25, r25
    20b8:	1a 94       	dec	r1
    20ba:	69 f7       	brne	.-38     	; 0x2096 <__udivmodsi4_loop>
    20bc:	60 95       	com	r22
    20be:	70 95       	com	r23
    20c0:	80 95       	com	r24
    20c2:	90 95       	com	r25
    20c4:	9b 01       	movw	r18, r22
    20c6:	ac 01       	movw	r20, r24
    20c8:	bd 01       	movw	r22, r26
    20ca:	cf 01       	movw	r24, r30
    20cc:	08 95       	ret

000020ce <setjmp>:
    20ce:	dc 01       	movw	r26, r24
    20d0:	2d 92       	st	X+, r2
    20d2:	3d 92       	st	X+, r3
    20d4:	4d 92       	st	X+, r4
    20d6:	5d 92       	st	X+, r5
    20d8:	6d 92       	st	X+, r6
    20da:	7d 92       	st	X+, r7
    20dc:	8d 92       	st	X+, r8
    20de:	9d 92       	st	X+, r9
    20e0:	ad 92       	st	X+, r10
    20e2:	bd 92       	st	X+, r11
    20e4:	cd 92       	st	X+, r12
    20e6:	dd 92       	st	X+, r13
    20e8:	ed 92       	st	X+, r14
    20ea:	fd 92       	st	X+, r15
    20ec:	0d 93       	st	X+, r16
    20ee:	1d 93       	st	X+, r17
    20f0:	cd 93       	st	X+, r28
    20f2:	dd 93       	st	X+, r29
    20f4:	ff 91       	pop	r31
    20f6:	ef 91       	pop	r30
    20f8:	8d b7       	in	r24, 0x3d	; 61
    20fa:	8d 93       	st	X+, r24
    20fc:	8e b7       	in	r24, 0x3e	; 62
    20fe:	8d 93       	st	X+, r24
    2100:	8f b7       	in	r24, 0x3f	; 63
    2102:	8d 93       	st	X+, r24
    2104:	ed 93       	st	X+, r30
    2106:	fd 93       	st	X+, r31
    2108:	88 27       	eor	r24, r24
    210a:	99 27       	eor	r25, r25
    210c:	09 94       	ijmp

0000210e <longjmp>:
    210e:	dc 01       	movw	r26, r24
    2110:	cb 01       	movw	r24, r22
    2112:	81 30       	cpi	r24, 0x01	; 1
    2114:	91 05       	cpc	r25, r1
    2116:	81 1d       	adc	r24, r1
    2118:	2d 90       	ld	r2, X+
    211a:	3d 90       	ld	r3, X+
    211c:	4d 90       	ld	r4, X+
    211e:	5d 90       	ld	r5, X+
    2120:	6d 90       	ld	r6, X+
    2122:	7d 90       	ld	r7, X+
    2124:	8d 90       	ld	r8, X+
    2126:	9d 90       	ld	r9, X+
    2128:	ad 90       	ld	r10, X+
    212a:	bd 90       	ld	r11, X+
    212c:	cd 90       	ld	r12, X+
    212e:	dd 90       	ld	r13, X+
    2130:	ed 90       	ld	r14, X+
    2132:	fd 90       	ld	r15, X+
    2134:	0d 91       	ld	r16, X+
    2136:	1d 91       	ld	r17, X+
    2138:	cd 91       	ld	r28, X+
    213a:	dd 91       	ld	r29, X+
    213c:	ed 91       	ld	r30, X+
    213e:	fd 91       	ld	r31, X+
    2140:	0d 90       	ld	r0, X+
    2142:	f8 94       	cli
    2144:	fe bf       	out	0x3e, r31	; 62
    2146:	0f be       	out	0x3f, r0	; 63
    2148:	ed bf       	out	0x3d, r30	; 61
    214a:	ed 91       	ld	r30, X+
    214c:	fd 91       	ld	r31, X+
    214e:	09 94       	ijmp

00002150 <_exit>:
    2150:	f8 94       	cli

00002152 <__stop_program>:
    2152:	ff cf       	rjmp	.-2      	; 0x2152 <__stop_program>
