
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00002052  000020e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002052  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011c  0080011c  00002102  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002102  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002134  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  00002174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003059  00000000  00000000  000023fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000121c  00000000  00000000  00005455  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017b4  00000000  00000000  00006671  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cd0  00000000  00000000  00007e28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a01  00000000  00000000  00008af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000349e  00000000  00000000  000094f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000350  00000000  00000000  0000c997  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 27 04 	jmp	0x84e	; 0x84e <__vector_1>
       8:	0c 94 93 04 	jmp	0x926	; 0x926 <__vector_2>
       c:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__vector_3>
      10:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__vector_4>
      14:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 12 0c 	jmp	0x1824	; 0x1824 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 bf 0b 	jmp	0x177e	; 0x177e <__vector_9>
      28:	0c 94 43 06 	jmp	0xc86	; 0xc86 <__vector_10>
      2c:	0c 94 af 06 	jmp	0xd5e	; 0xd5e <__vector_11>
      30:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <__vector_12>
      34:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__vector_13>
      38:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__vector_14>
      3c:	0c 94 5f 08 	jmp	0x10be	; 0x10be <__vector_15>
      40:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <__vector_16>
      44:	0c 94 37 09 	jmp	0x126e	; 0x126e <__vector_17>
      48:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <__vector_18>
      4c:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__vector_19>
      50:	0c 94 7b 0a 	jmp	0x14f6	; 0x14f6 <__vector_20>
      54:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__vector_21>
      58:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 e5       	ldi	r30, 0x52	; 82
      70:	f0 e2       	ldi	r31, 0x20	; 32
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 31       	cpi	r26, 0x1C	; 28
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e1       	ldi	r26, 0x1C	; 28
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	af 36       	cpi	r26, 0x6F	; 111
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 18 03 	call	0x630	; 0x630 <main>
      92:	0c 94 27 10 	jmp	0x204e	; 0x204e <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <manage_traffic>:
	self->traffic_lights[self->current_direction] = TRUE;
	self->cars_allowed = MAX_CARS_ON_LANE;
	manage_traffic(self, 0);
}

void manage_traffic(Controller *self, int arg0) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	fc 01       	movw	r30, r24
	
	if(self->queues[NORTH] == 0 && self->queues[SOUTH] == 0) {
      ac:	86 81       	ldd	r24, Z+6	; 0x06
      ae:	97 81       	ldd	r25, Z+7	; 0x07
      b0:	89 2b       	or	r24, r25
      b2:	29 f4       	brne	.+10     	; 0xbe <manage_traffic+0x24>
      b4:	80 85       	ldd	r24, Z+8	; 0x08
      b6:	91 85       	ldd	r25, Z+9	; 0x09
      b8:	89 2b       	or	r24, r25
      ba:	09 f4       	brne	.+2      	; 0xbe <manage_traffic+0x24>
      bc:	45 c0       	rjmp	.+138    	; 0x148 <manage_traffic+0xae>
		self->active = false;
	}
	else {
		// If there is a queue at the current light, if we havn't surpassed the amount of cars we should allow
		if (self->queues[self->current_direction]> 0 || self->cars_allowed > 0 && self->active) {
      be:	84 85       	ldd	r24, Z+12	; 0x0c
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	dc 01       	movw	r26, r24
      c4:	aa 0f       	add	r26, r26
      c6:	bb 1f       	adc	r27, r27
      c8:	ae 0f       	add	r26, r30
      ca:	bf 1f       	adc	r27, r31
      cc:	16 96       	adiw	r26, 0x06	; 6
      ce:	2d 91       	ld	r18, X+
      d0:	3c 91       	ld	r19, X
      d2:	17 97       	sbiw	r26, 0x07	; 7
      d4:	45 85       	ldd	r20, Z+13	; 0x0d
      d6:	12 16       	cp	r1, r18
      d8:	13 06       	cpc	r1, r19
      da:	4c f0       	brlt	.+18     	; 0xee <manage_traffic+0x54>
      dc:	44 23       	and	r20, r20
      de:	19 f0       	breq	.+6      	; 0xe6 <manage_traffic+0x4c>
      e0:	50 89       	ldd	r21, Z+16	; 0x10
      e2:	51 11       	cpse	r21, r1
      e4:	04 c0       	rjmp	.+8      	; 0xee <manage_traffic+0x54>
			self->cars_allowed--;
			ASYNC(self, enter_lane, 0);
			AFTER(MSEC(NEXT_CAR_TIME), self, manage_traffic, 0); // seems good, try again
		}
		else {
			self->traffic_lights[self->current_direction] = FALSE;
      e6:	e8 0f       	add	r30, r24
      e8:	f9 1f       	adc	r31, r25
      ea:	12 86       	std	Z+10, r1	; 0x0a
		}

	}
	

}
      ec:	24 c0       	rjmp	.+72     	; 0x136 <manage_traffic+0x9c>
		self->active = false;
	}
	else {
		// If there is a queue at the current light, if we havn't surpassed the amount of cars we should allow
		if (self->queues[self->current_direction]> 0 || self->cars_allowed > 0 && self->active) {
			self->queues[self->current_direction]--;
      ee:	21 50       	subi	r18, 0x01	; 1
      f0:	31 09       	sbc	r19, r1
      f2:	17 96       	adiw	r26, 0x07	; 7
      f4:	3c 93       	st	X, r19
      f6:	2e 93       	st	-X, r18
      f8:	16 97       	sbiw	r26, 0x06	; 6
			self->cars_allowed--;
      fa:	41 50       	subi	r20, 0x01	; 1
      fc:	45 87       	std	Z+13, r20	; 0x0d
			ASYNC(self, enter_lane, 0);
      fe:	c1 2c       	mov	r12, r1
     100:	d1 2c       	mov	r13, r1
     102:	8e eb       	ldi	r24, 0xBE	; 190
     104:	e8 2e       	mov	r14, r24
     106:	80 e0       	ldi	r24, 0x00	; 0
     108:	f8 2e       	mov	r15, r24
     10a:	8f 01       	movw	r16, r30
     10c:	20 e0       	ldi	r18, 0x00	; 0
     10e:	30 e0       	ldi	r19, 0x00	; 0
     110:	a9 01       	movw	r20, r18
     112:	60 e0       	ldi	r22, 0x00	; 0
     114:	70 e0       	ldi	r23, 0x00	; 0
     116:	cb 01       	movw	r24, r22
     118:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
			AFTER(MSEC(NEXT_CAR_TIME), self, manage_traffic, 0); // seems good, try again
     11c:	9d e4       	ldi	r25, 0x4D	; 77
     11e:	e9 2e       	mov	r14, r25
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	f9 2e       	mov	r15, r25
     124:	20 e0       	ldi	r18, 0x00	; 0
     126:	30 e0       	ldi	r19, 0x00	; 0
     128:	a9 01       	movw	r20, r18
     12a:	62 e1       	ldi	r22, 0x12	; 18
     12c:	7a e7       	ldi	r23, 0x7A	; 122
     12e:	80 e0       	ldi	r24, 0x00	; 0
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
		}

	}
	

}
     136:	df 91       	pop	r29
     138:	cf 91       	pop	r28
     13a:	1f 91       	pop	r17
     13c:	0f 91       	pop	r16
     13e:	ff 90       	pop	r15
     140:	ef 90       	pop	r14
     142:	df 90       	pop	r13
     144:	cf 90       	pop	r12
     146:	08 95       	ret
}

void manage_traffic(Controller *self, int arg0) {
	
	if(self->queues[NORTH] == 0 && self->queues[SOUTH] == 0) {
		self->active = false;
     148:	10 8a       	std	Z+16, r1	; 0x10
     14a:	f5 cf       	rjmp	.-22     	; 0x136 <manage_traffic+0x9c>

0000014c <swap_lights>:
	
}

void swap_lights(Controller *self, int arg0) {
	
	if (self->current_direction == NORTH) {
     14c:	fc 01       	movw	r30, r24
     14e:	24 85       	ldd	r18, Z+12	; 0x0c
     150:	22 23       	and	r18, r18
     152:	79 f0       	breq	.+30     	; 0x172 <swap_lights+0x26>
		self->current_direction = SOUTH;
	}
	else {
		self->current_direction = NORTH;
     154:	fc 01       	movw	r30, r24
     156:	14 86       	std	Z+12, r1	; 0x0c
     158:	e0 e0       	ldi	r30, 0x00	; 0
     15a:	f0 e0       	ldi	r31, 0x00	; 0
	}
	self->traffic_lights[self->current_direction] = TRUE;
     15c:	e8 0f       	add	r30, r24
     15e:	f9 1f       	adc	r31, r25
     160:	21 e0       	ldi	r18, 0x01	; 1
     162:	22 87       	std	Z+10, r18	; 0x0a
	self->cars_allowed = MAX_CARS_ON_LANE;
     164:	25 e0       	ldi	r18, 0x05	; 5
     166:	fc 01       	movw	r30, r24
     168:	25 87       	std	Z+13, r18	; 0x0d
	manage_traffic(self, 0);
     16a:	60 e0       	ldi	r22, 0x00	; 0
     16c:	70 e0       	ldi	r23, 0x00	; 0
     16e:	0c 94 4d 00 	jmp	0x9a	; 0x9a <manage_traffic>
}

void swap_lights(Controller *self, int arg0) {
	
	if (self->current_direction == NORTH) {
		self->current_direction = SOUTH;
     172:	21 e0       	ldi	r18, 0x01	; 1
     174:	24 87       	std	Z+12, r18	; 0x0c
     176:	e1 e0       	ldi	r30, 0x01	; 1
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	f0 cf       	rjmp	.-32     	; 0x15c <swap_lights+0x10>

0000017c <enter_lane>:
	}
	

}

void enter_lane(Controller *self, int arg0) {
     17c:	cf 92       	push	r12
     17e:	df 92       	push	r13
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	ec 01       	movw	r28, r24
	self->current_cars++;
     18e:	ce 84       	ldd	r12, Y+14	; 0x0e
     190:	df 84       	ldd	r13, Y+15	; 0x0f
     192:	8f ef       	ldi	r24, 0xFF	; 255
     194:	c8 1a       	sub	r12, r24
     196:	d8 0a       	sbc	r13, r24
     198:	df 86       	std	Y+15, r13	; 0x0f
     19a:	ce 86       	std	Y+14, r12	; 0x0e
	ASYNC(self->gui, update_current, self->current_cars);
     19c:	0c 81       	ldd	r16, Y+4	; 0x04
     19e:	1d 81       	ldd	r17, Y+5	; 0x05
     1a0:	8a ea       	ldi	r24, 0xAA	; 170
     1a2:	e8 2e       	mov	r14, r24
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	f8 2e       	mov	r15, r24
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	a9 01       	movw	r20, r18
     1ae:	60 e0       	ldi	r22, 0x00	; 0
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	cb 01       	movw	r24, r22
     1b4:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
	AFTER(MSEC(CAR_PASSING_TIME), self, exit_lane, 0);
     1b8:	c1 2c       	mov	r12, r1
     1ba:	d1 2c       	mov	r13, r1
     1bc:	95 ef       	ldi	r25, 0xF5	; 245
     1be:	e9 2e       	mov	r14, r25
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	f9 2e       	mov	r15, r25
     1c4:	8e 01       	movw	r16, r28
     1c6:	20 e0       	ldi	r18, 0x00	; 0
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	a9 01       	movw	r20, r18
     1cc:	6a e5       	ldi	r22, 0x5A	; 90
     1ce:	72 e6       	ldi	r23, 0x62	; 98
     1d0:	82 e0       	ldi	r24, 0x02	; 2
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
}
     1d8:	df 91       	pop	r29
     1da:	cf 91       	pop	r28
     1dc:	1f 91       	pop	r17
     1de:	0f 91       	pop	r16
     1e0:	ff 90       	pop	r15
     1e2:	ef 90       	pop	r14
     1e4:	df 90       	pop	r13
     1e6:	cf 90       	pop	r12
     1e8:	08 95       	ret

000001ea <exit_lane>:

void exit_lane(Controller *self, int arg0) {
     1ea:	cf 92       	push	r12
     1ec:	df 92       	push	r13
     1ee:	ef 92       	push	r14
     1f0:	ff 92       	push	r15
     1f2:	0f 93       	push	r16
     1f4:	1f 93       	push	r17
     1f6:	cf 93       	push	r28
     1f8:	df 93       	push	r29
     1fa:	ec 01       	movw	r28, r24
	self->current_cars--;
     1fc:	ce 84       	ldd	r12, Y+14	; 0x0e
     1fe:	df 84       	ldd	r13, Y+15	; 0x0f
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	c8 1a       	sub	r12, r24
     204:	d1 08       	sbc	r13, r1
     206:	df 86       	std	Y+15, r13	; 0x0f
     208:	ce 86       	std	Y+14, r12	; 0x0e
	if (self->current_cars == 0) {
     20a:	c1 14       	cp	r12, r1
     20c:	d1 04       	cpc	r13, r1
     20e:	89 f4       	brne	.+34     	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
		ASYNC(self, swap_lights, 0);
     210:	c1 2c       	mov	r12, r1
     212:	d1 2c       	mov	r13, r1
     214:	96 ea       	ldi	r25, 0xA6	; 166
     216:	e9 2e       	mov	r14, r25
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	f9 2e       	mov	r15, r25
     21c:	8e 01       	movw	r16, r28
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	a9 01       	movw	r20, r18
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	70 e0       	ldi	r23, 0x00	; 0
     228:	cb 01       	movw	r24, r22
     22a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
     22e:	ce 84       	ldd	r12, Y+14	; 0x0e
     230:	df 84       	ldd	r13, Y+15	; 0x0f
	}
	ASYNC(self->gui, update_current, self->current_cars);
     232:	0c 81       	ldd	r16, Y+4	; 0x04
     234:	1d 81       	ldd	r17, Y+5	; 0x05
     236:	8a ea       	ldi	r24, 0xAA	; 170
     238:	e8 2e       	mov	r14, r24
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	f8 2e       	mov	r15, r24
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	a9 01       	movw	r20, r18
     244:	60 e0       	ldi	r22, 0x00	; 0
     246:	70 e0       	ldi	r23, 0x00	; 0
     248:	cb 01       	movw	r24, r22
     24a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	df 90       	pop	r13
     25c:	cf 90       	pop	r12
     25e:	08 95       	ret

00000260 <enqueue_north>:
 *  Author: shirt
 */ 

#include "Controller.h"

void enqueue_north(Controller *self, int arg0) {
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	ec 01       	movw	r28, r24

	self->queues[NORTH]++;
     272:	ce 80       	ldd	r12, Y+6	; 0x06
     274:	df 80       	ldd	r13, Y+7	; 0x07
     276:	8f ef       	ldi	r24, 0xFF	; 255
     278:	c8 1a       	sub	r12, r24
     27a:	d8 0a       	sbc	r13, r24
     27c:	df 82       	std	Y+7, r13	; 0x07
     27e:	ce 82       	std	Y+6, r12	; 0x06
	ASYNC(self->gui, update_north, self->queues[NORTH]);
     280:	0c 81       	ldd	r16, Y+4	; 0x04
     282:	1d 81       	ldd	r17, Y+5	; 0x05
     284:	82 ea       	ldi	r24, 0xA2	; 162
     286:	e8 2e       	mov	r14, r24
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	f8 2e       	mov	r15, r24
     28c:	20 e0       	ldi	r18, 0x00	; 0
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	a9 01       	movw	r20, r18
     292:	60 e0       	ldi	r22, 0x00	; 0
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	cb 01       	movw	r24, r22
     298:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
	if (!self->active) {
     29c:	88 89       	ldd	r24, Y+16	; 0x10
     29e:	88 23       	and	r24, r24
     2a0:	49 f0       	breq	.+18     	; 0x2b4 <enqueue_north+0x54>
		self->active = true;
		manage_traffic(self, 0);
	}
	
}
     2a2:	df 91       	pop	r29
     2a4:	cf 91       	pop	r28
     2a6:	1f 91       	pop	r17
     2a8:	0f 91       	pop	r16
     2aa:	ff 90       	pop	r15
     2ac:	ef 90       	pop	r14
     2ae:	df 90       	pop	r13
     2b0:	cf 90       	pop	r12
     2b2:	08 95       	ret
void enqueue_north(Controller *self, int arg0) {

	self->queues[NORTH]++;
	ASYNC(self->gui, update_north, self->queues[NORTH]);
	if (!self->active) {
		self->active = true;
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	88 8b       	std	Y+16, r24	; 0x10
		manage_traffic(self, 0);
     2b8:	60 e0       	ldi	r22, 0x00	; 0
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	ce 01       	movw	r24, r28
	}
	
}
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12

	self->queues[NORTH]++;
	ASYNC(self->gui, update_north, self->queues[NORTH]);
	if (!self->active) {
		self->active = true;
		manage_traffic(self, 0);
     2ce:	0c 94 4d 00 	jmp	0x9a	; 0x9a <manage_traffic>

000002d2 <enqueue_south>:
	}
	
}

void enqueue_south(Controller *self, int arg0) {
     2d2:	cf 92       	push	r12
     2d4:	df 92       	push	r13
     2d6:	ef 92       	push	r14
     2d8:	ff 92       	push	r15
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	ec 01       	movw	r28, r24

	self->queues[SOUTH]++;
     2e4:	c8 84       	ldd	r12, Y+8	; 0x08
     2e6:	d9 84       	ldd	r13, Y+9	; 0x09
     2e8:	8f ef       	ldi	r24, 0xFF	; 255
     2ea:	c8 1a       	sub	r12, r24
     2ec:	d8 0a       	sbc	r13, r24
     2ee:	d9 86       	std	Y+9, r13	; 0x09
     2f0:	c8 86       	std	Y+8, r12	; 0x08
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
     2f2:	0c 81       	ldd	r16, Y+4	; 0x04
     2f4:	1d 81       	ldd	r17, Y+5	; 0x05
     2f6:	82 eb       	ldi	r24, 0xB2	; 178
     2f8:	e8 2e       	mov	r14, r24
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	f8 2e       	mov	r15, r24
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	a9 01       	movw	r20, r18
     304:	60 e0       	ldi	r22, 0x00	; 0
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	cb 01       	movw	r24, r22
     30a:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
	if (!self->active) {
     30e:	88 89       	ldd	r24, Y+16	; 0x10
     310:	88 23       	and	r24, r24
     312:	49 f0       	breq	.+18     	; 0x326 <enqueue_south+0x54>
		self->active = true;
		manage_traffic(self, 0);
	}
	
}
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	1f 91       	pop	r17
     31a:	0f 91       	pop	r16
     31c:	ff 90       	pop	r15
     31e:	ef 90       	pop	r14
     320:	df 90       	pop	r13
     322:	cf 90       	pop	r12
     324:	08 95       	ret
void enqueue_south(Controller *self, int arg0) {

	self->queues[SOUTH]++;
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	if (!self->active) {
		self->active = true;
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	88 8b       	std	Y+16, r24	; 0x10
		manage_traffic(self, 0);
     32a:	60 e0       	ldi	r22, 0x00	; 0
     32c:	70 e0       	ldi	r23, 0x00	; 0
     32e:	ce 01       	movw	r24, r28
	}
	
}
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	ff 90       	pop	r15
     33a:	ef 90       	pop	r14
     33c:	df 90       	pop	r13
     33e:	cf 90       	pop	r12

	self->queues[SOUTH]++;
	ASYNC(self->gui, update_south, self->queues[SOUTH]);
	if (!self->active) {
		self->active = true;
		manage_traffic(self, 0);
     340:	0c 94 4d 00 	jmp	0x9a	; 0x9a <manage_traffic>

00000344 <update_north>:
 */ 
#include "GUI.h"

void update_north(GUI *self, int arg0) {

	printAt(arg0, 0);
     344:	07 2e       	mov	r0, r23
     346:	00 0c       	add	r0, r0
     348:	88 0b       	sbc	r24, r24
     34a:	99 0b       	sbc	r25, r25
     34c:	40 e0       	ldi	r20, 0x00	; 0
     34e:	50 e0       	ldi	r21, 0x00	; 0
     350:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <printAt>

00000354 <update_current>:

void update_current(GUI *self, int arg0) {
	

	
	printAt(arg0, 2);
     354:	07 2e       	mov	r0, r23
     356:	00 0c       	add	r0, r0
     358:	88 0b       	sbc	r24, r24
     35a:	99 0b       	sbc	r25, r25
     35c:	42 e0       	ldi	r20, 0x02	; 2
     35e:	50 e0       	ldi	r21, 0x00	; 0
     360:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <printAt>

00000364 <update_south>:

void update_south(GUI *self, int arg0) {
	

	
	printAt(arg0, 4);
     364:	07 2e       	mov	r0, r23
     366:	00 0c       	add	r0, r0
     368:	88 0b       	sbc	r24, r24
     36a:	99 0b       	sbc	r25, r25
     36c:	44 e0       	ldi	r20, 0x04	; 4
     36e:	50 e0       	ldi	r21, 0x00	; 0
     370:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <printAt>

00000374 <start_gui>:
	
}

void start_gui(GUI *self, int arg0) {
	if (!self->initialized) {
     374:	fc 01       	movw	r30, r24
     376:	84 81       	ldd	r24, Z+4	; 0x04
     378:	81 11       	cpse	r24, r1
     37a:	02 c0       	rjmp	.+4      	; 0x380 <start_gui+0xc>
		initLCD();
     37c:	0e 94 cb 02 	call	0x596	; 0x596 <initLCD>
	}
	printAt(0, 0);
     380:	40 e0       	ldi	r20, 0x00	; 0
     382:	50 e0       	ldi	r21, 0x00	; 0
     384:	60 e0       	ldi	r22, 0x00	; 0
     386:	70 e0       	ldi	r23, 0x00	; 0
     388:	cb 01       	movw	r24, r22
     38a:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <printAt>
	printAt(0, 2);
     38e:	42 e0       	ldi	r20, 0x02	; 2
     390:	50 e0       	ldi	r21, 0x00	; 0
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	cb 01       	movw	r24, r22
     398:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <printAt>
	printAt(0, 4);
     39c:	44 e0       	ldi	r20, 0x04	; 4
     39e:	50 e0       	ldi	r21, 0x00	; 0
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	cb 01       	movw	r24, r22
     3a6:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <printAt>

000003aa <parse_interrupt>:
 *  Author: shirt
 */ 

#include "InterruptHandler.h"

void parse_interrupt(InterruptHandler *self, int arg0) {
     3aa:	cf 92       	push	r12
     3ac:	df 92       	push	r13
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	ec 01       	movw	r28, r24
	
	
	switch(joystick()) {
     3bc:	0e 94 35 02 	call	0x46a	; 0x46a <joystick>
     3c0:	81 30       	cpi	r24, 0x01	; 1
     3c2:	91 05       	cpc	r25, r1
     3c4:	d9 f0       	breq	.+54     	; 0x3fc <parse_interrupt+0x52>
     3c6:	02 97       	sbiw	r24, 0x02	; 2
     3c8:	81 f4       	brne	.+32     	; 0x3ea <parse_interrupt+0x40>
			
			ASYNC(self->controller,enqueue_south , 0);
			break;
		case STICK_LEFT:

			ASYNC(self->controller,enqueue_north , 0);
     3ca:	0c 81       	ldd	r16, Y+4	; 0x04
     3cc:	1d 81       	ldd	r17, Y+5	; 0x05
     3ce:	c1 2c       	mov	r12, r1
     3d0:	d1 2c       	mov	r13, r1
     3d2:	80 e3       	ldi	r24, 0x30	; 48
     3d4:	e8 2e       	mov	r14, r24
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	f8 2e       	mov	r15, r24
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	a9 01       	movw	r20, r18
     3e0:	60 e0       	ldi	r22, 0x00	; 0
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	cb 01       	movw	r24, r22
     3e6:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>

			//exit
			break;
	}
	
}
     3ea:	df 91       	pop	r29
     3ec:	cf 91       	pop	r28
     3ee:	1f 91       	pop	r17
     3f0:	0f 91       	pop	r16
     3f2:	ff 90       	pop	r15
     3f4:	ef 90       	pop	r14
     3f6:	df 90       	pop	r13
     3f8:	cf 90       	pop	r12
     3fa:	08 95       	ret
	
	
	switch(joystick()) {
		case STICK_RIGHT:
			
			ASYNC(self->controller,enqueue_south , 0);
     3fc:	0c 81       	ldd	r16, Y+4	; 0x04
     3fe:	1d 81       	ldd	r17, Y+5	; 0x05
     400:	c1 2c       	mov	r12, r1
     402:	d1 2c       	mov	r13, r1
     404:	99 e6       	ldi	r25, 0x69	; 105
     406:	e9 2e       	mov	r14, r25
     408:	91 e0       	ldi	r25, 0x01	; 1
     40a:	f9 2e       	mov	r15, r25
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	30 e0       	ldi	r19, 0x00	; 0
     410:	a9 01       	movw	r20, r18
     412:	60 e0       	ldi	r22, 0x00	; 0
     414:	70 e0       	ldi	r23, 0x00	; 0
     416:	cb 01       	movw	r24, r22
     418:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
			break;
     41c:	e6 cf       	rjmp	.-52     	; 0x3ea <parse_interrupt+0x40>

0000041e <init>:
			break;
	}
	
}

void init(InterruptHandler *self, int arg0) {
     41e:	cf 92       	push	r12
     420:	df 92       	push	r13
     422:	ef 92       	push	r14
     424:	ff 92       	push	r15
     426:	0f 93       	push	r16
     428:	1f 93       	push	r17
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	ec 01       	movw	r28, r24
	
	initJoystick();
     430:	0e 94 51 02 	call	0x4a2	; 0x4a2 <initJoystick>
	ASYNC(self->controller->gui, start_gui, 0);
     434:	ec 81       	ldd	r30, Y+4	; 0x04
     436:	fd 81       	ldd	r31, Y+5	; 0x05
     438:	04 81       	ldd	r16, Z+4	; 0x04
     43a:	15 81       	ldd	r17, Z+5	; 0x05
     43c:	c1 2c       	mov	r12, r1
     43e:	d1 2c       	mov	r13, r1
     440:	8a eb       	ldi	r24, 0xBA	; 186
     442:	e8 2e       	mov	r14, r24
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	f8 2e       	mov	r15, r24
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	a9 01       	movw	r20, r18
     44e:	60 e0       	ldi	r22, 0x00	; 0
     450:	70 e0       	ldi	r23, 0x00	; 0
     452:	cb 01       	movw	r24, r22
     454:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
     458:	df 91       	pop	r29
     45a:	cf 91       	pop	r28
     45c:	1f 91       	pop	r17
     45e:	0f 91       	pop	r16
     460:	ff 90       	pop	r15
     462:	ef 90       	pop	r14
     464:	df 90       	pop	r13
     466:	cf 90       	pop	r12
     468:	08 95       	ret

0000046a <joystick>:
#include "Joystick.h"

int joystick() {
	
	
	if (~PINB & (1 << 7)) {
     46a:	1f 99       	sbic	0x03, 7	; 3
     46c:	03 c0       	rjmp	.+6      	; 0x474 <joystick+0xa>
		return STICK_DOWN;
     46e:	84 e0       	ldi	r24, 0x04	; 4
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	08 95       	ret
	}
	
	if (~PINB & (1 << 4)) {
     474:	1c 99       	sbic	0x03, 4	; 3
     476:	03 c0       	rjmp	.+6      	; 0x47e <joystick+0x14>
		return STICK_PRESSED;
     478:	85 e0       	ldi	r24, 0x05	; 5
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	08 95       	ret
	}
	
	if (~PINB & (1 << 6)) {
     47e:	1e 99       	sbic	0x03, 6	; 3
     480:	03 c0       	rjmp	.+6      	; 0x488 <joystick+0x1e>
		return STICK_UP;
     482:	83 e0       	ldi	r24, 0x03	; 3
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	08 95       	ret
	}
	
	if (~PINE & (1 << 3)) {
     488:	63 9b       	sbis	0x0c, 3	; 12
     48a:	05 c0       	rjmp	.+10     	; 0x496 <joystick+0x2c>
		return STICK_RIGHT;
	}
	
	if (~PINE & (1 << 2)) {
     48c:	62 99       	sbic	0x0c, 2	; 12
     48e:	06 c0       	rjmp	.+12     	; 0x49c <joystick+0x32>
		return STICK_LEFT;
     490:	82 e0       	ldi	r24, 0x02	; 2
     492:	90 e0       	ldi	r25, 0x00	; 0
	}
	
	return STICK_CENTER;
}
     494:	08 95       	ret
	if (~PINB & (1 << 6)) {
		return STICK_UP;
	}
	
	if (~PINE & (1 << 3)) {
		return STICK_RIGHT;
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	08 95       	ret
	
	if (~PINE & (1 << 2)) {
		return STICK_LEFT;
	}
	
	return STICK_CENTER;
     49c:	80 e0       	ldi	r24, 0x00	; 0
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	08 95       	ret

000004a2 <initJoystick>:
}

void initJoystick() {

	PORTB = PORTB | ((1 << 7)| (1 << 6 ) | (1 << 4));
     4a2:	85 b1       	in	r24, 0x05	; 5
     4a4:	80 6d       	ori	r24, 0xD0	; 208
     4a6:	85 b9       	out	0x05, r24	; 5
	PORTE = PORTE | ( (1 << 2) | ( 1 << 3));
     4a8:	8e b1       	in	r24, 0x0e	; 14
     4aa:	8c 60       	ori	r24, 0x0C	; 12
     4ac:	8e b9       	out	0x0e, r24	; 14
	
	
	// Enables external interrupt and sets the interrupt to PCINT15..8
	EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     4ae:	8d b3       	in	r24, 0x1d	; 29
     4b0:	80 6c       	ori	r24, 0xC0	; 192
     4b2:	8d bb       	out	0x1d, r24	; 29
	
	// Enables interrupt on PCINT15
	//PCMSK1 |= (1 << PCINT15)|(1 << PCINT14)|(1 << PCINT12);

	//PCMSK0 |= (1 << PCINT3)|(1 << PCINT2);
	PCMSK0 |= (1 << PCINT2);
     4b4:	eb e6       	ldi	r30, 0x6B	; 107
     4b6:	f0 e0       	ldi	r31, 0x00	; 0
     4b8:	80 81       	ld	r24, Z
     4ba:	84 60       	ori	r24, 0x04	; 4
     4bc:	80 83       	st	Z, r24
	// Sets interrupt control to generate an interruption on a falling edge
	EICRA |= (1 << ISC01);
     4be:	e9 e6       	ldi	r30, 0x69	; 105
     4c0:	f0 e0       	ldi	r31, 0x00	; 0
     4c2:	80 81       	ld	r24, Z
     4c4:	82 60       	ori	r24, 0x02	; 2
     4c6:	80 83       	st	Z, r24
     4c8:	08 95       	ret

000004ca <writeChar.part.0>:
	for (int i = 0; i < 6; i++)
	{
		writeChar(digits[i],i);
	}
	
}
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	ab 01       	movw	r20, r22
     4d0:	41 70       	andi	r20, 0x01	; 1
     4d2:	50 78       	andi	r21, 0x80	; 128
     4d4:	57 fd       	sbrc	r21, 7
     4d6:	54 c0       	rjmp	.+168    	; 0x580 <__stack+0x81>
     4d8:	77 fd       	sbrc	r23, 7
     4da:	5a c0       	rjmp	.+180    	; 0x590 <__stack+0x91>
     4dc:	75 95       	asr	r23
     4de:	67 95       	ror	r22
     4e0:	fb 01       	movw	r30, r22
     4e2:	e4 51       	subi	r30, 0x14	; 20
     4e4:	ff 4f       	sbci	r31, 0xFF	; 255
     4e6:	28 2f       	mov	r18, r24
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	20 53       	subi	r18, 0x30	; 48
     4ec:	31 09       	sbc	r19, r1
     4ee:	2a 30       	cpi	r18, 0x0A	; 10
     4f0:	31 05       	cpc	r19, r1
     4f2:	08 f0       	brcs	.+2      	; 0x4f6 <writeChar.part.0+0x2c>
     4f4:	42 c0       	rjmp	.+132    	; 0x57a <__stack+0x7b>
     4f6:	80 53       	subi	r24, 0x30	; 48
     4f8:	a8 2f       	mov	r26, r24
     4fa:	b0 e0       	ldi	r27, 0x00	; 0
     4fc:	aa 0f       	add	r26, r26
     4fe:	bb 1f       	adc	r27, r27
     500:	a8 5f       	subi	r26, 0xF8	; 248
     502:	be 4f       	sbci	r27, 0xFE	; 254
     504:	0d 90       	ld	r0, X+
     506:	bc 91       	ld	r27, X
     508:	a0 2d       	mov	r26, r0
     50a:	44 0f       	add	r20, r20
     50c:	55 1f       	adc	r21, r21
     50e:	44 0f       	add	r20, r20
     510:	55 1f       	adc	r21, r21
     512:	8f e0       	ldi	r24, 0x0F	; 15
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	04 2e       	mov	r0, r20
     518:	01 c0       	rjmp	.+2      	; 0x51c <__stack+0x1d>
     51a:	88 0f       	add	r24, r24
     51c:	0a 94       	dec	r0
     51e:	ea f7       	brpl	.-6      	; 0x51a <__stack+0x1b>
     520:	d8 2f       	mov	r29, r24
     522:	c8 2f       	mov	r28, r24
     524:	c0 95       	com	r28
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	86 e0       	ldi	r24, 0x06	; 6
     52c:	9a 2f       	mov	r25, r26
     52e:	9f 70       	andi	r25, 0x0F	; 15
     530:	30 81       	ld	r19, Z
     532:	23 2f       	mov	r18, r19
     534:	04 2e       	mov	r0, r20
     536:	01 c0       	rjmp	.+2      	; 0x53a <__stack+0x3b>
     538:	22 0f       	add	r18, r18
     53a:	0a 94       	dec	r0
     53c:	ea f7       	brpl	.-6      	; 0x538 <__stack+0x39>
     53e:	82 23       	and	r24, r18
     540:	89 2b       	or	r24, r25
     542:	04 2e       	mov	r0, r20
     544:	01 c0       	rjmp	.+2      	; 0x548 <__stack+0x49>
     546:	88 0f       	add	r24, r24
     548:	0a 94       	dec	r0
     54a:	ea f7       	brpl	.-6      	; 0x546 <__stack+0x47>
     54c:	8d 23       	and	r24, r29
     54e:	90 81       	ld	r25, Z
     550:	9c 23       	and	r25, r28
     552:	90 83       	st	Z, r25
     554:	90 81       	ld	r25, Z
     556:	89 2b       	or	r24, r25
     558:	80 83       	st	Z, r24
     55a:	b2 95       	swap	r27
     55c:	a2 95       	swap	r26
     55e:	af 70       	andi	r26, 0x0F	; 15
     560:	ab 27       	eor	r26, r27
     562:	bf 70       	andi	r27, 0x0F	; 15
     564:	ab 27       	eor	r26, r27
     566:	35 96       	adiw	r30, 0x05	; 5
     568:	6f 5f       	subi	r22, 0xFF	; 255
     56a:	7f 4f       	sbci	r23, 0xFF	; 255
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	64 30       	cpi	r22, 0x04	; 4
     570:	71 05       	cpc	r23, r1
     572:	e1 f6       	brne	.-72     	; 0x52c <__stack+0x2d>
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	08 95       	ret
     57a:	a0 e0       	ldi	r26, 0x00	; 0
     57c:	b0 e0       	ldi	r27, 0x00	; 0
     57e:	c5 cf       	rjmp	.-118    	; 0x50a <__stack+0xb>
     580:	41 50       	subi	r20, 0x01	; 1
     582:	51 09       	sbc	r21, r1
     584:	4e 6f       	ori	r20, 0xFE	; 254
     586:	5f 6f       	ori	r21, 0xFF	; 255
     588:	4f 5f       	subi	r20, 0xFF	; 255
     58a:	5f 4f       	sbci	r21, 0xFF	; 255
     58c:	77 ff       	sbrs	r23, 7
     58e:	a6 cf       	rjmp	.-180    	; 0x4dc <writeChar.part.0+0x12>
     590:	6f 5f       	subi	r22, 0xFF	; 255
     592:	7f 4f       	sbci	r23, 0xFF	; 255
     594:	a3 cf       	rjmp	.-186    	; 0x4dc <writeChar.part.0+0x12>

00000596 <initLCD>:
     596:	e1 e6       	ldi	r30, 0x61	; 97
     598:	f0 e0       	ldi	r31, 0x00	; 0
     59a:	80 e8       	ldi	r24, 0x80	; 128
     59c:	80 83       	st	Z, r24
     59e:	10 82       	st	Z, r1
     5a0:	87 eb       	ldi	r24, 0xB7	; 183
     5a2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     5a6:	87 e0       	ldi	r24, 0x07	; 7
     5a8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     5ac:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     5b0:	80 ec       	ldi	r24, 0xC0	; 192
     5b2:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     5b6:	08 95       	ret

000005b8 <printAt>:

void printAt(long num, int pos) {
     5b8:	cf 92       	push	r12
     5ba:	df 92       	push	r13
     5bc:	ef 92       	push	r14
     5be:	ff 92       	push	r15
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	6b 01       	movw	r12, r22
     5c6:	7c 01       	movw	r14, r24
     5c8:	ea 01       	movw	r28, r20
}

void writeChar(char ch, int pos)
{
	// If out of bounds, do nothing
	if (pos > 5)
     5ca:	46 30       	cpi	r20, 0x06	; 6
     5cc:	51 05       	cpc	r21, r1
     5ce:	f4 f0       	brlt	.+60     	; 0x60c <printAt+0x54>
}

void printAt(long num, int pos) {
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
	pp++;
     5d0:	21 96       	adiw	r28, 0x01	; 1
}

void writeChar(char ch, int pos)
{
	// If out of bounds, do nothing
	if (pos > 5)
     5d2:	c6 30       	cpi	r28, 0x06	; 6
     5d4:	d1 05       	cpc	r29, r1
     5d6:	3c f0       	brlt	.+14     	; 0x5e6 <printAt+0x2e>
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
	pp++;
	writeChar( num % 10 + '0', pp);

}
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	ff 90       	pop	r15
     5de:	ef 90       	pop	r14
     5e0:	df 90       	pop	r13
     5e2:	cf 90       	pop	r12
     5e4:	08 95       	ret
     5e6:	c7 01       	movw	r24, r14
     5e8:	b6 01       	movw	r22, r12
     5ea:	2a e0       	ldi	r18, 0x0A	; 10
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	40 e0       	ldi	r20, 0x00	; 0
     5f0:	50 e0       	ldi	r21, 0x00	; 0
     5f2:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <__divmodsi4>
     5f6:	86 2f       	mov	r24, r22
     5f8:	be 01       	movw	r22, r28
     5fa:	80 5d       	subi	r24, 0xD0	; 208
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	ff 90       	pop	r15
     602:	ef 90       	pop	r14
     604:	df 90       	pop	r13
     606:	cf 90       	pop	r12
     608:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <writeChar.part.0>
     60c:	24 e6       	ldi	r18, 0x64	; 100
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <__divmodsi4>
     618:	2a e0       	ldi	r18, 0x0A	; 10
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <__divmodsi4>
     624:	be 01       	movw	r22, r28
     626:	80 e3       	ldi	r24, 0x30	; 48
     628:	82 0f       	add	r24, r18
     62a:	0e 94 65 02 	call	0x4ca	; 0x4ca <writeChar.part.0>
     62e:	d0 cf       	rjmp	.-96     	; 0x5d0 <printAt+0x18>

00000630 <main>:
#include "Controller.h"
#include "InterruptHandler.h"
#include "GUI.h"

int main(void)
{
     630:	cf 93       	push	r28
     632:	df 93       	push	r29
     634:	cd b7       	in	r28, 0x3d	; 61
     636:	de b7       	in	r29, 0x3e	; 62
     638:	6c 97       	sbiw	r28, 0x1c	; 28
     63a:	0f b6       	in	r0, 0x3f	; 63
     63c:	f8 94       	cli
     63e:	de bf       	out	0x3e, r29	; 62
     640:	0f be       	out	0x3f, r0	; 63
     642:	cd bf       	out	0x3d, r28	; 61
	GUI gui = initGUI();
     644:	de 01       	movw	r26, r28
     646:	58 96       	adiw	r26, 0x18	; 24
     648:	85 e0       	ldi	r24, 0x05	; 5
     64a:	fd 01       	movw	r30, r26
     64c:	11 92       	st	Z+, r1
     64e:	8a 95       	dec	r24
     650:	e9 f7       	brne	.-6      	; 0x64c <main+0x1c>
	Controller c = initController(&gui);
     652:	9e 01       	movw	r18, r28
     654:	2f 5f       	subi	r18, 0xFF	; 255
     656:	3f 4f       	sbci	r19, 0xFF	; 255
     658:	81 e1       	ldi	r24, 0x11	; 17
     65a:	f9 01       	movw	r30, r18
     65c:	11 92       	st	Z+, r1
     65e:	8a 95       	dec	r24
     660:	e9 f7       	brne	.-6      	; 0x65c <main+0x2c>
     662:	be 83       	std	Y+6, r27	; 0x06
     664:	ad 83       	std	Y+5, r26	; 0x05
    InterruptHandler i = initInterruptHandler(&c);
     666:	1b 8a       	std	Y+19, r1	; 0x13
     668:	1a 8a       	std	Y+18, r1	; 0x12
     66a:	1d 8a       	std	Y+21, r1	; 0x15
     66c:	1c 8a       	std	Y+20, r1	; 0x14
     66e:	3f 8b       	std	Y+23, r19	; 0x17
     670:	2e 8b       	std	Y+22, r18	; 0x16
    INSTALL(&i, parse_interrupt, IRQ_PCINT0);
     672:	41 e0       	ldi	r20, 0x01	; 1
     674:	65 ed       	ldi	r22, 0xD5	; 213
     676:	71 e0       	ldi	r23, 0x01	; 1
     678:	ce 01       	movw	r24, r28
     67a:	42 96       	adiw	r24, 0x12	; 18
     67c:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <install>
    //INSTALL(&i, parse_interrupt, IRQ_PCINT1);
    return TINYTIMBER(&i, init, 0);
     680:	40 e0       	ldi	r20, 0x00	; 0
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	6f e0       	ldi	r22, 0x0F	; 15
     686:	72 e0       	ldi	r23, 0x02	; 2
     688:	ce 01       	movw	r24, r28
     68a:	42 96       	adiw	r24, 0x12	; 18
     68c:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <tinytimber>
}
     690:	6c 96       	adiw	r28, 0x1c	; 28
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	de bf       	out	0x3e, r29	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	cd bf       	out	0x3d, r28	; 61
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <initialize+0x6>
     6a8:	00 d0       	rcall	.+0      	; 0x6aa <initialize+0x8>
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	8f e0       	ldi	r24, 0x0F	; 15
     6b0:	92 e0       	ldi	r25, 0x02	; 2
     6b2:	2f ee       	ldi	r18, 0xEF	; 239
     6b4:	32 e0       	ldi	r19, 0x02	; 2
     6b6:	fc 01       	movw	r30, r24
     6b8:	70 97       	sbiw	r30, 0x10	; 16
     6ba:	91 83       	std	Z+1, r25	; 0x01
     6bc:	80 83       	st	Z, r24
     6be:	40 96       	adiw	r24, 0x10	; 16
     6c0:	82 17       	cp	r24, r18
     6c2:	93 07       	cpc	r25, r19
     6c4:	c1 f7       	brne	.-16     	; 0x6b6 <initialize+0x14>
     6c6:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <messages+0xe1>
     6ca:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <messages+0xe0>
     6ce:	ea e4       	ldi	r30, 0x4A	; 74
     6d0:	f1 e0       	ldi	r31, 0x01	; 1
     6d2:	87 e6       	ldi	r24, 0x67	; 103
     6d4:	91 e0       	ldi	r25, 0x01	; 1
     6d6:	91 83       	std	Z+1, r25	; 0x01
     6d8:	80 83       	st	Z, r24
     6da:	84 e8       	ldi	r24, 0x84	; 132
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	96 8f       	std	Z+30, r25	; 0x1e
     6e0:	85 8f       	std	Z+29, r24	; 0x1d
     6e2:	a1 ea       	ldi	r26, 0xA1	; 161
     6e4:	b1 e0       	ldi	r27, 0x01	; 1
     6e6:	b3 af       	std	Z+59, r27	; 0x3b
     6e8:	a2 af       	std	Z+58, r26	; 0x3a
     6ea:	1d 92       	st	X+, r1
     6ec:	1c 92       	st	X, r1
     6ee:	fa 83       	std	Y+2, r31	; 0x02
     6f0:	e9 83       	std	Y+1, r30	; 0x01
     6f2:	eb e4       	ldi	r30, 0x4B	; 75
     6f4:	f3 e0       	ldi	r31, 0x03	; 3
     6f6:	fc 83       	std	Y+4, r31	; 0x04
     6f8:	eb 83       	std	Y+3, r30	; 0x03
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	9a 81       	ldd	r25, Y+2	; 0x02
     6fe:	06 96       	adiw	r24, 0x06	; 6
     700:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <setjmp>
     704:	8b 81       	ldd	r24, Y+3	; 0x03
     706:	9c 81       	ldd	r25, Y+4	; 0x04
     708:	e9 81       	ldd	r30, Y+1	; 0x01
     70a:	fa 81       	ldd	r31, Y+2	; 0x02
     70c:	97 8b       	std	Z+23, r25	; 0x17
     70e:	86 8b       	std	Z+22, r24	; 0x16
     710:	91 8f       	std	Z+25, r25	; 0x19
     712:	80 8f       	std	Z+24, r24	; 0x18
     714:	84 ef       	ldi	r24, 0xF4	; 244
     716:	9e e0       	ldi	r25, 0x0E	; 14
     718:	94 8f       	std	Z+28, r25	; 0x1c
     71a:	83 8f       	std	Z+27, r24	; 0x1b
     71c:	15 82       	std	Z+5, r1	; 0x05
     71e:	14 82       	std	Z+4, r1	; 0x04
     720:	7d 96       	adiw	r30, 0x1d	; 29
     722:	fa 83       	std	Y+2, r31	; 0x02
     724:	e9 83       	std	Y+1, r30	; 0x01
     726:	eb 81       	ldd	r30, Y+3	; 0x03
     728:	fc 81       	ldd	r31, Y+4	; 0x04
     72a:	e0 5a       	subi	r30, 0xA0	; 160
     72c:	ff 4f       	sbci	r31, 0xFF	; 255
     72e:	fc 83       	std	Y+4, r31	; 0x04
     730:	eb 83       	std	Y+3, r30	; 0x03
     732:	89 81       	ldd	r24, Y+1	; 0x01
     734:	9a 81       	ldd	r25, Y+2	; 0x02
     736:	8e 5b       	subi	r24, 0xBE	; 190
     738:	91 40       	sbci	r25, 0x01	; 1
     73a:	f9 f6       	brne	.-66     	; 0x6fa <initialize+0x58>
     73c:	e2 ee       	ldi	r30, 0xE2	; 226
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	11 82       	std	Z+1, r1	; 0x01
     742:	10 82       	st	Z, r1
     744:	15 82       	std	Z+5, r1	; 0x05
     746:	14 82       	std	Z+4, r1	; 0x04
     748:	13 82       	std	Z+3, r1	; 0x03
     74a:	12 82       	std	Z+2, r1	; 0x02
     74c:	e1 e6       	ldi	r30, 0x61	; 97
     74e:	f0 e0       	ldi	r31, 0x00	; 0
     750:	80 e8       	ldi	r24, 0x80	; 128
     752:	80 83       	st	Z, r24
     754:	10 82       	st	Z, r1
     756:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     75a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     75e:	84 e0       	ldi	r24, 0x04	; 4
     760:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
     770:	0f 90       	pop	r0
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	08 95       	ret

00000778 <dispatch>:
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	00 d0       	rcall	.+0      	; 0x77e <dispatch+0x6>
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	9a 83       	std	Y+2, r25	; 0x02
     784:	89 83       	std	Y+1, r24	; 0x01
     786:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     78a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     78e:	06 96       	adiw	r24, 0x06	; 6
     790:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <setjmp>
     794:	89 2b       	or	r24, r25
     796:	29 f0       	breq	.+10     	; 0x7a2 <dispatch+0x2a>
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	df 91       	pop	r29
     79e:	cf 91       	pop	r28
     7a0:	08 95       	ret
     7a2:	89 81       	ldd	r24, Y+1	; 0x01
     7a4:	9a 81       	ldd	r25, Y+2	; 0x02
     7a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     7ae:	61 e0       	ldi	r22, 0x01	; 1
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	06 96       	adiw	r24, 0x06	; 6
     7b4:	0e 94 06 10 	call	0x200c	; 0x200c <longjmp>

000007b8 <schedule>:
     7b8:	0f 93       	push	r16
     7ba:	1f 93       	push	r17
     7bc:	cf 93       	push	r28
     7be:	df 93       	push	r29
     7c0:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
     7c4:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
     7c8:	30 97       	sbiw	r30, 0x00	; 0
     7ca:	f1 f0       	breq	.+60     	; 0x808 <schedule+0x50>
     7cc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     7d0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     7d4:	00 97       	sbiw	r24, 0x00	; 0
     7d6:	c1 f0       	breq	.+48     	; 0x808 <schedule+0x50>
     7d8:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     7dc:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     7e0:	aa 81       	ldd	r26, Y+2	; 0x02
     7e2:	bb 81       	ldd	r27, Y+3	; 0x03
     7e4:	10 97       	sbiw	r26, 0x00	; 0
     7e6:	a9 f0       	breq	.+42     	; 0x812 <schedule+0x5a>
     7e8:	46 81       	ldd	r20, Z+6	; 0x06
     7ea:	57 81       	ldd	r21, Z+7	; 0x07
     7ec:	60 85       	ldd	r22, Z+8	; 0x08
     7ee:	71 85       	ldd	r23, Z+9	; 0x09
     7f0:	16 96       	adiw	r26, 0x06	; 6
     7f2:	0d 91       	ld	r16, X+
     7f4:	1d 91       	ld	r17, X+
     7f6:	2d 91       	ld	r18, X+
     7f8:	3c 91       	ld	r19, X
     7fa:	19 97       	sbiw	r26, 0x09	; 9
     7fc:	40 1b       	sub	r20, r16
     7fe:	51 0b       	sbc	r21, r17
     800:	62 0b       	sbc	r22, r18
     802:	73 0b       	sbc	r23, r19
     804:	77 fd       	sbrc	r23, 7
     806:	05 c0       	rjmp	.+10     	; 0x812 <schedule+0x5a>
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	08 95       	ret
     812:	fc 01       	movw	r30, r24
     814:	20 81       	ld	r18, Z
     816:	31 81       	ldd	r19, Z+1	; 0x01
     818:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     81c:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     820:	d1 83       	std	Z+1, r29	; 0x01
     822:	c0 83       	st	Z, r28
     824:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     828:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	0c 94 bc 03 	jmp	0x778	; 0x778 <dispatch>

00000838 <dequeue.part.0>:
     838:	8f ef       	ldi	r24, 0xFF	; 255
     83a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     83e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     842:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	83 bf       	out	0x33, r24	; 51
     84a:	88 95       	sleep
     84c:	fd cf       	rjmp	.-6      	; 0x848 <dequeue.part.0+0x10>

0000084e <__vector_1>:
     84e:	1f 92       	push	r1
     850:	0f 92       	push	r0
     852:	0f b6       	in	r0, 0x3f	; 63
     854:	0f 92       	push	r0
     856:	11 24       	eor	r1, r1
     858:	2f 93       	push	r18
     85a:	3f 93       	push	r19
     85c:	4f 93       	push	r20
     85e:	5f 93       	push	r21
     860:	6f 93       	push	r22
     862:	7f 93       	push	r23
     864:	8f 93       	push	r24
     866:	9f 93       	push	r25
     868:	af 93       	push	r26
     86a:	bf 93       	push	r27
     86c:	ef 93       	push	r30
     86e:	ff 93       	push	r31
     870:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     874:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     878:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     87c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     880:	c9 01       	movw	r24, r18
     882:	03 2e       	mov	r0, r19
     884:	00 0c       	add	r0, r0
     886:	aa 0b       	sbc	r26, r26
     888:	bb 0b       	sbc	r27, r27
     88a:	dc 01       	movw	r26, r24
     88c:	99 27       	eor	r25, r25
     88e:	88 27       	eor	r24, r24
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	84 2b       	or	r24, r20
     896:	95 2b       	or	r25, r21
     898:	a6 2b       	or	r26, r22
     89a:	b7 2b       	or	r27, r23
     89c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     8a0:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     8a4:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     8a8:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     8ac:	b0 9b       	sbis	0x16, 0	; 22
     8ae:	1b c0       	rjmp	.+54     	; 0x8e6 <__vector_1+0x98>
     8b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8b8:	c9 01       	movw	r24, r18
     8ba:	01 96       	adiw	r24, 0x01	; 1
     8bc:	09 2e       	mov	r0, r25
     8be:	00 0c       	add	r0, r0
     8c0:	aa 0b       	sbc	r26, r26
     8c2:	bb 0b       	sbc	r27, r27
     8c4:	dc 01       	movw	r26, r24
     8c6:	99 27       	eor	r25, r25
     8c8:	88 27       	eor	r24, r24
     8ca:	60 e0       	ldi	r22, 0x00	; 0
     8cc:	70 e0       	ldi	r23, 0x00	; 0
     8ce:	84 2b       	or	r24, r20
     8d0:	95 2b       	or	r25, r21
     8d2:	a6 2b       	or	r26, r22
     8d4:	b7 2b       	or	r27, r23
     8d6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     8da:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     8de:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     8e2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     8e6:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable>
     8ea:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x1>
     8ee:	30 97       	sbiw	r30, 0x00	; 0
     8f0:	39 f0       	breq	.+14     	; 0x900 <__vector_1+0xb2>
     8f2:	60 e0       	ldi	r22, 0x00	; 0
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable>
     8fa:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x1>
     8fe:	09 95       	icall
     900:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     904:	ff 91       	pop	r31
     906:	ef 91       	pop	r30
     908:	bf 91       	pop	r27
     90a:	af 91       	pop	r26
     90c:	9f 91       	pop	r25
     90e:	8f 91       	pop	r24
     910:	7f 91       	pop	r23
     912:	6f 91       	pop	r22
     914:	5f 91       	pop	r21
     916:	4f 91       	pop	r20
     918:	3f 91       	pop	r19
     91a:	2f 91       	pop	r18
     91c:	0f 90       	pop	r0
     91e:	0f be       	out	0x3f, r0	; 63
     920:	0f 90       	pop	r0
     922:	1f 90       	pop	r1
     924:	18 95       	reti

00000926 <__vector_2>:
     926:	1f 92       	push	r1
     928:	0f 92       	push	r0
     92a:	0f b6       	in	r0, 0x3f	; 63
     92c:	0f 92       	push	r0
     92e:	11 24       	eor	r1, r1
     930:	2f 93       	push	r18
     932:	3f 93       	push	r19
     934:	4f 93       	push	r20
     936:	5f 93       	push	r21
     938:	6f 93       	push	r22
     93a:	7f 93       	push	r23
     93c:	8f 93       	push	r24
     93e:	9f 93       	push	r25
     940:	af 93       	push	r26
     942:	bf 93       	push	r27
     944:	ef 93       	push	r30
     946:	ff 93       	push	r31
     948:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     94c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     950:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     954:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     958:	c9 01       	movw	r24, r18
     95a:	03 2e       	mov	r0, r19
     95c:	00 0c       	add	r0, r0
     95e:	aa 0b       	sbc	r26, r26
     960:	bb 0b       	sbc	r27, r27
     962:	dc 01       	movw	r26, r24
     964:	99 27       	eor	r25, r25
     966:	88 27       	eor	r24, r24
     968:	60 e0       	ldi	r22, 0x00	; 0
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	84 2b       	or	r24, r20
     96e:	95 2b       	or	r25, r21
     970:	a6 2b       	or	r26, r22
     972:	b7 2b       	or	r27, r23
     974:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     978:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     97c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     980:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     984:	b0 9b       	sbis	0x16, 0	; 22
     986:	1b c0       	rjmp	.+54     	; 0x9be <__vector_2+0x98>
     988:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     98c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     990:	c9 01       	movw	r24, r18
     992:	01 96       	adiw	r24, 0x01	; 1
     994:	09 2e       	mov	r0, r25
     996:	00 0c       	add	r0, r0
     998:	aa 0b       	sbc	r26, r26
     99a:	bb 0b       	sbc	r27, r27
     99c:	dc 01       	movw	r26, r24
     99e:	99 27       	eor	r25, r25
     9a0:	88 27       	eor	r24, r24
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	84 2b       	or	r24, r20
     9a8:	95 2b       	or	r25, r21
     9aa:	a6 2b       	or	r26, r22
     9ac:	b7 2b       	or	r27, r23
     9ae:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     9b2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     9b6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     9ba:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     9be:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x2>
     9c2:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x3>
     9c6:	30 97       	sbiw	r30, 0x00	; 0
     9c8:	39 f0       	breq	.+14     	; 0x9d8 <__vector_2+0xb2>
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x2>
     9d2:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x3>
     9d6:	09 95       	icall
     9d8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     9dc:	ff 91       	pop	r31
     9de:	ef 91       	pop	r30
     9e0:	bf 91       	pop	r27
     9e2:	af 91       	pop	r26
     9e4:	9f 91       	pop	r25
     9e6:	8f 91       	pop	r24
     9e8:	7f 91       	pop	r23
     9ea:	6f 91       	pop	r22
     9ec:	5f 91       	pop	r21
     9ee:	4f 91       	pop	r20
     9f0:	3f 91       	pop	r19
     9f2:	2f 91       	pop	r18
     9f4:	0f 90       	pop	r0
     9f6:	0f be       	out	0x3f, r0	; 63
     9f8:	0f 90       	pop	r0
     9fa:	1f 90       	pop	r1
     9fc:	18 95       	reti

000009fe <__vector_3>:
     9fe:	1f 92       	push	r1
     a00:	0f 92       	push	r0
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	0f 92       	push	r0
     a06:	11 24       	eor	r1, r1
     a08:	2f 93       	push	r18
     a0a:	3f 93       	push	r19
     a0c:	4f 93       	push	r20
     a0e:	5f 93       	push	r21
     a10:	6f 93       	push	r22
     a12:	7f 93       	push	r23
     a14:	8f 93       	push	r24
     a16:	9f 93       	push	r25
     a18:	af 93       	push	r26
     a1a:	bf 93       	push	r27
     a1c:	ef 93       	push	r30
     a1e:	ff 93       	push	r31
     a20:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     a24:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     a28:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a2c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a30:	c9 01       	movw	r24, r18
     a32:	03 2e       	mov	r0, r19
     a34:	00 0c       	add	r0, r0
     a36:	aa 0b       	sbc	r26, r26
     a38:	bb 0b       	sbc	r27, r27
     a3a:	dc 01       	movw	r26, r24
     a3c:	99 27       	eor	r25, r25
     a3e:	88 27       	eor	r24, r24
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	84 2b       	or	r24, r20
     a46:	95 2b       	or	r25, r21
     a48:	a6 2b       	or	r26, r22
     a4a:	b7 2b       	or	r27, r23
     a4c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     a50:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     a54:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     a58:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     a5c:	b0 9b       	sbis	0x16, 0	; 22
     a5e:	1b c0       	rjmp	.+54     	; 0xa96 <__vector_3+0x98>
     a60:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a64:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a68:	c9 01       	movw	r24, r18
     a6a:	01 96       	adiw	r24, 0x01	; 1
     a6c:	09 2e       	mov	r0, r25
     a6e:	00 0c       	add	r0, r0
     a70:	aa 0b       	sbc	r26, r26
     a72:	bb 0b       	sbc	r27, r27
     a74:	dc 01       	movw	r26, r24
     a76:	99 27       	eor	r25, r25
     a78:	88 27       	eor	r24, r24
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	84 2b       	or	r24, r20
     a80:	95 2b       	or	r25, r21
     a82:	a6 2b       	or	r26, r22
     a84:	b7 2b       	or	r27, r23
     a86:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     a8a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     a8e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     a92:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     a96:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x4>
     a9a:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x5>
     a9e:	30 97       	sbiw	r30, 0x00	; 0
     aa0:	39 f0       	breq	.+14     	; 0xab0 <__vector_3+0xb2>
     aa2:	62 e0       	ldi	r22, 0x02	; 2
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x4>
     aaa:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x5>
     aae:	09 95       	icall
     ab0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     ab4:	ff 91       	pop	r31
     ab6:	ef 91       	pop	r30
     ab8:	bf 91       	pop	r27
     aba:	af 91       	pop	r26
     abc:	9f 91       	pop	r25
     abe:	8f 91       	pop	r24
     ac0:	7f 91       	pop	r23
     ac2:	6f 91       	pop	r22
     ac4:	5f 91       	pop	r21
     ac6:	4f 91       	pop	r20
     ac8:	3f 91       	pop	r19
     aca:	2f 91       	pop	r18
     acc:	0f 90       	pop	r0
     ace:	0f be       	out	0x3f, r0	; 63
     ad0:	0f 90       	pop	r0
     ad2:	1f 90       	pop	r1
     ad4:	18 95       	reti

00000ad6 <__vector_4>:
     ad6:	1f 92       	push	r1
     ad8:	0f 92       	push	r0
     ada:	0f b6       	in	r0, 0x3f	; 63
     adc:	0f 92       	push	r0
     ade:	11 24       	eor	r1, r1
     ae0:	2f 93       	push	r18
     ae2:	3f 93       	push	r19
     ae4:	4f 93       	push	r20
     ae6:	5f 93       	push	r21
     ae8:	6f 93       	push	r22
     aea:	7f 93       	push	r23
     aec:	8f 93       	push	r24
     aee:	9f 93       	push	r25
     af0:	af 93       	push	r26
     af2:	bf 93       	push	r27
     af4:	ef 93       	push	r30
     af6:	ff 93       	push	r31
     af8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     afc:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     b00:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b04:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b08:	c9 01       	movw	r24, r18
     b0a:	03 2e       	mov	r0, r19
     b0c:	00 0c       	add	r0, r0
     b0e:	aa 0b       	sbc	r26, r26
     b10:	bb 0b       	sbc	r27, r27
     b12:	dc 01       	movw	r26, r24
     b14:	99 27       	eor	r25, r25
     b16:	88 27       	eor	r24, r24
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	70 e0       	ldi	r23, 0x00	; 0
     b1c:	84 2b       	or	r24, r20
     b1e:	95 2b       	or	r25, r21
     b20:	a6 2b       	or	r26, r22
     b22:	b7 2b       	or	r27, r23
     b24:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b28:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b2c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b30:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b34:	b0 9b       	sbis	0x16, 0	; 22
     b36:	1b c0       	rjmp	.+54     	; 0xb6e <__vector_4+0x98>
     b38:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b3c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b40:	c9 01       	movw	r24, r18
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	09 2e       	mov	r0, r25
     b46:	00 0c       	add	r0, r0
     b48:	aa 0b       	sbc	r26, r26
     b4a:	bb 0b       	sbc	r27, r27
     b4c:	dc 01       	movw	r26, r24
     b4e:	99 27       	eor	r25, r25
     b50:	88 27       	eor	r24, r24
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	84 2b       	or	r24, r20
     b58:	95 2b       	or	r25, r21
     b5a:	a6 2b       	or	r26, r22
     b5c:	b7 2b       	or	r27, r23
     b5e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b62:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b66:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b6a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b6e:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x6>
     b72:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x7>
     b76:	30 97       	sbiw	r30, 0x00	; 0
     b78:	39 f0       	breq	.+14     	; 0xb88 <__vector_4+0xb2>
     b7a:	63 e0       	ldi	r22, 0x03	; 3
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x6>
     b82:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x7>
     b86:	09 95       	icall
     b88:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     b8c:	ff 91       	pop	r31
     b8e:	ef 91       	pop	r30
     b90:	bf 91       	pop	r27
     b92:	af 91       	pop	r26
     b94:	9f 91       	pop	r25
     b96:	8f 91       	pop	r24
     b98:	7f 91       	pop	r23
     b9a:	6f 91       	pop	r22
     b9c:	5f 91       	pop	r21
     b9e:	4f 91       	pop	r20
     ba0:	3f 91       	pop	r19
     ba2:	2f 91       	pop	r18
     ba4:	0f 90       	pop	r0
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	0f 90       	pop	r0
     baa:	1f 90       	pop	r1
     bac:	18 95       	reti

00000bae <__vector_5>:
     bae:	1f 92       	push	r1
     bb0:	0f 92       	push	r0
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	0f 92       	push	r0
     bb6:	11 24       	eor	r1, r1
     bb8:	2f 93       	push	r18
     bba:	3f 93       	push	r19
     bbc:	4f 93       	push	r20
     bbe:	5f 93       	push	r21
     bc0:	6f 93       	push	r22
     bc2:	7f 93       	push	r23
     bc4:	8f 93       	push	r24
     bc6:	9f 93       	push	r25
     bc8:	af 93       	push	r26
     bca:	bf 93       	push	r27
     bcc:	ef 93       	push	r30
     bce:	ff 93       	push	r31
     bd0:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     bd4:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     bd8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bdc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     be0:	c9 01       	movw	r24, r18
     be2:	03 2e       	mov	r0, r19
     be4:	00 0c       	add	r0, r0
     be6:	aa 0b       	sbc	r26, r26
     be8:	bb 0b       	sbc	r27, r27
     bea:	dc 01       	movw	r26, r24
     bec:	99 27       	eor	r25, r25
     bee:	88 27       	eor	r24, r24
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	84 2b       	or	r24, r20
     bf6:	95 2b       	or	r25, r21
     bf8:	a6 2b       	or	r26, r22
     bfa:	b7 2b       	or	r27, r23
     bfc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c00:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c04:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c08:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c0c:	b0 9b       	sbis	0x16, 0	; 22
     c0e:	1b c0       	rjmp	.+54     	; 0xc46 <__vector_5+0x98>
     c10:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c14:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c18:	c9 01       	movw	r24, r18
     c1a:	01 96       	adiw	r24, 0x01	; 1
     c1c:	09 2e       	mov	r0, r25
     c1e:	00 0c       	add	r0, r0
     c20:	aa 0b       	sbc	r26, r26
     c22:	bb 0b       	sbc	r27, r27
     c24:	dc 01       	movw	r26, r24
     c26:	99 27       	eor	r25, r25
     c28:	88 27       	eor	r24, r24
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	84 2b       	or	r24, r20
     c30:	95 2b       	or	r25, r21
     c32:	a6 2b       	or	r26, r22
     c34:	b7 2b       	or	r27, r23
     c36:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c3a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c3e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c42:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c46:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x8>
     c4a:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x9>
     c4e:	30 97       	sbiw	r30, 0x00	; 0
     c50:	39 f0       	breq	.+14     	; 0xc60 <__vector_5+0xb2>
     c52:	64 e0       	ldi	r22, 0x04	; 4
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x8>
     c5a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x9>
     c5e:	09 95       	icall
     c60:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     c64:	ff 91       	pop	r31
     c66:	ef 91       	pop	r30
     c68:	bf 91       	pop	r27
     c6a:	af 91       	pop	r26
     c6c:	9f 91       	pop	r25
     c6e:	8f 91       	pop	r24
     c70:	7f 91       	pop	r23
     c72:	6f 91       	pop	r22
     c74:	5f 91       	pop	r21
     c76:	4f 91       	pop	r20
     c78:	3f 91       	pop	r19
     c7a:	2f 91       	pop	r18
     c7c:	0f 90       	pop	r0
     c7e:	0f be       	out	0x3f, r0	; 63
     c80:	0f 90       	pop	r0
     c82:	1f 90       	pop	r1
     c84:	18 95       	reti

00000c86 <__vector_10>:
     c86:	1f 92       	push	r1
     c88:	0f 92       	push	r0
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	0f 92       	push	r0
     c8e:	11 24       	eor	r1, r1
     c90:	2f 93       	push	r18
     c92:	3f 93       	push	r19
     c94:	4f 93       	push	r20
     c96:	5f 93       	push	r21
     c98:	6f 93       	push	r22
     c9a:	7f 93       	push	r23
     c9c:	8f 93       	push	r24
     c9e:	9f 93       	push	r25
     ca0:	af 93       	push	r26
     ca2:	bf 93       	push	r27
     ca4:	ef 93       	push	r30
     ca6:	ff 93       	push	r31
     ca8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     cac:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     cb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cb8:	c9 01       	movw	r24, r18
     cba:	03 2e       	mov	r0, r19
     cbc:	00 0c       	add	r0, r0
     cbe:	aa 0b       	sbc	r26, r26
     cc0:	bb 0b       	sbc	r27, r27
     cc2:	dc 01       	movw	r26, r24
     cc4:	99 27       	eor	r25, r25
     cc6:	88 27       	eor	r24, r24
     cc8:	60 e0       	ldi	r22, 0x00	; 0
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	84 2b       	or	r24, r20
     cce:	95 2b       	or	r25, r21
     cd0:	a6 2b       	or	r26, r22
     cd2:	b7 2b       	or	r27, r23
     cd4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     cd8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     cdc:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     ce0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ce4:	b0 9b       	sbis	0x16, 0	; 22
     ce6:	1b c0       	rjmp	.+54     	; 0xd1e <__vector_10+0x98>
     ce8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf0:	c9 01       	movw	r24, r18
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	09 2e       	mov	r0, r25
     cf6:	00 0c       	add	r0, r0
     cf8:	aa 0b       	sbc	r26, r26
     cfa:	bb 0b       	sbc	r27, r27
     cfc:	dc 01       	movw	r26, r24
     cfe:	99 27       	eor	r25, r25
     d00:	88 27       	eor	r24, r24
     d02:	60 e0       	ldi	r22, 0x00	; 0
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	84 2b       	or	r24, r20
     d08:	95 2b       	or	r25, r21
     d0a:	a6 2b       	or	r26, r22
     d0c:	b7 2b       	or	r27, r23
     d0e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     d12:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     d16:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     d1a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     d1e:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xa>
     d22:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xb>
     d26:	30 97       	sbiw	r30, 0x00	; 0
     d28:	39 f0       	breq	.+14     	; 0xd38 <__vector_10+0xb2>
     d2a:	65 e0       	ldi	r22, 0x05	; 5
     d2c:	70 e0       	ldi	r23, 0x00	; 0
     d2e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xa>
     d32:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xb>
     d36:	09 95       	icall
     d38:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     d3c:	ff 91       	pop	r31
     d3e:	ef 91       	pop	r30
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	7f 91       	pop	r23
     d4a:	6f 91       	pop	r22
     d4c:	5f 91       	pop	r21
     d4e:	4f 91       	pop	r20
     d50:	3f 91       	pop	r19
     d52:	2f 91       	pop	r18
     d54:	0f 90       	pop	r0
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	0f 90       	pop	r0
     d5a:	1f 90       	pop	r1
     d5c:	18 95       	reti

00000d5e <__vector_11>:
     d5e:	1f 92       	push	r1
     d60:	0f 92       	push	r0
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	0f 92       	push	r0
     d66:	11 24       	eor	r1, r1
     d68:	2f 93       	push	r18
     d6a:	3f 93       	push	r19
     d6c:	4f 93       	push	r20
     d6e:	5f 93       	push	r21
     d70:	6f 93       	push	r22
     d72:	7f 93       	push	r23
     d74:	8f 93       	push	r24
     d76:	9f 93       	push	r25
     d78:	af 93       	push	r26
     d7a:	bf 93       	push	r27
     d7c:	ef 93       	push	r30
     d7e:	ff 93       	push	r31
     d80:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     d84:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     d88:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d8c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d90:	c9 01       	movw	r24, r18
     d92:	03 2e       	mov	r0, r19
     d94:	00 0c       	add	r0, r0
     d96:	aa 0b       	sbc	r26, r26
     d98:	bb 0b       	sbc	r27, r27
     d9a:	dc 01       	movw	r26, r24
     d9c:	99 27       	eor	r25, r25
     d9e:	88 27       	eor	r24, r24
     da0:	60 e0       	ldi	r22, 0x00	; 0
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	84 2b       	or	r24, r20
     da6:	95 2b       	or	r25, r21
     da8:	a6 2b       	or	r26, r22
     daa:	b7 2b       	or	r27, r23
     dac:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     db0:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     db4:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     db8:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     dbc:	b0 9b       	sbis	0x16, 0	; 22
     dbe:	1b c0       	rjmp	.+54     	; 0xdf6 <__vector_11+0x98>
     dc0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dc4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dc8:	c9 01       	movw	r24, r18
     dca:	01 96       	adiw	r24, 0x01	; 1
     dcc:	09 2e       	mov	r0, r25
     dce:	00 0c       	add	r0, r0
     dd0:	aa 0b       	sbc	r26, r26
     dd2:	bb 0b       	sbc	r27, r27
     dd4:	dc 01       	movw	r26, r24
     dd6:	99 27       	eor	r25, r25
     dd8:	88 27       	eor	r24, r24
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	84 2b       	or	r24, r20
     de0:	95 2b       	or	r25, r21
     de2:	a6 2b       	or	r26, r22
     de4:	b7 2b       	or	r27, r23
     de6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     dea:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     dee:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     df2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     df6:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xc>
     dfa:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xd>
     dfe:	30 97       	sbiw	r30, 0x00	; 0
     e00:	39 f0       	breq	.+14     	; 0xe10 <__vector_11+0xb2>
     e02:	66 e0       	ldi	r22, 0x06	; 6
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xc>
     e0a:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xd>
     e0e:	09 95       	icall
     e10:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     e14:	ff 91       	pop	r31
     e16:	ef 91       	pop	r30
     e18:	bf 91       	pop	r27
     e1a:	af 91       	pop	r26
     e1c:	9f 91       	pop	r25
     e1e:	8f 91       	pop	r24
     e20:	7f 91       	pop	r23
     e22:	6f 91       	pop	r22
     e24:	5f 91       	pop	r21
     e26:	4f 91       	pop	r20
     e28:	3f 91       	pop	r19
     e2a:	2f 91       	pop	r18
     e2c:	0f 90       	pop	r0
     e2e:	0f be       	out	0x3f, r0	; 63
     e30:	0f 90       	pop	r0
     e32:	1f 90       	pop	r1
     e34:	18 95       	reti

00000e36 <__vector_12>:
     e36:	1f 92       	push	r1
     e38:	0f 92       	push	r0
     e3a:	0f b6       	in	r0, 0x3f	; 63
     e3c:	0f 92       	push	r0
     e3e:	11 24       	eor	r1, r1
     e40:	2f 93       	push	r18
     e42:	3f 93       	push	r19
     e44:	4f 93       	push	r20
     e46:	5f 93       	push	r21
     e48:	6f 93       	push	r22
     e4a:	7f 93       	push	r23
     e4c:	8f 93       	push	r24
     e4e:	9f 93       	push	r25
     e50:	af 93       	push	r26
     e52:	bf 93       	push	r27
     e54:	ef 93       	push	r30
     e56:	ff 93       	push	r31
     e58:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     e5c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     e60:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e64:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e68:	c9 01       	movw	r24, r18
     e6a:	03 2e       	mov	r0, r19
     e6c:	00 0c       	add	r0, r0
     e6e:	aa 0b       	sbc	r26, r26
     e70:	bb 0b       	sbc	r27, r27
     e72:	dc 01       	movw	r26, r24
     e74:	99 27       	eor	r25, r25
     e76:	88 27       	eor	r24, r24
     e78:	60 e0       	ldi	r22, 0x00	; 0
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	84 2b       	or	r24, r20
     e7e:	95 2b       	or	r25, r21
     e80:	a6 2b       	or	r26, r22
     e82:	b7 2b       	or	r27, r23
     e84:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     e88:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     e8c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     e90:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     e94:	b0 9b       	sbis	0x16, 0	; 22
     e96:	1b c0       	rjmp	.+54     	; 0xece <__vector_12+0x98>
     e98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea0:	c9 01       	movw	r24, r18
     ea2:	01 96       	adiw	r24, 0x01	; 1
     ea4:	09 2e       	mov	r0, r25
     ea6:	00 0c       	add	r0, r0
     ea8:	aa 0b       	sbc	r26, r26
     eaa:	bb 0b       	sbc	r27, r27
     eac:	dc 01       	movw	r26, r24
     eae:	99 27       	eor	r25, r25
     eb0:	88 27       	eor	r24, r24
     eb2:	60 e0       	ldi	r22, 0x00	; 0
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	84 2b       	or	r24, r20
     eb8:	95 2b       	or	r25, r21
     eba:	a6 2b       	or	r26, r22
     ebc:	b7 2b       	or	r27, r23
     ebe:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     ec2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     ec6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     eca:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ece:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xe>
     ed2:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xf>
     ed6:	30 97       	sbiw	r30, 0x00	; 0
     ed8:	39 f0       	breq	.+14     	; 0xee8 <__vector_12+0xb2>
     eda:	67 e0       	ldi	r22, 0x07	; 7
     edc:	70 e0       	ldi	r23, 0x00	; 0
     ede:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xe>
     ee2:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xf>
     ee6:	09 95       	icall
     ee8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     eec:	ff 91       	pop	r31
     eee:	ef 91       	pop	r30
     ef0:	bf 91       	pop	r27
     ef2:	af 91       	pop	r26
     ef4:	9f 91       	pop	r25
     ef6:	8f 91       	pop	r24
     ef8:	7f 91       	pop	r23
     efa:	6f 91       	pop	r22
     efc:	5f 91       	pop	r21
     efe:	4f 91       	pop	r20
     f00:	3f 91       	pop	r19
     f02:	2f 91       	pop	r18
     f04:	0f 90       	pop	r0
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	0f 90       	pop	r0
     f0a:	1f 90       	pop	r1
     f0c:	18 95       	reti

00000f0e <__vector_13>:
     f0e:	1f 92       	push	r1
     f10:	0f 92       	push	r0
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	0f 92       	push	r0
     f16:	11 24       	eor	r1, r1
     f18:	2f 93       	push	r18
     f1a:	3f 93       	push	r19
     f1c:	4f 93       	push	r20
     f1e:	5f 93       	push	r21
     f20:	6f 93       	push	r22
     f22:	7f 93       	push	r23
     f24:	8f 93       	push	r24
     f26:	9f 93       	push	r25
     f28:	af 93       	push	r26
     f2a:	bf 93       	push	r27
     f2c:	ef 93       	push	r30
     f2e:	ff 93       	push	r31
     f30:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
     f34:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
     f38:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f3c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f40:	c9 01       	movw	r24, r18
     f42:	03 2e       	mov	r0, r19
     f44:	00 0c       	add	r0, r0
     f46:	aa 0b       	sbc	r26, r26
     f48:	bb 0b       	sbc	r27, r27
     f4a:	dc 01       	movw	r26, r24
     f4c:	99 27       	eor	r25, r25
     f4e:	88 27       	eor	r24, r24
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	84 2b       	or	r24, r20
     f56:	95 2b       	or	r25, r21
     f58:	a6 2b       	or	r26, r22
     f5a:	b7 2b       	or	r27, r23
     f5c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     f60:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     f64:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     f68:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     f6c:	b0 9b       	sbis	0x16, 0	; 22
     f6e:	1b c0       	rjmp	.+54     	; 0xfa6 <__vector_13+0x98>
     f70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f78:	c9 01       	movw	r24, r18
     f7a:	01 96       	adiw	r24, 0x01	; 1
     f7c:	09 2e       	mov	r0, r25
     f7e:	00 0c       	add	r0, r0
     f80:	aa 0b       	sbc	r26, r26
     f82:	bb 0b       	sbc	r27, r27
     f84:	dc 01       	movw	r26, r24
     f86:	99 27       	eor	r25, r25
     f88:	88 27       	eor	r24, r24
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	70 e0       	ldi	r23, 0x00	; 0
     f8e:	84 2b       	or	r24, r20
     f90:	95 2b       	or	r25, r21
     f92:	a6 2b       	or	r26, r22
     f94:	b7 2b       	or	r27, r23
     f96:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     f9a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     f9e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     fa2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     fa6:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x10>
     faa:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x11>
     fae:	30 97       	sbiw	r30, 0x00	; 0
     fb0:	39 f0       	breq	.+14     	; 0xfc0 <__vector_13+0xb2>
     fb2:	68 e0       	ldi	r22, 0x08	; 8
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x10>
     fba:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x11>
     fbe:	09 95       	icall
     fc0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
     fc4:	ff 91       	pop	r31
     fc6:	ef 91       	pop	r30
     fc8:	bf 91       	pop	r27
     fca:	af 91       	pop	r26
     fcc:	9f 91       	pop	r25
     fce:	8f 91       	pop	r24
     fd0:	7f 91       	pop	r23
     fd2:	6f 91       	pop	r22
     fd4:	5f 91       	pop	r21
     fd6:	4f 91       	pop	r20
     fd8:	3f 91       	pop	r19
     fda:	2f 91       	pop	r18
     fdc:	0f 90       	pop	r0
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	0f 90       	pop	r0
     fe2:	1f 90       	pop	r1
     fe4:	18 95       	reti

00000fe6 <__vector_14>:
     fe6:	1f 92       	push	r1
     fe8:	0f 92       	push	r0
     fea:	0f b6       	in	r0, 0x3f	; 63
     fec:	0f 92       	push	r0
     fee:	11 24       	eor	r1, r1
     ff0:	2f 93       	push	r18
     ff2:	3f 93       	push	r19
     ff4:	4f 93       	push	r20
     ff6:	5f 93       	push	r21
     ff8:	6f 93       	push	r22
     ffa:	7f 93       	push	r23
     ffc:	8f 93       	push	r24
     ffe:	9f 93       	push	r25
    1000:	af 93       	push	r26
    1002:	bf 93       	push	r27
    1004:	ef 93       	push	r30
    1006:	ff 93       	push	r31
    1008:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    100c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1010:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1014:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1018:	c9 01       	movw	r24, r18
    101a:	03 2e       	mov	r0, r19
    101c:	00 0c       	add	r0, r0
    101e:	aa 0b       	sbc	r26, r26
    1020:	bb 0b       	sbc	r27, r27
    1022:	dc 01       	movw	r26, r24
    1024:	99 27       	eor	r25, r25
    1026:	88 27       	eor	r24, r24
    1028:	60 e0       	ldi	r22, 0x00	; 0
    102a:	70 e0       	ldi	r23, 0x00	; 0
    102c:	84 2b       	or	r24, r20
    102e:	95 2b       	or	r25, r21
    1030:	a6 2b       	or	r26, r22
    1032:	b7 2b       	or	r27, r23
    1034:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1038:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    103c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1040:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1044:	b0 9b       	sbis	0x16, 0	; 22
    1046:	1b c0       	rjmp	.+54     	; 0x107e <__vector_14+0x98>
    1048:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    104c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1050:	c9 01       	movw	r24, r18
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	09 2e       	mov	r0, r25
    1056:	00 0c       	add	r0, r0
    1058:	aa 0b       	sbc	r26, r26
    105a:	bb 0b       	sbc	r27, r27
    105c:	dc 01       	movw	r26, r24
    105e:	99 27       	eor	r25, r25
    1060:	88 27       	eor	r24, r24
    1062:	60 e0       	ldi	r22, 0x00	; 0
    1064:	70 e0       	ldi	r23, 0x00	; 0
    1066:	84 2b       	or	r24, r20
    1068:	95 2b       	or	r25, r21
    106a:	a6 2b       	or	r26, r22
    106c:	b7 2b       	or	r27, r23
    106e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1072:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1076:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    107a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    107e:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x12>
    1082:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x13>
    1086:	30 97       	sbiw	r30, 0x00	; 0
    1088:	39 f0       	breq	.+14     	; 0x1098 <__vector_14+0xb2>
    108a:	69 e0       	ldi	r22, 0x09	; 9
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x12>
    1092:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x13>
    1096:	09 95       	icall
    1098:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    109c:	ff 91       	pop	r31
    109e:	ef 91       	pop	r30
    10a0:	bf 91       	pop	r27
    10a2:	af 91       	pop	r26
    10a4:	9f 91       	pop	r25
    10a6:	8f 91       	pop	r24
    10a8:	7f 91       	pop	r23
    10aa:	6f 91       	pop	r22
    10ac:	5f 91       	pop	r21
    10ae:	4f 91       	pop	r20
    10b0:	3f 91       	pop	r19
    10b2:	2f 91       	pop	r18
    10b4:	0f 90       	pop	r0
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	0f 90       	pop	r0
    10ba:	1f 90       	pop	r1
    10bc:	18 95       	reti

000010be <__vector_15>:
    10be:	1f 92       	push	r1
    10c0:	0f 92       	push	r0
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	0f 92       	push	r0
    10c6:	11 24       	eor	r1, r1
    10c8:	2f 93       	push	r18
    10ca:	3f 93       	push	r19
    10cc:	4f 93       	push	r20
    10ce:	5f 93       	push	r21
    10d0:	6f 93       	push	r22
    10d2:	7f 93       	push	r23
    10d4:	8f 93       	push	r24
    10d6:	9f 93       	push	r25
    10d8:	af 93       	push	r26
    10da:	bf 93       	push	r27
    10dc:	ef 93       	push	r30
    10de:	ff 93       	push	r31
    10e0:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    10e4:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    10e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f0:	c9 01       	movw	r24, r18
    10f2:	03 2e       	mov	r0, r19
    10f4:	00 0c       	add	r0, r0
    10f6:	aa 0b       	sbc	r26, r26
    10f8:	bb 0b       	sbc	r27, r27
    10fa:	dc 01       	movw	r26, r24
    10fc:	99 27       	eor	r25, r25
    10fe:	88 27       	eor	r24, r24
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	84 2b       	or	r24, r20
    1106:	95 2b       	or	r25, r21
    1108:	a6 2b       	or	r26, r22
    110a:	b7 2b       	or	r27, r23
    110c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1110:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1114:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1118:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    111c:	b0 9b       	sbis	0x16, 0	; 22
    111e:	1b c0       	rjmp	.+54     	; 0x1156 <__vector_15+0x98>
    1120:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1124:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1128:	c9 01       	movw	r24, r18
    112a:	01 96       	adiw	r24, 0x01	; 1
    112c:	09 2e       	mov	r0, r25
    112e:	00 0c       	add	r0, r0
    1130:	aa 0b       	sbc	r26, r26
    1132:	bb 0b       	sbc	r27, r27
    1134:	dc 01       	movw	r26, r24
    1136:	99 27       	eor	r25, r25
    1138:	88 27       	eor	r24, r24
    113a:	60 e0       	ldi	r22, 0x00	; 0
    113c:	70 e0       	ldi	r23, 0x00	; 0
    113e:	84 2b       	or	r24, r20
    1140:	95 2b       	or	r25, r21
    1142:	a6 2b       	or	r26, r22
    1144:	b7 2b       	or	r27, r23
    1146:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    114a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    114e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1152:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1156:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x14>
    115a:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x15>
    115e:	30 97       	sbiw	r30, 0x00	; 0
    1160:	39 f0       	breq	.+14     	; 0x1170 <__vector_15+0xb2>
    1162:	6a e0       	ldi	r22, 0x0A	; 10
    1164:	70 e0       	ldi	r23, 0x00	; 0
    1166:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x14>
    116a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x15>
    116e:	09 95       	icall
    1170:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    1174:	ff 91       	pop	r31
    1176:	ef 91       	pop	r30
    1178:	bf 91       	pop	r27
    117a:	af 91       	pop	r26
    117c:	9f 91       	pop	r25
    117e:	8f 91       	pop	r24
    1180:	7f 91       	pop	r23
    1182:	6f 91       	pop	r22
    1184:	5f 91       	pop	r21
    1186:	4f 91       	pop	r20
    1188:	3f 91       	pop	r19
    118a:	2f 91       	pop	r18
    118c:	0f 90       	pop	r0
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	0f 90       	pop	r0
    1192:	1f 90       	pop	r1
    1194:	18 95       	reti

00001196 <__vector_16>:
    1196:	1f 92       	push	r1
    1198:	0f 92       	push	r0
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	0f 92       	push	r0
    119e:	11 24       	eor	r1, r1
    11a0:	2f 93       	push	r18
    11a2:	3f 93       	push	r19
    11a4:	4f 93       	push	r20
    11a6:	5f 93       	push	r21
    11a8:	6f 93       	push	r22
    11aa:	7f 93       	push	r23
    11ac:	8f 93       	push	r24
    11ae:	9f 93       	push	r25
    11b0:	af 93       	push	r26
    11b2:	bf 93       	push	r27
    11b4:	ef 93       	push	r30
    11b6:	ff 93       	push	r31
    11b8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    11bc:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    11c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11c8:	c9 01       	movw	r24, r18
    11ca:	03 2e       	mov	r0, r19
    11cc:	00 0c       	add	r0, r0
    11ce:	aa 0b       	sbc	r26, r26
    11d0:	bb 0b       	sbc	r27, r27
    11d2:	dc 01       	movw	r26, r24
    11d4:	99 27       	eor	r25, r25
    11d6:	88 27       	eor	r24, r24
    11d8:	60 e0       	ldi	r22, 0x00	; 0
    11da:	70 e0       	ldi	r23, 0x00	; 0
    11dc:	84 2b       	or	r24, r20
    11de:	95 2b       	or	r25, r21
    11e0:	a6 2b       	or	r26, r22
    11e2:	b7 2b       	or	r27, r23
    11e4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    11e8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    11ec:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    11f0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    11f4:	b0 9b       	sbis	0x16, 0	; 22
    11f6:	1b c0       	rjmp	.+54     	; 0x122e <__vector_16+0x98>
    11f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1200:	c9 01       	movw	r24, r18
    1202:	01 96       	adiw	r24, 0x01	; 1
    1204:	09 2e       	mov	r0, r25
    1206:	00 0c       	add	r0, r0
    1208:	aa 0b       	sbc	r26, r26
    120a:	bb 0b       	sbc	r27, r27
    120c:	dc 01       	movw	r26, r24
    120e:	99 27       	eor	r25, r25
    1210:	88 27       	eor	r24, r24
    1212:	60 e0       	ldi	r22, 0x00	; 0
    1214:	70 e0       	ldi	r23, 0x00	; 0
    1216:	84 2b       	or	r24, r20
    1218:	95 2b       	or	r25, r21
    121a:	a6 2b       	or	r26, r22
    121c:	b7 2b       	or	r27, r23
    121e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1222:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1226:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    122a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    122e:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x16>
    1232:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x17>
    1236:	30 97       	sbiw	r30, 0x00	; 0
    1238:	39 f0       	breq	.+14     	; 0x1248 <__vector_16+0xb2>
    123a:	6b e0       	ldi	r22, 0x0B	; 11
    123c:	70 e0       	ldi	r23, 0x00	; 0
    123e:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x16>
    1242:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x17>
    1246:	09 95       	icall
    1248:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    124c:	ff 91       	pop	r31
    124e:	ef 91       	pop	r30
    1250:	bf 91       	pop	r27
    1252:	af 91       	pop	r26
    1254:	9f 91       	pop	r25
    1256:	8f 91       	pop	r24
    1258:	7f 91       	pop	r23
    125a:	6f 91       	pop	r22
    125c:	5f 91       	pop	r21
    125e:	4f 91       	pop	r20
    1260:	3f 91       	pop	r19
    1262:	2f 91       	pop	r18
    1264:	0f 90       	pop	r0
    1266:	0f be       	out	0x3f, r0	; 63
    1268:	0f 90       	pop	r0
    126a:	1f 90       	pop	r1
    126c:	18 95       	reti

0000126e <__vector_17>:
    126e:	1f 92       	push	r1
    1270:	0f 92       	push	r0
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	0f 92       	push	r0
    1276:	11 24       	eor	r1, r1
    1278:	2f 93       	push	r18
    127a:	3f 93       	push	r19
    127c:	4f 93       	push	r20
    127e:	5f 93       	push	r21
    1280:	6f 93       	push	r22
    1282:	7f 93       	push	r23
    1284:	8f 93       	push	r24
    1286:	9f 93       	push	r25
    1288:	af 93       	push	r26
    128a:	bf 93       	push	r27
    128c:	ef 93       	push	r30
    128e:	ff 93       	push	r31
    1290:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1294:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1298:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    129c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a0:	c9 01       	movw	r24, r18
    12a2:	03 2e       	mov	r0, r19
    12a4:	00 0c       	add	r0, r0
    12a6:	aa 0b       	sbc	r26, r26
    12a8:	bb 0b       	sbc	r27, r27
    12aa:	dc 01       	movw	r26, r24
    12ac:	99 27       	eor	r25, r25
    12ae:	88 27       	eor	r24, r24
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	84 2b       	or	r24, r20
    12b6:	95 2b       	or	r25, r21
    12b8:	a6 2b       	or	r26, r22
    12ba:	b7 2b       	or	r27, r23
    12bc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    12c0:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    12c4:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    12c8:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    12cc:	b0 9b       	sbis	0x16, 0	; 22
    12ce:	1b c0       	rjmp	.+54     	; 0x1306 <__vector_17+0x98>
    12d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12d8:	c9 01       	movw	r24, r18
    12da:	01 96       	adiw	r24, 0x01	; 1
    12dc:	09 2e       	mov	r0, r25
    12de:	00 0c       	add	r0, r0
    12e0:	aa 0b       	sbc	r26, r26
    12e2:	bb 0b       	sbc	r27, r27
    12e4:	dc 01       	movw	r26, r24
    12e6:	99 27       	eor	r25, r25
    12e8:	88 27       	eor	r24, r24
    12ea:	60 e0       	ldi	r22, 0x00	; 0
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	84 2b       	or	r24, r20
    12f0:	95 2b       	or	r25, r21
    12f2:	a6 2b       	or	r26, r22
    12f4:	b7 2b       	or	r27, r23
    12f6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    12fa:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    12fe:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1302:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1306:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x18>
    130a:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x19>
    130e:	30 97       	sbiw	r30, 0x00	; 0
    1310:	39 f0       	breq	.+14     	; 0x1320 <__vector_17+0xb2>
    1312:	6c e0       	ldi	r22, 0x0C	; 12
    1314:	70 e0       	ldi	r23, 0x00	; 0
    1316:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x18>
    131a:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x19>
    131e:	09 95       	icall
    1320:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    1324:	ff 91       	pop	r31
    1326:	ef 91       	pop	r30
    1328:	bf 91       	pop	r27
    132a:	af 91       	pop	r26
    132c:	9f 91       	pop	r25
    132e:	8f 91       	pop	r24
    1330:	7f 91       	pop	r23
    1332:	6f 91       	pop	r22
    1334:	5f 91       	pop	r21
    1336:	4f 91       	pop	r20
    1338:	3f 91       	pop	r19
    133a:	2f 91       	pop	r18
    133c:	0f 90       	pop	r0
    133e:	0f be       	out	0x3f, r0	; 63
    1340:	0f 90       	pop	r0
    1342:	1f 90       	pop	r1
    1344:	18 95       	reti

00001346 <__vector_18>:
    1346:	1f 92       	push	r1
    1348:	0f 92       	push	r0
    134a:	0f b6       	in	r0, 0x3f	; 63
    134c:	0f 92       	push	r0
    134e:	11 24       	eor	r1, r1
    1350:	2f 93       	push	r18
    1352:	3f 93       	push	r19
    1354:	4f 93       	push	r20
    1356:	5f 93       	push	r21
    1358:	6f 93       	push	r22
    135a:	7f 93       	push	r23
    135c:	8f 93       	push	r24
    135e:	9f 93       	push	r25
    1360:	af 93       	push	r26
    1362:	bf 93       	push	r27
    1364:	ef 93       	push	r30
    1366:	ff 93       	push	r31
    1368:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    136c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1370:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1374:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1378:	c9 01       	movw	r24, r18
    137a:	03 2e       	mov	r0, r19
    137c:	00 0c       	add	r0, r0
    137e:	aa 0b       	sbc	r26, r26
    1380:	bb 0b       	sbc	r27, r27
    1382:	dc 01       	movw	r26, r24
    1384:	99 27       	eor	r25, r25
    1386:	88 27       	eor	r24, r24
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	84 2b       	or	r24, r20
    138e:	95 2b       	or	r25, r21
    1390:	a6 2b       	or	r26, r22
    1392:	b7 2b       	or	r27, r23
    1394:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1398:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    139c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    13a0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    13a4:	b0 9b       	sbis	0x16, 0	; 22
    13a6:	1b c0       	rjmp	.+54     	; 0x13de <__vector_18+0x98>
    13a8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13ac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13b0:	c9 01       	movw	r24, r18
    13b2:	01 96       	adiw	r24, 0x01	; 1
    13b4:	09 2e       	mov	r0, r25
    13b6:	00 0c       	add	r0, r0
    13b8:	aa 0b       	sbc	r26, r26
    13ba:	bb 0b       	sbc	r27, r27
    13bc:	dc 01       	movw	r26, r24
    13be:	99 27       	eor	r25, r25
    13c0:	88 27       	eor	r24, r24
    13c2:	60 e0       	ldi	r22, 0x00	; 0
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	84 2b       	or	r24, r20
    13c8:	95 2b       	or	r25, r21
    13ca:	a6 2b       	or	r26, r22
    13cc:	b7 2b       	or	r27, r23
    13ce:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    13d2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    13d6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    13da:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    13de:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1a>
    13e2:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1b>
    13e6:	30 97       	sbiw	r30, 0x00	; 0
    13e8:	39 f0       	breq	.+14     	; 0x13f8 <__vector_18+0xb2>
    13ea:	6d e0       	ldi	r22, 0x0D	; 13
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1a>
    13f2:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1b>
    13f6:	09 95       	icall
    13f8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    13fc:	ff 91       	pop	r31
    13fe:	ef 91       	pop	r30
    1400:	bf 91       	pop	r27
    1402:	af 91       	pop	r26
    1404:	9f 91       	pop	r25
    1406:	8f 91       	pop	r24
    1408:	7f 91       	pop	r23
    140a:	6f 91       	pop	r22
    140c:	5f 91       	pop	r21
    140e:	4f 91       	pop	r20
    1410:	3f 91       	pop	r19
    1412:	2f 91       	pop	r18
    1414:	0f 90       	pop	r0
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	0f 90       	pop	r0
    141a:	1f 90       	pop	r1
    141c:	18 95       	reti

0000141e <__vector_19>:
    141e:	1f 92       	push	r1
    1420:	0f 92       	push	r0
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	0f 92       	push	r0
    1426:	11 24       	eor	r1, r1
    1428:	2f 93       	push	r18
    142a:	3f 93       	push	r19
    142c:	4f 93       	push	r20
    142e:	5f 93       	push	r21
    1430:	6f 93       	push	r22
    1432:	7f 93       	push	r23
    1434:	8f 93       	push	r24
    1436:	9f 93       	push	r25
    1438:	af 93       	push	r26
    143a:	bf 93       	push	r27
    143c:	ef 93       	push	r30
    143e:	ff 93       	push	r31
    1440:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1444:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1448:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    144c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1450:	c9 01       	movw	r24, r18
    1452:	03 2e       	mov	r0, r19
    1454:	00 0c       	add	r0, r0
    1456:	aa 0b       	sbc	r26, r26
    1458:	bb 0b       	sbc	r27, r27
    145a:	dc 01       	movw	r26, r24
    145c:	99 27       	eor	r25, r25
    145e:	88 27       	eor	r24, r24
    1460:	60 e0       	ldi	r22, 0x00	; 0
    1462:	70 e0       	ldi	r23, 0x00	; 0
    1464:	84 2b       	or	r24, r20
    1466:	95 2b       	or	r25, r21
    1468:	a6 2b       	or	r26, r22
    146a:	b7 2b       	or	r27, r23
    146c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1470:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1474:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1478:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    147c:	b0 9b       	sbis	0x16, 0	; 22
    147e:	1b c0       	rjmp	.+54     	; 0x14b6 <__vector_19+0x98>
    1480:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1484:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1488:	c9 01       	movw	r24, r18
    148a:	01 96       	adiw	r24, 0x01	; 1
    148c:	09 2e       	mov	r0, r25
    148e:	00 0c       	add	r0, r0
    1490:	aa 0b       	sbc	r26, r26
    1492:	bb 0b       	sbc	r27, r27
    1494:	dc 01       	movw	r26, r24
    1496:	99 27       	eor	r25, r25
    1498:	88 27       	eor	r24, r24
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	84 2b       	or	r24, r20
    14a0:	95 2b       	or	r25, r21
    14a2:	a6 2b       	or	r26, r22
    14a4:	b7 2b       	or	r27, r23
    14a6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    14aa:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    14ae:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    14b2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    14b6:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1c>
    14ba:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1d>
    14be:	30 97       	sbiw	r30, 0x00	; 0
    14c0:	39 f0       	breq	.+14     	; 0x14d0 <__vector_19+0xb2>
    14c2:	6e e0       	ldi	r22, 0x0E	; 14
    14c4:	70 e0       	ldi	r23, 0x00	; 0
    14c6:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1c>
    14ca:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1d>
    14ce:	09 95       	icall
    14d0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    14d4:	ff 91       	pop	r31
    14d6:	ef 91       	pop	r30
    14d8:	bf 91       	pop	r27
    14da:	af 91       	pop	r26
    14dc:	9f 91       	pop	r25
    14de:	8f 91       	pop	r24
    14e0:	7f 91       	pop	r23
    14e2:	6f 91       	pop	r22
    14e4:	5f 91       	pop	r21
    14e6:	4f 91       	pop	r20
    14e8:	3f 91       	pop	r19
    14ea:	2f 91       	pop	r18
    14ec:	0f 90       	pop	r0
    14ee:	0f be       	out	0x3f, r0	; 63
    14f0:	0f 90       	pop	r0
    14f2:	1f 90       	pop	r1
    14f4:	18 95       	reti

000014f6 <__vector_20>:
    14f6:	1f 92       	push	r1
    14f8:	0f 92       	push	r0
    14fa:	0f b6       	in	r0, 0x3f	; 63
    14fc:	0f 92       	push	r0
    14fe:	11 24       	eor	r1, r1
    1500:	2f 93       	push	r18
    1502:	3f 93       	push	r19
    1504:	4f 93       	push	r20
    1506:	5f 93       	push	r21
    1508:	6f 93       	push	r22
    150a:	7f 93       	push	r23
    150c:	8f 93       	push	r24
    150e:	9f 93       	push	r25
    1510:	af 93       	push	r26
    1512:	bf 93       	push	r27
    1514:	ef 93       	push	r30
    1516:	ff 93       	push	r31
    1518:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    151c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1520:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1524:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1528:	c9 01       	movw	r24, r18
    152a:	03 2e       	mov	r0, r19
    152c:	00 0c       	add	r0, r0
    152e:	aa 0b       	sbc	r26, r26
    1530:	bb 0b       	sbc	r27, r27
    1532:	dc 01       	movw	r26, r24
    1534:	99 27       	eor	r25, r25
    1536:	88 27       	eor	r24, r24
    1538:	60 e0       	ldi	r22, 0x00	; 0
    153a:	70 e0       	ldi	r23, 0x00	; 0
    153c:	84 2b       	or	r24, r20
    153e:	95 2b       	or	r25, r21
    1540:	a6 2b       	or	r26, r22
    1542:	b7 2b       	or	r27, r23
    1544:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1548:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    154c:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1550:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1554:	b0 9b       	sbis	0x16, 0	; 22
    1556:	1b c0       	rjmp	.+54     	; 0x158e <__vector_20+0x98>
    1558:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    155c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1560:	c9 01       	movw	r24, r18
    1562:	01 96       	adiw	r24, 0x01	; 1
    1564:	09 2e       	mov	r0, r25
    1566:	00 0c       	add	r0, r0
    1568:	aa 0b       	sbc	r26, r26
    156a:	bb 0b       	sbc	r27, r27
    156c:	dc 01       	movw	r26, r24
    156e:	99 27       	eor	r25, r25
    1570:	88 27       	eor	r24, r24
    1572:	60 e0       	ldi	r22, 0x00	; 0
    1574:	70 e0       	ldi	r23, 0x00	; 0
    1576:	84 2b       	or	r24, r20
    1578:	95 2b       	or	r25, r21
    157a:	a6 2b       	or	r26, r22
    157c:	b7 2b       	or	r27, r23
    157e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1582:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1586:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    158a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    158e:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1e>
    1592:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1f>
    1596:	30 97       	sbiw	r30, 0x00	; 0
    1598:	39 f0       	breq	.+14     	; 0x15a8 <__vector_20+0xb2>
    159a:	6f e0       	ldi	r22, 0x0F	; 15
    159c:	70 e0       	ldi	r23, 0x00	; 0
    159e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1e>
    15a2:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1f>
    15a6:	09 95       	icall
    15a8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    15ac:	ff 91       	pop	r31
    15ae:	ef 91       	pop	r30
    15b0:	bf 91       	pop	r27
    15b2:	af 91       	pop	r26
    15b4:	9f 91       	pop	r25
    15b6:	8f 91       	pop	r24
    15b8:	7f 91       	pop	r23
    15ba:	6f 91       	pop	r22
    15bc:	5f 91       	pop	r21
    15be:	4f 91       	pop	r20
    15c0:	3f 91       	pop	r19
    15c2:	2f 91       	pop	r18
    15c4:	0f 90       	pop	r0
    15c6:	0f be       	out	0x3f, r0	; 63
    15c8:	0f 90       	pop	r0
    15ca:	1f 90       	pop	r1
    15cc:	18 95       	reti

000015ce <__vector_21>:
    15ce:	1f 92       	push	r1
    15d0:	0f 92       	push	r0
    15d2:	0f b6       	in	r0, 0x3f	; 63
    15d4:	0f 92       	push	r0
    15d6:	11 24       	eor	r1, r1
    15d8:	2f 93       	push	r18
    15da:	3f 93       	push	r19
    15dc:	4f 93       	push	r20
    15de:	5f 93       	push	r21
    15e0:	6f 93       	push	r22
    15e2:	7f 93       	push	r23
    15e4:	8f 93       	push	r24
    15e6:	9f 93       	push	r25
    15e8:	af 93       	push	r26
    15ea:	bf 93       	push	r27
    15ec:	ef 93       	push	r30
    15ee:	ff 93       	push	r31
    15f0:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    15f4:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    15f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1600:	c9 01       	movw	r24, r18
    1602:	03 2e       	mov	r0, r19
    1604:	00 0c       	add	r0, r0
    1606:	aa 0b       	sbc	r26, r26
    1608:	bb 0b       	sbc	r27, r27
    160a:	dc 01       	movw	r26, r24
    160c:	99 27       	eor	r25, r25
    160e:	88 27       	eor	r24, r24
    1610:	60 e0       	ldi	r22, 0x00	; 0
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	84 2b       	or	r24, r20
    1616:	95 2b       	or	r25, r21
    1618:	a6 2b       	or	r26, r22
    161a:	b7 2b       	or	r27, r23
    161c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1620:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1624:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1628:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    162c:	b0 9b       	sbis	0x16, 0	; 22
    162e:	1b c0       	rjmp	.+54     	; 0x1666 <__vector_21+0x98>
    1630:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1634:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1638:	c9 01       	movw	r24, r18
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	09 2e       	mov	r0, r25
    163e:	00 0c       	add	r0, r0
    1640:	aa 0b       	sbc	r26, r26
    1642:	bb 0b       	sbc	r27, r27
    1644:	dc 01       	movw	r26, r24
    1646:	99 27       	eor	r25, r25
    1648:	88 27       	eor	r24, r24
    164a:	60 e0       	ldi	r22, 0x00	; 0
    164c:	70 e0       	ldi	r23, 0x00	; 0
    164e:	84 2b       	or	r24, r20
    1650:	95 2b       	or	r25, r21
    1652:	a6 2b       	or	r26, r22
    1654:	b7 2b       	or	r27, r23
    1656:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    165a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    165e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1662:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1666:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x20>
    166a:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x21>
    166e:	30 97       	sbiw	r30, 0x00	; 0
    1670:	39 f0       	breq	.+14     	; 0x1680 <__vector_21+0xb2>
    1672:	60 e1       	ldi	r22, 0x10	; 16
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x20>
    167a:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x21>
    167e:	09 95       	icall
    1680:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    1684:	ff 91       	pop	r31
    1686:	ef 91       	pop	r30
    1688:	bf 91       	pop	r27
    168a:	af 91       	pop	r26
    168c:	9f 91       	pop	r25
    168e:	8f 91       	pop	r24
    1690:	7f 91       	pop	r23
    1692:	6f 91       	pop	r22
    1694:	5f 91       	pop	r21
    1696:	4f 91       	pop	r20
    1698:	3f 91       	pop	r19
    169a:	2f 91       	pop	r18
    169c:	0f 90       	pop	r0
    169e:	0f be       	out	0x3f, r0	; 63
    16a0:	0f 90       	pop	r0
    16a2:	1f 90       	pop	r1
    16a4:	18 95       	reti

000016a6 <__vector_22>:
    16a6:	1f 92       	push	r1
    16a8:	0f 92       	push	r0
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	0f 92       	push	r0
    16ae:	11 24       	eor	r1, r1
    16b0:	2f 93       	push	r18
    16b2:	3f 93       	push	r19
    16b4:	4f 93       	push	r20
    16b6:	5f 93       	push	r21
    16b8:	6f 93       	push	r22
    16ba:	7f 93       	push	r23
    16bc:	8f 93       	push	r24
    16be:	9f 93       	push	r25
    16c0:	af 93       	push	r26
    16c2:	bf 93       	push	r27
    16c4:	ef 93       	push	r30
    16c6:	ff 93       	push	r31
    16c8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    16cc:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    16d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16d8:	c9 01       	movw	r24, r18
    16da:	03 2e       	mov	r0, r19
    16dc:	00 0c       	add	r0, r0
    16de:	aa 0b       	sbc	r26, r26
    16e0:	bb 0b       	sbc	r27, r27
    16e2:	dc 01       	movw	r26, r24
    16e4:	99 27       	eor	r25, r25
    16e6:	88 27       	eor	r24, r24
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	70 e0       	ldi	r23, 0x00	; 0
    16ec:	84 2b       	or	r24, r20
    16ee:	95 2b       	or	r25, r21
    16f0:	a6 2b       	or	r26, r22
    16f2:	b7 2b       	or	r27, r23
    16f4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    16f8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    16fc:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1700:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1704:	b0 9b       	sbis	0x16, 0	; 22
    1706:	1b c0       	rjmp	.+54     	; 0x173e <__vector_22+0x98>
    1708:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    170c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1710:	c9 01       	movw	r24, r18
    1712:	01 96       	adiw	r24, 0x01	; 1
    1714:	09 2e       	mov	r0, r25
    1716:	00 0c       	add	r0, r0
    1718:	aa 0b       	sbc	r26, r26
    171a:	bb 0b       	sbc	r27, r27
    171c:	dc 01       	movw	r26, r24
    171e:	99 27       	eor	r25, r25
    1720:	88 27       	eor	r24, r24
    1722:	60 e0       	ldi	r22, 0x00	; 0
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	84 2b       	or	r24, r20
    1728:	95 2b       	or	r25, r21
    172a:	a6 2b       	or	r26, r22
    172c:	b7 2b       	or	r27, r23
    172e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1732:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1736:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    173a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    173e:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x22>
    1742:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x23>
    1746:	30 97       	sbiw	r30, 0x00	; 0
    1748:	39 f0       	breq	.+14     	; 0x1758 <__vector_22+0xb2>
    174a:	61 e1       	ldi	r22, 0x11	; 17
    174c:	70 e0       	ldi	r23, 0x00	; 0
    174e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x22>
    1752:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x23>
    1756:	09 95       	icall
    1758:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    175c:	ff 91       	pop	r31
    175e:	ef 91       	pop	r30
    1760:	bf 91       	pop	r27
    1762:	af 91       	pop	r26
    1764:	9f 91       	pop	r25
    1766:	8f 91       	pop	r24
    1768:	7f 91       	pop	r23
    176a:	6f 91       	pop	r22
    176c:	5f 91       	pop	r21
    176e:	4f 91       	pop	r20
    1770:	3f 91       	pop	r19
    1772:	2f 91       	pop	r18
    1774:	0f 90       	pop	r0
    1776:	0f be       	out	0x3f, r0	; 63
    1778:	0f 90       	pop	r0
    177a:	1f 90       	pop	r1
    177c:	18 95       	reti

0000177e <__vector_9>:
    177e:	1f 92       	push	r1
    1780:	0f 92       	push	r0
    1782:	0f b6       	in	r0, 0x3f	; 63
    1784:	0f 92       	push	r0
    1786:	11 24       	eor	r1, r1
    1788:	2f 93       	push	r18
    178a:	3f 93       	push	r19
    178c:	4f 93       	push	r20
    178e:	5f 93       	push	r21
    1790:	6f 93       	push	r22
    1792:	7f 93       	push	r23
    1794:	8f 93       	push	r24
    1796:	9f 93       	push	r25
    1798:	ef 93       	push	r30
    179a:	ff 93       	push	r31
    179c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    17a0:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    17a4:	01 96       	adiw	r24, 0x01	; 1
    17a6:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
    17aa:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
    17ae:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    17b2:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    17b6:	30 97       	sbiw	r30, 0x00	; 0
    17b8:	39 f0       	breq	.+14     	; 0x17c8 <__vector_9+0x4a>
    17ba:	42 81       	ldd	r20, Z+2	; 0x02
    17bc:	53 81       	ldd	r21, Z+3	; 0x03
    17be:	64 81       	ldd	r22, Z+4	; 0x04
    17c0:	75 81       	ldd	r23, Z+5	; 0x05
    17c2:	86 17       	cp	r24, r22
    17c4:	97 07       	cpc	r25, r23
    17c6:	a1 f0       	breq	.+40     	; 0x17f0 <__vector_9+0x72>
    17c8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    17cc:	8d 7f       	andi	r24, 0xFD	; 253
    17ce:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    17d2:	ff 91       	pop	r31
    17d4:	ef 91       	pop	r30
    17d6:	9f 91       	pop	r25
    17d8:	8f 91       	pop	r24
    17da:	7f 91       	pop	r23
    17dc:	6f 91       	pop	r22
    17de:	5f 91       	pop	r21
    17e0:	4f 91       	pop	r20
    17e2:	3f 91       	pop	r19
    17e4:	2f 91       	pop	r18
    17e6:	0f 90       	pop	r0
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	0f 90       	pop	r0
    17ec:	1f 90       	pop	r1
    17ee:	18 95       	reti
    17f0:	ca 01       	movw	r24, r20
    17f2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17f6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17fa:	42 1b       	sub	r20, r18
    17fc:	53 0b       	sbc	r21, r19
    17fe:	41 30       	cpi	r20, 0x01	; 1
    1800:	51 05       	cpc	r21, r1
    1802:	51 f0       	breq	.+20     	; 0x1818 <__vector_9+0x9a>
    1804:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1808:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    180c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1810:	82 60       	ori	r24, 0x02	; 2
    1812:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1816:	dd cf       	rjmp	.-70     	; 0x17d2 <__vector_9+0x54>
    1818:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    181c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1820:	01 96       	adiw	r24, 0x01	; 1
    1822:	f0 cf       	rjmp	.-32     	; 0x1804 <__vector_9+0x86>

00001824 <__vector_7>:
    1824:	1f 92       	push	r1
    1826:	0f 92       	push	r0
    1828:	0f b6       	in	r0, 0x3f	; 63
    182a:	0f 92       	push	r0
    182c:	11 24       	eor	r1, r1
    182e:	8f 92       	push	r8
    1830:	9f 92       	push	r9
    1832:	af 92       	push	r10
    1834:	bf 92       	push	r11
    1836:	cf 92       	push	r12
    1838:	df 92       	push	r13
    183a:	ef 92       	push	r14
    183c:	ff 92       	push	r15
    183e:	0f 93       	push	r16
    1840:	1f 93       	push	r17
    1842:	2f 93       	push	r18
    1844:	3f 93       	push	r19
    1846:	4f 93       	push	r20
    1848:	5f 93       	push	r21
    184a:	6f 93       	push	r22
    184c:	7f 93       	push	r23
    184e:	8f 93       	push	r24
    1850:	9f 93       	push	r25
    1852:	af 93       	push	r26
    1854:	bf 93       	push	r27
    1856:	cf 93       	push	r28
    1858:	df 93       	push	r29
    185a:	ef 93       	push	r30
    185c:	ff 93       	push	r31
    185e:	e0 90 1c 01 	lds	r14, 0x011C	; 0x80011c <__data_end>
    1862:	f0 90 1d 01 	lds	r15, 0x011D	; 0x80011d <__data_end+0x1>
    1866:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    186a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186e:	b0 99       	sbic	0x16, 0	; 22
    1870:	98 c0       	rjmp	.+304    	; 0x19a2 <__vector_7+0x17e>
    1872:	47 01       	movw	r8, r14
    1874:	0f 2c       	mov	r0, r15
    1876:	00 0c       	add	r0, r0
    1878:	aa 08       	sbc	r10, r10
    187a:	bb 08       	sbc	r11, r11
    187c:	54 01       	movw	r10, r8
    187e:	99 24       	eor	r9, r9
    1880:	88 24       	eor	r8, r8
    1882:	a0 e0       	ldi	r26, 0x00	; 0
    1884:	b0 e0       	ldi	r27, 0x00	; 0
    1886:	88 2a       	or	r8, r24
    1888:	99 2a       	or	r9, r25
    188a:	aa 2a       	or	r10, r26
    188c:	bb 2a       	or	r11, r27
    188e:	c0 91 22 01 	lds	r28, 0x0122	; 0x800122 <timerQ>
    1892:	d0 91 23 01 	lds	r29, 0x0123	; 0x800123 <timerQ+0x1>
    1896:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <msgQ>
    189a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <msgQ+0x1>
    189e:	20 97       	sbiw	r28, 0x00	; 0
    18a0:	09 f4       	brne	.+2      	; 0x18a4 <__vector_7+0x80>
    18a2:	3f c0       	rjmp	.+126    	; 0x1922 <__vector_7+0xfe>
    18a4:	4a 81       	ldd	r20, Y+2	; 0x02
    18a6:	5b 81       	ldd	r21, Y+3	; 0x03
    18a8:	6c 81       	ldd	r22, Y+4	; 0x04
    18aa:	7d 81       	ldd	r23, Y+5	; 0x05
    18ac:	8a 01       	movw	r16, r20
    18ae:	9b 01       	movw	r18, r22
    18b0:	08 19       	sub	r16, r8
    18b2:	19 09       	sbc	r17, r9
    18b4:	2a 09       	sbc	r18, r10
    18b6:	3b 09       	sbc	r19, r11
    18b8:	10 16       	cp	r1, r16
    18ba:	11 06       	cpc	r1, r17
    18bc:	12 06       	cpc	r1, r18
    18be:	13 06       	cpc	r1, r19
    18c0:	0c f4       	brge	.+2      	; 0x18c4 <__vector_7+0xa0>
    18c2:	40 c0       	rjmp	.+128    	; 0x1944 <__vector_7+0x120>
    18c4:	d8 80       	ld	r13, Y
    18c6:	c9 80       	ldd	r12, Y+1	; 0x01
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	b9 f1       	breq	.+110    	; 0x193a <__vector_7+0x116>
    18cc:	0e 81       	ldd	r16, Y+6	; 0x06
    18ce:	1f 81       	ldd	r17, Y+7	; 0x07
    18d0:	28 85       	ldd	r18, Y+8	; 0x08
    18d2:	39 85       	ldd	r19, Y+9	; 0x09
    18d4:	fc 01       	movw	r30, r24
    18d6:	46 81       	ldd	r20, Z+6	; 0x06
    18d8:	57 81       	ldd	r21, Z+7	; 0x07
    18da:	60 85       	ldd	r22, Z+8	; 0x08
    18dc:	71 85       	ldd	r23, Z+9	; 0x09
    18de:	04 17       	cp	r16, r20
    18e0:	15 07       	cpc	r17, r21
    18e2:	26 07       	cpc	r18, r22
    18e4:	37 07       	cpc	r19, r23
    18e6:	4c f1       	brlt	.+82     	; 0x193a <__vector_7+0x116>
    18e8:	dc 01       	movw	r26, r24
    18ea:	0a c0       	rjmp	.+20     	; 0x1900 <__vector_7+0xdc>
    18ec:	46 81       	ldd	r20, Z+6	; 0x06
    18ee:	57 81       	ldd	r21, Z+7	; 0x07
    18f0:	60 85       	ldd	r22, Z+8	; 0x08
    18f2:	71 85       	ldd	r23, Z+9	; 0x09
    18f4:	04 17       	cp	r16, r20
    18f6:	15 07       	cpc	r17, r21
    18f8:	26 07       	cpc	r18, r22
    18fa:	37 07       	cpc	r19, r23
    18fc:	dc f0       	brlt	.+54     	; 0x1934 <__vector_7+0x110>
    18fe:	df 01       	movw	r26, r30
    1900:	ed 91       	ld	r30, X+
    1902:	fc 91       	ld	r31, X
    1904:	11 97       	sbiw	r26, 0x01	; 1
    1906:	30 97       	sbiw	r30, 0x00	; 0
    1908:	89 f7       	brne	.-30     	; 0x18ec <__vector_7+0xc8>
    190a:	19 82       	std	Y+1, r1	; 0x01
    190c:	18 82       	st	Y, r1
    190e:	cd 93       	st	X+, r28
    1910:	dc 93       	st	X, r29
    1912:	38 2f       	mov	r19, r24
    1914:	29 2f       	mov	r18, r25
    1916:	cd 2d       	mov	r28, r13
    1918:	dc 2d       	mov	r29, r12
    191a:	83 2f       	mov	r24, r19
    191c:	92 2f       	mov	r25, r18
    191e:	20 97       	sbiw	r28, 0x00	; 0
    1920:	09 f6       	brne	.-126    	; 0x18a4 <__vector_7+0x80>
    1922:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <timerQ+0x1>
    1926:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <timerQ>
    192a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    192e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1932:	13 c0       	rjmp	.+38     	; 0x195a <__vector_7+0x136>
    1934:	f9 83       	std	Y+1, r31	; 0x01
    1936:	e8 83       	st	Y, r30
    1938:	ea cf       	rjmp	.-44     	; 0x190e <__vector_7+0xea>
    193a:	99 83       	std	Y+1, r25	; 0x01
    193c:	88 83       	st	Y, r24
    193e:	3c 2f       	mov	r19, r28
    1940:	2d 2f       	mov	r18, r29
    1942:	e9 cf       	rjmp	.-46     	; 0x1916 <__vector_7+0xf2>
    1944:	d0 93 23 01 	sts	0x0123, r29	; 0x800123 <timerQ+0x1>
    1948:	c0 93 22 01 	sts	0x0122, r28	; 0x800122 <timerQ>
    194c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    1950:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1954:	e6 16       	cp	r14, r22
    1956:	f7 06       	cpc	r15, r23
    1958:	d9 f1       	breq	.+118    	; 0x19d0 <__vector_7+0x1ac>
    195a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    195e:	8d 7f       	andi	r24, 0xFD	; 253
    1960:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1964:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    1968:	ff 91       	pop	r31
    196a:	ef 91       	pop	r30
    196c:	df 91       	pop	r29
    196e:	cf 91       	pop	r28
    1970:	bf 91       	pop	r27
    1972:	af 91       	pop	r26
    1974:	9f 91       	pop	r25
    1976:	8f 91       	pop	r24
    1978:	7f 91       	pop	r23
    197a:	6f 91       	pop	r22
    197c:	5f 91       	pop	r21
    197e:	4f 91       	pop	r20
    1980:	3f 91       	pop	r19
    1982:	2f 91       	pop	r18
    1984:	1f 91       	pop	r17
    1986:	0f 91       	pop	r16
    1988:	ff 90       	pop	r15
    198a:	ef 90       	pop	r14
    198c:	df 90       	pop	r13
    198e:	cf 90       	pop	r12
    1990:	bf 90       	pop	r11
    1992:	af 90       	pop	r10
    1994:	9f 90       	pop	r9
    1996:	8f 90       	pop	r8
    1998:	0f 90       	pop	r0
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	0f 90       	pop	r0
    199e:	1f 90       	pop	r1
    19a0:	18 95       	reti
    19a2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19a6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19aa:	47 01       	movw	r8, r14
    19ac:	8f ef       	ldi	r24, 0xFF	; 255
    19ae:	88 1a       	sub	r8, r24
    19b0:	98 0a       	sbc	r9, r24
    19b2:	09 2c       	mov	r0, r9
    19b4:	00 0c       	add	r0, r0
    19b6:	aa 08       	sbc	r10, r10
    19b8:	bb 08       	sbc	r11, r11
    19ba:	d4 01       	movw	r26, r8
    19bc:	99 27       	eor	r25, r25
    19be:	88 27       	eor	r24, r24
    19c0:	49 01       	movw	r8, r18
    19c2:	a1 2c       	mov	r10, r1
    19c4:	b1 2c       	mov	r11, r1
    19c6:	88 2a       	or	r8, r24
    19c8:	99 2a       	or	r9, r25
    19ca:	aa 2a       	or	r10, r26
    19cc:	bb 2a       	or	r11, r27
    19ce:	5f cf       	rjmp	.-322    	; 0x188e <__vector_7+0x6a>
    19d0:	ca 01       	movw	r24, r20
    19d2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19d6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19da:	42 1b       	sub	r20, r18
    19dc:	53 0b       	sbc	r21, r19
    19de:	41 30       	cpi	r20, 0x01	; 1
    19e0:	51 05       	cpc	r21, r1
    19e2:	51 f0       	breq	.+20     	; 0x19f8 <__vector_7+0x1d4>
    19e4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    19e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19ec:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19f0:	82 60       	ori	r24, 0x02	; 2
    19f2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19f6:	b6 cf       	rjmp	.-148    	; 0x1964 <__vector_7+0x140>
    19f8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19fc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a00:	01 96       	adiw	r24, 0x01	; 1
    1a02:	f0 cf       	rjmp	.-32     	; 0x19e4 <__vector_7+0x1c0>

00001a04 <async>:
    1a04:	3f 92       	push	r3
    1a06:	4f 92       	push	r4
    1a08:	5f 92       	push	r5
    1a0a:	6f 92       	push	r6
    1a0c:	7f 92       	push	r7
    1a0e:	8f 92       	push	r8
    1a10:	9f 92       	push	r9
    1a12:	af 92       	push	r10
    1a14:	bf 92       	push	r11
    1a16:	cf 92       	push	r12
    1a18:	df 92       	push	r13
    1a1a:	ef 92       	push	r14
    1a1c:	ff 92       	push	r15
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	ef b7       	in	r30, 0x3f	; 63
    1a28:	e0 78       	andi	r30, 0x80	; 128
    1a2a:	3e 2e       	mov	r3, r30
    1a2c:	f8 94       	cli
    1a2e:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1a32:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1a36:	20 97       	sbiw	r28, 0x00	; 0
    1a38:	09 f4       	brne	.+2      	; 0x1a3c <async+0x38>
    1a3a:	52 c1       	rjmp	.+676    	; 0x1ce0 <async+0x2dc>
    1a3c:	e8 81       	ld	r30, Y
    1a3e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a40:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1a44:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1a48:	1b 87       	std	Y+11, r17	; 0x0b
    1a4a:	0a 87       	std	Y+10, r16	; 0x0a
    1a4c:	fd 86       	std	Y+13, r15	; 0x0d
    1a4e:	ec 86       	std	Y+12, r14	; 0x0c
    1a50:	df 86       	std	Y+15, r13	; 0x0f
    1a52:	ce 86       	std	Y+14, r12	; 0x0e
    1a54:	33 20       	and	r3, r3
    1a56:	09 f4       	brne	.+2      	; 0x1a5a <async+0x56>
    1a58:	6f c0       	rjmp	.+222    	; 0x1b38 <async+0x134>
    1a5a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a5e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a62:	02 80       	ldd	r0, Z+2	; 0x02
    1a64:	f3 81       	ldd	r31, Z+3	; 0x03
    1a66:	e0 2d       	mov	r30, r0
    1a68:	c2 80       	ldd	r12, Z+2	; 0x02
    1a6a:	d3 80       	ldd	r13, Z+3	; 0x03
    1a6c:	e4 80       	ldd	r14, Z+4	; 0x04
    1a6e:	f5 80       	ldd	r15, Z+5	; 0x05
    1a70:	c6 0e       	add	r12, r22
    1a72:	d7 1e       	adc	r13, r23
    1a74:	e8 1e       	adc	r14, r24
    1a76:	f9 1e       	adc	r15, r25
    1a78:	ca 82       	std	Y+2, r12	; 0x02
    1a7a:	db 82       	std	Y+3, r13	; 0x03
    1a7c:	ec 82       	std	Y+4, r14	; 0x04
    1a7e:	fd 82       	std	Y+5, r15	; 0x05
    1a80:	12 16       	cp	r1, r18
    1a82:	13 06       	cpc	r1, r19
    1a84:	14 06       	cpc	r1, r20
    1a86:	15 06       	cpc	r1, r21
    1a88:	0c f0       	brlt	.+2      	; 0x1a8c <async+0x88>
    1a8a:	f8 c0       	rjmp	.+496    	; 0x1c7c <async+0x278>
    1a8c:	da 01       	movw	r26, r20
    1a8e:	c9 01       	movw	r24, r18
    1a90:	8c 01       	movw	r16, r24
    1a92:	9d 01       	movw	r18, r26
    1a94:	0c 0d       	add	r16, r12
    1a96:	1d 1d       	adc	r17, r13
    1a98:	2e 1d       	adc	r18, r14
    1a9a:	3f 1d       	adc	r19, r15
    1a9c:	0e 83       	std	Y+6, r16	; 0x06
    1a9e:	1f 83       	std	Y+7, r17	; 0x07
    1aa0:	28 87       	std	Y+8, r18	; 0x08
    1aa2:	39 87       	std	Y+9, r19	; 0x09
    1aa4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1aa8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1aac:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ab0:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab4:	b0 99       	sbic	0x16, 0	; 22
    1ab6:	49 c0       	rjmp	.+146    	; 0x1b4a <async+0x146>
    1ab8:	2c 01       	movw	r4, r24
    1aba:	09 2e       	mov	r0, r25
    1abc:	00 0c       	add	r0, r0
    1abe:	66 08       	sbc	r6, r6
    1ac0:	77 08       	sbc	r7, r7
    1ac2:	52 01       	movw	r10, r4
    1ac4:	99 24       	eor	r9, r9
    1ac6:	88 24       	eor	r8, r8
    1ac8:	2b 01       	movw	r4, r22
    1aca:	61 2c       	mov	r6, r1
    1acc:	71 2c       	mov	r7, r1
    1ace:	48 28       	or	r4, r8
    1ad0:	59 28       	or	r5, r9
    1ad2:	6a 28       	or	r6, r10
    1ad4:	7b 28       	or	r7, r11
    1ad6:	b7 01       	movw	r22, r14
    1ad8:	a6 01       	movw	r20, r12
    1ada:	44 19       	sub	r20, r4
    1adc:	55 09       	sbc	r21, r5
    1ade:	66 09       	sbc	r22, r6
    1ae0:	77 09       	sbc	r23, r7
    1ae2:	14 16       	cp	r1, r20
    1ae4:	15 06       	cpc	r1, r21
    1ae6:	16 06       	cpc	r1, r22
    1ae8:	17 06       	cpc	r1, r23
    1aea:	0c f0       	brlt	.+2      	; 0x1aee <async+0xea>
    1aec:	68 c0       	rjmp	.+208    	; 0x1bbe <async+0x1ba>
    1aee:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timerQ>
    1af2:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timerQ+0x1>
    1af6:	10 97       	sbiw	r26, 0x00	; 0
    1af8:	09 f4       	brne	.+2      	; 0x1afc <async+0xf8>
    1afa:	dc c0       	rjmp	.+440    	; 0x1cb4 <async+0x2b0>
    1afc:	12 96       	adiw	r26, 0x02	; 2
    1afe:	0d 91       	ld	r16, X+
    1b00:	1d 91       	ld	r17, X+
    1b02:	2d 91       	ld	r18, X+
    1b04:	3c 91       	ld	r19, X
    1b06:	15 97       	sbiw	r26, 0x05	; 5
    1b08:	c0 16       	cp	r12, r16
    1b0a:	d1 06       	cpc	r13, r17
    1b0c:	e2 06       	cpc	r14, r18
    1b0e:	f3 06       	cpc	r15, r19
    1b10:	5c f4       	brge	.+22     	; 0x1b28 <async+0x124>
    1b12:	d0 c0       	rjmp	.+416    	; 0x1cb4 <async+0x2b0>
    1b14:	42 81       	ldd	r20, Z+2	; 0x02
    1b16:	53 81       	ldd	r21, Z+3	; 0x03
    1b18:	64 81       	ldd	r22, Z+4	; 0x04
    1b1a:	75 81       	ldd	r23, Z+5	; 0x05
    1b1c:	c4 16       	cp	r12, r20
    1b1e:	d5 06       	cpc	r13, r21
    1b20:	e6 06       	cpc	r14, r22
    1b22:	f7 06       	cpc	r15, r23
    1b24:	4c f1       	brlt	.+82     	; 0x1b78 <async+0x174>
    1b26:	df 01       	movw	r26, r30
    1b28:	ed 91       	ld	r30, X+
    1b2a:	fc 91       	ld	r31, X
    1b2c:	11 97       	sbiw	r26, 0x01	; 1
    1b2e:	30 97       	sbiw	r30, 0x00	; 0
    1b30:	89 f7       	brne	.-30     	; 0x1b14 <async+0x110>
    1b32:	19 82       	std	Y+1, r1	; 0x01
    1b34:	18 82       	st	Y, r1
    1b36:	22 c0       	rjmp	.+68     	; 0x1b7c <async+0x178>
    1b38:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <timestamp>
    1b3c:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <timestamp+0x1>
    1b40:	e0 90 20 01 	lds	r14, 0x0120	; 0x800120 <timestamp+0x2>
    1b44:	f0 90 21 01 	lds	r15, 0x0121	; 0x800121 <timestamp+0x3>
    1b48:	93 cf       	rjmp	.-218    	; 0x1a70 <async+0x6c>
    1b4a:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b4e:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b52:	2c 01       	movw	r4, r24
    1b54:	4f ef       	ldi	r20, 0xFF	; 255
    1b56:	44 1a       	sub	r4, r20
    1b58:	54 0a       	sbc	r5, r20
    1b5a:	05 2c       	mov	r0, r5
    1b5c:	00 0c       	add	r0, r0
    1b5e:	66 08       	sbc	r6, r6
    1b60:	77 08       	sbc	r7, r7
    1b62:	b2 01       	movw	r22, r4
    1b64:	55 27       	eor	r21, r21
    1b66:	44 27       	eor	r20, r20
    1b68:	2f 01       	movw	r4, r30
    1b6a:	61 2c       	mov	r6, r1
    1b6c:	71 2c       	mov	r7, r1
    1b6e:	44 2a       	or	r4, r20
    1b70:	55 2a       	or	r5, r21
    1b72:	66 2a       	or	r6, r22
    1b74:	77 2a       	or	r7, r23
    1b76:	af cf       	rjmp	.-162    	; 0x1ad6 <async+0xd2>
    1b78:	f9 83       	std	Y+1, r31	; 0x01
    1b7a:	e8 83       	st	Y, r30
    1b7c:	cd 93       	st	X+, r28
    1b7e:	dc 93       	st	X, r29
    1b80:	82 17       	cp	r24, r18
    1b82:	93 07       	cpc	r25, r19
    1b84:	09 f4       	brne	.+2      	; 0x1b88 <async+0x184>
    1b86:	7f c0       	rjmp	.+254    	; 0x1c86 <async+0x282>
    1b88:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1b8c:	8d 7f       	andi	r24, 0xFD	; 253
    1b8e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1b92:	33 20       	and	r3, r3
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <async+0x194>
    1b96:	78 94       	sei
    1b98:	ce 01       	movw	r24, r28
    1b9a:	df 91       	pop	r29
    1b9c:	cf 91       	pop	r28
    1b9e:	1f 91       	pop	r17
    1ba0:	0f 91       	pop	r16
    1ba2:	ff 90       	pop	r15
    1ba4:	ef 90       	pop	r14
    1ba6:	df 90       	pop	r13
    1ba8:	cf 90       	pop	r12
    1baa:	bf 90       	pop	r11
    1bac:	af 90       	pop	r10
    1bae:	9f 90       	pop	r9
    1bb0:	8f 90       	pop	r8
    1bb2:	7f 90       	pop	r7
    1bb4:	6f 90       	pop	r6
    1bb6:	5f 90       	pop	r5
    1bb8:	4f 90       	pop	r4
    1bba:	3f 90       	pop	r3
    1bbc:	08 95       	ret
    1bbe:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <msgQ>
    1bc2:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <msgQ+0x1>
    1bc6:	10 97       	sbiw	r26, 0x00	; 0
    1bc8:	09 f4       	brne	.+2      	; 0x1bcc <async+0x1c8>
    1bca:	83 c0       	rjmp	.+262    	; 0x1cd2 <async+0x2ce>
    1bcc:	16 96       	adiw	r26, 0x06	; 6
    1bce:	cd 90       	ld	r12, X+
    1bd0:	dd 90       	ld	r13, X+
    1bd2:	ed 90       	ld	r14, X+
    1bd4:	fc 90       	ld	r15, X
    1bd6:	19 97       	sbiw	r26, 0x09	; 9
    1bd8:	0c 15       	cp	r16, r12
    1bda:	1d 05       	cpc	r17, r13
    1bdc:	2e 05       	cpc	r18, r14
    1bde:	3f 05       	cpc	r19, r15
    1be0:	64 f4       	brge	.+24     	; 0x1bfa <async+0x1f6>
    1be2:	77 c0       	rjmp	.+238    	; 0x1cd2 <async+0x2ce>
    1be4:	c6 80       	ldd	r12, Z+6	; 0x06
    1be6:	d7 80       	ldd	r13, Z+7	; 0x07
    1be8:	e0 84       	ldd	r14, Z+8	; 0x08
    1bea:	f1 84       	ldd	r15, Z+9	; 0x09
    1bec:	0c 15       	cp	r16, r12
    1bee:	1d 05       	cpc	r17, r13
    1bf0:	2e 05       	cpc	r18, r14
    1bf2:	3f 05       	cpc	r19, r15
    1bf4:	0c f4       	brge	.+2      	; 0x1bf8 <async+0x1f4>
    1bf6:	5b c0       	rjmp	.+182    	; 0x1cae <async+0x2aa>
    1bf8:	df 01       	movw	r26, r30
    1bfa:	ed 91       	ld	r30, X+
    1bfc:	fc 91       	ld	r31, X
    1bfe:	11 97       	sbiw	r26, 0x01	; 1
    1c00:	30 97       	sbiw	r30, 0x00	; 0
    1c02:	81 f7       	brne	.-32     	; 0x1be4 <async+0x1e0>
    1c04:	19 82       	std	Y+1, r1	; 0x01
    1c06:	18 82       	st	Y, r1
    1c08:	cd 93       	st	X+, r28
    1c0a:	dc 93       	st	X, r29
    1c0c:	33 20       	and	r3, r3
    1c0e:	21 f2       	breq	.-120    	; 0x1b98 <async+0x194>
    1c10:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1c14:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1c18:	00 97       	sbiw	r24, 0x00	; 0
    1c1a:	09 f4       	brne	.+2      	; 0x1c1e <async+0x21a>
    1c1c:	bc cf       	rjmp	.-136    	; 0x1b96 <async+0x192>
    1c1e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1c22:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1c26:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <msgQ>
    1c2a:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <msgQ+0x1>
    1c2e:	02 81       	ldd	r16, Z+2	; 0x02
    1c30:	13 81       	ldd	r17, Z+3	; 0x03
    1c32:	d9 01       	movw	r26, r18
    1c34:	16 96       	adiw	r26, 0x06	; 6
    1c36:	4d 91       	ld	r20, X+
    1c38:	5d 91       	ld	r21, X+
    1c3a:	6d 91       	ld	r22, X+
    1c3c:	7c 91       	ld	r23, X
    1c3e:	19 97       	sbiw	r26, 0x09	; 9
    1c40:	d8 01       	movw	r26, r16
    1c42:	16 96       	adiw	r26, 0x06	; 6
    1c44:	0d 91       	ld	r16, X+
    1c46:	1d 91       	ld	r17, X+
    1c48:	2d 91       	ld	r18, X+
    1c4a:	3c 91       	ld	r19, X
    1c4c:	19 97       	sbiw	r26, 0x09	; 9
    1c4e:	40 1b       	sub	r20, r16
    1c50:	51 0b       	sbc	r21, r17
    1c52:	62 0b       	sbc	r22, r18
    1c54:	73 0b       	sbc	r23, r19
    1c56:	77 ff       	sbrs	r23, 7
    1c58:	9e cf       	rjmp	.-196    	; 0x1b96 <async+0x192>
    1c5a:	dc 01       	movw	r26, r24
    1c5c:	2d 91       	ld	r18, X+
    1c5e:	3c 91       	ld	r19, X
    1c60:	11 97       	sbiw	r26, 0x01	; 1
    1c62:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1c66:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1c6a:	ed 93       	st	X+, r30
    1c6c:	fc 93       	st	X, r31
    1c6e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1c72:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1c76:	0e 94 bc 03 	call	0x778	; 0x778 <dispatch>
    1c7a:	8d cf       	rjmp	.-230    	; 0x1b96 <async+0x192>
    1c7c:	8f ef       	ldi	r24, 0xFF	; 255
    1c7e:	9f ef       	ldi	r25, 0xFF	; 255
    1c80:	af ef       	ldi	r26, 0xFF	; 255
    1c82:	bf e7       	ldi	r27, 0x7F	; 127
    1c84:	05 cf       	rjmp	.-502    	; 0x1a90 <async+0x8c>
    1c86:	c8 01       	movw	r24, r16
    1c88:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c8c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c90:	04 1b       	sub	r16, r20
    1c92:	15 0b       	sbc	r17, r21
    1c94:	01 30       	cpi	r16, 0x01	; 1
    1c96:	11 05       	cpc	r17, r1
    1c98:	b1 f0       	breq	.+44     	; 0x1cc6 <async+0x2c2>
    1c9a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c9e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ca2:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1ca6:	82 60       	ori	r24, 0x02	; 2
    1ca8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1cac:	72 cf       	rjmp	.-284    	; 0x1b92 <async+0x18e>
    1cae:	f9 83       	std	Y+1, r31	; 0x01
    1cb0:	e8 83       	st	Y, r30
    1cb2:	aa cf       	rjmp	.-172    	; 0x1c08 <async+0x204>
    1cb4:	b9 83       	std	Y+1, r27	; 0x01
    1cb6:	a8 83       	st	Y, r26
    1cb8:	d0 93 23 01 	sts	0x0123, r29	; 0x800123 <timerQ+0x1>
    1cbc:	c0 93 22 01 	sts	0x0122, r28	; 0x800122 <timerQ>
    1cc0:	97 01       	movw	r18, r14
    1cc2:	86 01       	movw	r16, r12
    1cc4:	5d cf       	rjmp	.-326    	; 0x1b80 <async+0x17c>
    1cc6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cce:	01 96       	adiw	r24, 0x01	; 1
    1cd0:	e4 cf       	rjmp	.-56     	; 0x1c9a <async+0x296>
    1cd2:	b9 83       	std	Y+1, r27	; 0x01
    1cd4:	a8 83       	st	Y, r26
    1cd6:	d0 93 25 01 	sts	0x0125, r29	; 0x800125 <msgQ+0x1>
    1cda:	c0 93 24 01 	sts	0x0124, r28	; 0x800124 <msgQ>
    1cde:	96 cf       	rjmp	.-212    	; 0x1c0c <async+0x208>
    1ce0:	0e 94 1c 04 	call	0x838	; 0x838 <dequeue.part.0>

00001ce4 <sync>:
    1ce4:	cf 92       	push	r12
    1ce6:	df 92       	push	r13
    1ce8:	ef 92       	push	r14
    1cea:	ff 92       	push	r15
    1cec:	0f 93       	push	r16
    1cee:	1f 93       	push	r17
    1cf0:	cf 93       	push	r28
    1cf2:	df 93       	push	r29
    1cf4:	ec 01       	movw	r28, r24
    1cf6:	7b 01       	movw	r14, r22
    1cf8:	6a 01       	movw	r12, r20
    1cfa:	1f b7       	in	r17, 0x3f	; 63
    1cfc:	10 78       	andi	r17, 0x80	; 128
    1cfe:	f8 94       	cli
    1d00:	a8 81       	ld	r26, Y
    1d02:	b9 81       	ldd	r27, Y+1	; 0x01
    1d04:	10 97       	sbiw	r26, 0x00	; 0
    1d06:	19 f4       	brne	.+6      	; 0x1d0e <sync+0x2a>
    1d08:	62 c0       	rjmp	.+196    	; 0x1dce <sync+0xea>
    1d0a:	a0 81       	ld	r26, Z
    1d0c:	b1 81       	ldd	r27, Z+1	; 0x01
    1d0e:	14 96       	adiw	r26, 0x04	; 4
    1d10:	ed 91       	ld	r30, X+
    1d12:	fc 91       	ld	r31, X
    1d14:	15 97       	sbiw	r26, 0x05	; 5
    1d16:	30 97       	sbiw	r30, 0x00	; 0
    1d18:	c1 f7       	brne	.-16     	; 0x1d0a <sync+0x26>
    1d1a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d1e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d22:	2a 17       	cp	r18, r26
    1d24:	3b 07       	cpc	r19, r27
    1d26:	09 f4       	brne	.+2      	; 0x1d2a <sync+0x46>
    1d28:	4c c0       	rjmp	.+152    	; 0x1dc2 <sync+0xde>
    1d2a:	11 23       	and	r17, r17
    1d2c:	a1 f1       	breq	.+104    	; 0x1d96 <sync+0xb2>
    1d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d30:	9b 81       	ldd	r25, Y+3	; 0x03
    1d32:	00 97       	sbiw	r24, 0x00	; 0
    1d34:	19 f0       	breq	.+6      	; 0x1d3c <sync+0x58>
    1d36:	fc 01       	movw	r30, r24
    1d38:	15 82       	std	Z+5, r1	; 0x05
    1d3a:	14 82       	std	Z+4, r1	; 0x04
    1d3c:	3b 83       	std	Y+3, r19	; 0x03
    1d3e:	2a 83       	std	Y+2, r18	; 0x02
    1d40:	f9 01       	movw	r30, r18
    1d42:	d5 83       	std	Z+5, r29	; 0x05
    1d44:	c4 83       	std	Z+4, r28	; 0x04
    1d46:	cd 01       	movw	r24, r26
    1d48:	0e 94 bc 03 	call	0x778	; 0x778 <dispatch>
    1d4c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d50:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d54:	82 81       	ldd	r24, Z+2	; 0x02
    1d56:	93 81       	ldd	r25, Z+3	; 0x03
    1d58:	89 2b       	or	r24, r25
    1d5a:	09 f4       	brne	.+2      	; 0x1d5e <sync+0x7a>
    1d5c:	41 c0       	rjmp	.+130    	; 0x1de0 <sync+0xfc>
    1d5e:	f9 83       	std	Y+1, r31	; 0x01
    1d60:	e8 83       	st	Y, r30
    1d62:	8a 81       	ldd	r24, Y+2	; 0x02
    1d64:	9b 81       	ldd	r25, Y+3	; 0x03
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	09 f0       	breq	.+2      	; 0x1d6c <sync+0x88>
    1d6a:	78 94       	sei
    1d6c:	b6 01       	movw	r22, r12
    1d6e:	ce 01       	movw	r24, r28
    1d70:	f7 01       	movw	r30, r14
    1d72:	09 95       	icall
    1d74:	f8 2e       	mov	r15, r24
    1d76:	09 2f       	mov	r16, r25
    1d78:	8f b7       	in	r24, 0x3f	; 63
    1d7a:	f8 94       	cli
    1d7c:	19 82       	std	Y+1, r1	; 0x01
    1d7e:	18 82       	st	Y, r1
    1d80:	8a 81       	ldd	r24, Y+2	; 0x02
    1d82:	9b 81       	ldd	r25, Y+3	; 0x03
    1d84:	82 30       	cpi	r24, 0x02	; 2
    1d86:	91 05       	cpc	r25, r1
    1d88:	a0 f4       	brcc	.+40     	; 0x1db2 <sync+0xce>
    1d8a:	11 23       	and	r17, r17
    1d8c:	79 f0       	breq	.+30     	; 0x1dac <sync+0xc8>
    1d8e:	78 94       	sei
    1d90:	8f 2d       	mov	r24, r15
    1d92:	90 2f       	mov	r25, r16
    1d94:	02 c0       	rjmp	.+4      	; 0x1d9a <sync+0xb6>
    1d96:	8f ef       	ldi	r24, 0xFF	; 255
    1d98:	9f ef       	ldi	r25, 0xFF	; 255
    1d9a:	df 91       	pop	r29
    1d9c:	cf 91       	pop	r28
    1d9e:	1f 91       	pop	r17
    1da0:	0f 91       	pop	r16
    1da2:	ff 90       	pop	r15
    1da4:	ef 90       	pop	r14
    1da6:	df 90       	pop	r13
    1da8:	cf 90       	pop	r12
    1daa:	08 95       	ret
    1dac:	8f 2d       	mov	r24, r15
    1dae:	90 2f       	mov	r25, r16
    1db0:	f4 cf       	rjmp	.-24     	; 0x1d9a <sync+0xb6>
    1db2:	1b 82       	std	Y+3, r1	; 0x03
    1db4:	1a 82       	std	Y+2, r1	; 0x02
    1db6:	fc 01       	movw	r30, r24
    1db8:	15 82       	std	Z+5, r1	; 0x05
    1dba:	14 82       	std	Z+4, r1	; 0x04
    1dbc:	0e 94 bc 03 	call	0x778	; 0x778 <dispatch>
    1dc0:	e4 cf       	rjmp	.-56     	; 0x1d8a <sync+0xa6>
    1dc2:	11 23       	and	r17, r17
    1dc4:	41 f3       	breq	.-48     	; 0x1d96 <sync+0xb2>
    1dc6:	78 94       	sei
    1dc8:	8f ef       	ldi	r24, 0xFF	; 255
    1dca:	9f ef       	ldi	r25, 0xFF	; 255
    1dcc:	e6 cf       	rjmp	.-52     	; 0x1d9a <sync+0xb6>
    1dce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dd2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dd6:	99 83       	std	Y+1, r25	; 0x01
    1dd8:	88 83       	st	Y, r24
    1dda:	11 23       	and	r17, r17
    1ddc:	39 f2       	breq	.-114    	; 0x1d6c <sync+0x88>
    1dde:	c1 cf       	rjmp	.-126    	; 0x1d62 <sync+0x7e>
    1de0:	78 94       	sei
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	d9 cf       	rjmp	.-78     	; 0x1d9a <sync+0xb6>

00001de8 <run>:
    1de8:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1dec:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1df0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1df8:	20 97       	sbiw	r28, 0x00	; 0
    1dfa:	09 f4       	brne	.+2      	; 0x1dfe <run+0x16>
    1dfc:	6e c0       	rjmp	.+220    	; 0x1eda <run+0xf2>
    1dfe:	88 81       	ld	r24, Y
    1e00:	99 81       	ldd	r25, Y+1	; 0x01
    1e02:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <msgQ+0x1>
    1e06:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <msgQ>
    1e0a:	d3 83       	std	Z+3, r29	; 0x03
    1e0c:	c2 83       	std	Z+2, r28	; 0x02
    1e0e:	78 94       	sei
    1e10:	4e 85       	ldd	r20, Y+14	; 0x0e
    1e12:	5f 85       	ldd	r21, Y+15	; 0x0f
    1e14:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e16:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e18:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e1a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e1c:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <sync>
    1e20:	8f b7       	in	r24, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1e28:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1e2c:	99 83       	std	Y+1, r25	; 0x01
    1e2e:	88 83       	st	Y, r24
    1e30:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1e34:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1e38:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1e3c:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1e40:	f7 01       	movw	r30, r14
    1e42:	a0 81       	ld	r26, Z
    1e44:	b1 81       	ldd	r27, Z+1	; 0x01
    1e46:	12 96       	adiw	r26, 0x02	; 2
    1e48:	8d 91       	ld	r24, X+
    1e4a:	9c 91       	ld	r25, X
    1e4c:	13 97       	sbiw	r26, 0x03	; 3
    1e4e:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1e52:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1e56:	20 97       	sbiw	r28, 0x00	; 0
    1e58:	a9 f0       	breq	.+42     	; 0x1e84 <run+0x9c>
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	49 f2       	breq	.-110    	; 0x1df0 <run+0x8>
    1e5e:	4e 81       	ldd	r20, Y+6	; 0x06
    1e60:	5f 81       	ldd	r21, Y+7	; 0x07
    1e62:	68 85       	ldd	r22, Y+8	; 0x08
    1e64:	79 85       	ldd	r23, Y+9	; 0x09
    1e66:	fc 01       	movw	r30, r24
    1e68:	06 81       	ldd	r16, Z+6	; 0x06
    1e6a:	17 81       	ldd	r17, Z+7	; 0x07
    1e6c:	20 85       	ldd	r18, Z+8	; 0x08
    1e6e:	31 85       	ldd	r19, Z+9	; 0x09
    1e70:	40 1b       	sub	r20, r16
    1e72:	51 0b       	sbc	r21, r17
    1e74:	62 0b       	sbc	r22, r18
    1e76:	73 0b       	sbc	r23, r19
    1e78:	14 16       	cp	r1, r20
    1e7a:	15 06       	cpc	r1, r21
    1e7c:	16 06       	cpc	r1, r22
    1e7e:	17 06       	cpc	r1, r23
    1e80:	0c f0       	brlt	.+2      	; 0x1e84 <run+0x9c>
    1e82:	b6 cf       	rjmp	.-148    	; 0x1df0 <run+0x8>
    1e84:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1e88:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1e8c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e90:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e94:	f7 01       	movw	r30, r14
    1e96:	91 83       	std	Z+1, r25	; 0x01
    1e98:	80 83       	st	Z, r24
    1e9a:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1e9e:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1ea2:	14 96       	adiw	r26, 0x04	; 4
    1ea4:	ed 91       	ld	r30, X+
    1ea6:	fc 91       	ld	r31, X
    1ea8:	15 97       	sbiw	r26, 0x05	; 5
    1eaa:	30 97       	sbiw	r30, 0x00	; 0
    1eac:	41 f0       	breq	.+16     	; 0x1ebe <run+0xd6>
    1eae:	a0 81       	ld	r26, Z
    1eb0:	b1 81       	ldd	r27, Z+1	; 0x01
    1eb2:	14 96       	adiw	r26, 0x04	; 4
    1eb4:	ed 91       	ld	r30, X+
    1eb6:	fc 91       	ld	r31, X
    1eb8:	15 97       	sbiw	r26, 0x05	; 5
    1eba:	30 97       	sbiw	r30, 0x00	; 0
    1ebc:	c1 f7       	brne	.-16     	; 0x1eae <run+0xc6>
    1ebe:	cd 01       	movw	r24, r26
    1ec0:	0e 94 bc 03 	call	0x778	; 0x778 <dispatch>
    1ec4:	c0 91 24 01 	lds	r28, 0x0124	; 0x800124 <msgQ>
    1ec8:	d0 91 25 01 	lds	r29, 0x0125	; 0x800125 <msgQ+0x1>
    1ecc:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ed0:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ed4:	20 97       	sbiw	r28, 0x00	; 0
    1ed6:	09 f0       	breq	.+2      	; 0x1eda <run+0xf2>
    1ed8:	92 cf       	rjmp	.-220    	; 0x1dfe <run+0x16>
    1eda:	0e 94 1c 04 	call	0x838	; 0x838 <dequeue.part.0>

00001ede <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1ede:	42 31       	cpi	r20, 0x12	; 18
    1ee0:	b8 f4       	brcc	.+46     	; 0x1f10 <install+0x32>
        char status;
        DISABLE(status);
    1ee2:	2f b7       	in	r18, 0x3f	; 63
    1ee4:	f8 94       	cli
        otable[i] = obj;
    1ee6:	50 e0       	ldi	r21, 0x00	; 0
    1ee8:	44 0f       	add	r20, r20
    1eea:	55 1f       	adc	r21, r21
    1eec:	fa 01       	movw	r30, r20
    1eee:	ea 5d       	subi	r30, 0xDA	; 218
    1ef0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef2:	91 83       	std	Z+1, r25	; 0x01
    1ef4:	80 83       	st	Z, r24
        mtable[i] = m;
    1ef6:	fa 01       	movw	r30, r20
    1ef8:	e2 54       	subi	r30, 0x42	; 66
    1efa:	fe 4f       	sbci	r31, 0xFE	; 254
    1efc:	71 83       	std	Z+1, r23	; 0x01
    1efe:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1f00:	41 e0       	ldi	r20, 0x01	; 1
    1f02:	50 e0       	ldi	r21, 0x00	; 0
    1f04:	fc 01       	movw	r30, r24
    1f06:	53 83       	std	Z+3, r21	; 0x03
    1f08:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1f0a:	27 ff       	sbrs	r18, 7
    1f0c:	01 c0       	rjmp	.+2      	; 0x1f10 <install+0x32>
    1f0e:	78 94       	sei
    1f10:	08 95       	ret

00001f12 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1f12:	8c 01       	movw	r16, r24
    1f14:	7b 01       	movw	r14, r22
    1f16:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1f18:	8f b7       	in	r24, 0x3f	; 63
    1f1a:	f8 94       	cli
    initialize();
    1f1c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <initialize>
    ENABLE(1);
    1f20:	78 94       	sei
    if (m != NULL)
    1f22:	e1 14       	cp	r14, r1
    1f24:	f1 04       	cpc	r15, r1
    1f26:	41 f0       	breq	.+16     	; 0x1f38 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	a9 01       	movw	r20, r18
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	70 e0       	ldi	r23, 0x00	; 0
    1f32:	cb 01       	movw	r24, r22
    1f34:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <async>
    DISABLE(status);
    1f38:	8f b7       	in	r24, 0x3f	; 63
    1f3a:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1f3c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <schedule>
    ENABLE(1);
    1f40:	78 94       	sei
    while (1) {

        SLEEP();
    1f42:	81 e0       	ldi	r24, 0x01	; 1
    1f44:	83 bf       	out	0x33, r24	; 51
    1f46:	88 95       	sleep
    1f48:	fd cf       	rjmp	.-6      	; 0x1f44 <tinytimber+0x32>

00001f4a <__divmodsi4>:
    1f4a:	05 2e       	mov	r0, r21
    1f4c:	97 fb       	bst	r25, 7
    1f4e:	1e f4       	brtc	.+6      	; 0x1f56 <__divmodsi4+0xc>
    1f50:	00 94       	com	r0
    1f52:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <__negsi2>
    1f56:	57 fd       	sbrc	r21, 7
    1f58:	07 d0       	rcall	.+14     	; 0x1f68 <__divmodsi4_neg2>
    1f5a:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <__udivmodsi4>
    1f5e:	07 fc       	sbrc	r0, 7
    1f60:	03 d0       	rcall	.+6      	; 0x1f68 <__divmodsi4_neg2>
    1f62:	4e f4       	brtc	.+18     	; 0x1f76 <__divmodsi4_exit>
    1f64:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__negsi2>

00001f68 <__divmodsi4_neg2>:
    1f68:	50 95       	com	r21
    1f6a:	40 95       	com	r20
    1f6c:	30 95       	com	r19
    1f6e:	21 95       	neg	r18
    1f70:	3f 4f       	sbci	r19, 0xFF	; 255
    1f72:	4f 4f       	sbci	r20, 0xFF	; 255
    1f74:	5f 4f       	sbci	r21, 0xFF	; 255

00001f76 <__divmodsi4_exit>:
    1f76:	08 95       	ret

00001f78 <__negsi2>:
    1f78:	90 95       	com	r25
    1f7a:	80 95       	com	r24
    1f7c:	70 95       	com	r23
    1f7e:	61 95       	neg	r22
    1f80:	7f 4f       	sbci	r23, 0xFF	; 255
    1f82:	8f 4f       	sbci	r24, 0xFF	; 255
    1f84:	9f 4f       	sbci	r25, 0xFF	; 255
    1f86:	08 95       	ret

00001f88 <__udivmodsi4>:
    1f88:	a1 e2       	ldi	r26, 0x21	; 33
    1f8a:	1a 2e       	mov	r1, r26
    1f8c:	aa 1b       	sub	r26, r26
    1f8e:	bb 1b       	sub	r27, r27
    1f90:	fd 01       	movw	r30, r26
    1f92:	0d c0       	rjmp	.+26     	; 0x1fae <__udivmodsi4_ep>

00001f94 <__udivmodsi4_loop>:
    1f94:	aa 1f       	adc	r26, r26
    1f96:	bb 1f       	adc	r27, r27
    1f98:	ee 1f       	adc	r30, r30
    1f9a:	ff 1f       	adc	r31, r31
    1f9c:	a2 17       	cp	r26, r18
    1f9e:	b3 07       	cpc	r27, r19
    1fa0:	e4 07       	cpc	r30, r20
    1fa2:	f5 07       	cpc	r31, r21
    1fa4:	20 f0       	brcs	.+8      	; 0x1fae <__udivmodsi4_ep>
    1fa6:	a2 1b       	sub	r26, r18
    1fa8:	b3 0b       	sbc	r27, r19
    1faa:	e4 0b       	sbc	r30, r20
    1fac:	f5 0b       	sbc	r31, r21

00001fae <__udivmodsi4_ep>:
    1fae:	66 1f       	adc	r22, r22
    1fb0:	77 1f       	adc	r23, r23
    1fb2:	88 1f       	adc	r24, r24
    1fb4:	99 1f       	adc	r25, r25
    1fb6:	1a 94       	dec	r1
    1fb8:	69 f7       	brne	.-38     	; 0x1f94 <__udivmodsi4_loop>
    1fba:	60 95       	com	r22
    1fbc:	70 95       	com	r23
    1fbe:	80 95       	com	r24
    1fc0:	90 95       	com	r25
    1fc2:	9b 01       	movw	r18, r22
    1fc4:	ac 01       	movw	r20, r24
    1fc6:	bd 01       	movw	r22, r26
    1fc8:	cf 01       	movw	r24, r30
    1fca:	08 95       	ret

00001fcc <setjmp>:
    1fcc:	dc 01       	movw	r26, r24
    1fce:	2d 92       	st	X+, r2
    1fd0:	3d 92       	st	X+, r3
    1fd2:	4d 92       	st	X+, r4
    1fd4:	5d 92       	st	X+, r5
    1fd6:	6d 92       	st	X+, r6
    1fd8:	7d 92       	st	X+, r7
    1fda:	8d 92       	st	X+, r8
    1fdc:	9d 92       	st	X+, r9
    1fde:	ad 92       	st	X+, r10
    1fe0:	bd 92       	st	X+, r11
    1fe2:	cd 92       	st	X+, r12
    1fe4:	dd 92       	st	X+, r13
    1fe6:	ed 92       	st	X+, r14
    1fe8:	fd 92       	st	X+, r15
    1fea:	0d 93       	st	X+, r16
    1fec:	1d 93       	st	X+, r17
    1fee:	cd 93       	st	X+, r28
    1ff0:	dd 93       	st	X+, r29
    1ff2:	ff 91       	pop	r31
    1ff4:	ef 91       	pop	r30
    1ff6:	8d b7       	in	r24, 0x3d	; 61
    1ff8:	8d 93       	st	X+, r24
    1ffa:	8e b7       	in	r24, 0x3e	; 62
    1ffc:	8d 93       	st	X+, r24
    1ffe:	8f b7       	in	r24, 0x3f	; 63
    2000:	8d 93       	st	X+, r24
    2002:	ed 93       	st	X+, r30
    2004:	fd 93       	st	X+, r31
    2006:	88 27       	eor	r24, r24
    2008:	99 27       	eor	r25, r25
    200a:	09 94       	ijmp

0000200c <longjmp>:
    200c:	dc 01       	movw	r26, r24
    200e:	cb 01       	movw	r24, r22
    2010:	81 30       	cpi	r24, 0x01	; 1
    2012:	91 05       	cpc	r25, r1
    2014:	81 1d       	adc	r24, r1
    2016:	2d 90       	ld	r2, X+
    2018:	3d 90       	ld	r3, X+
    201a:	4d 90       	ld	r4, X+
    201c:	5d 90       	ld	r5, X+
    201e:	6d 90       	ld	r6, X+
    2020:	7d 90       	ld	r7, X+
    2022:	8d 90       	ld	r8, X+
    2024:	9d 90       	ld	r9, X+
    2026:	ad 90       	ld	r10, X+
    2028:	bd 90       	ld	r11, X+
    202a:	cd 90       	ld	r12, X+
    202c:	dd 90       	ld	r13, X+
    202e:	ed 90       	ld	r14, X+
    2030:	fd 90       	ld	r15, X+
    2032:	0d 91       	ld	r16, X+
    2034:	1d 91       	ld	r17, X+
    2036:	cd 91       	ld	r28, X+
    2038:	dd 91       	ld	r29, X+
    203a:	ed 91       	ld	r30, X+
    203c:	fd 91       	ld	r31, X+
    203e:	0d 90       	ld	r0, X+
    2040:	f8 94       	cli
    2042:	fe bf       	out	0x3e, r31	; 62
    2044:	0f be       	out	0x3f, r0	; 63
    2046:	ed bf       	out	0x3d, r30	; 61
    2048:	ed 91       	ld	r30, X+
    204a:	fd 91       	ld	r31, X+
    204c:	09 94       	ijmp

0000204e <_exit>:
    204e:	f8 94       	cli

00002050 <__stop_program>:
    2050:	ff cf       	rjmp	.-2      	; 0x2050 <__stop_program>
